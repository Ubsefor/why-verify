
theory Axiomatic_Padding 
                           use why3.Bool.Bool 
                           
end

theory Int32_of_Int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int32.t = (Int32.of_int (Int16.to_int n))
  
end

theory Bit_int32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int32_of_Int16
  
  use export enum.Bit_int32_of_bit_int16
  
end

theory Int64_of_Int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int64.t = (Int64.of_int (Int16.to_int n))
  
end

theory Bit_int64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int64_of_Int16
  
  use export enum.Bit_int64_of_bit_int16
  
end

theory Int64_of_Int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int64.t = (Int64.of_int (Int32.to_int n))
  
end

theory Bit_int64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int64_of_Int32
  
  use export enum.Bit_int64_of_bit_int32
  
end

theory Int8_of_Int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int8.t = (Int8.of_int (Int16.to_int n))
  
end

theory Bit_int8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int8_of_Int16
  
  use export enum.Bit_int8_of_bit_int16
  
end

theory Int8_of_Int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int8.t = (Int8.of_int (Int32.to_int n))
  
end

theory Bit_int8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int8_of_Int32
  
  use export enum.Bit_int8_of_bit_int32
  
end

theory Int8_of_Int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int8.t = (Int8.of_int (Int64.to_int n))
  
end

theory Bit_int8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int8_of_Int64
  
  use export enum.Bit_int8_of_bit_int64
  
end

theory Uint16_of_Int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint16.t = (Uint16.of_int (Int16.to_int n))
  
end

theory Bit_uint16_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint16_of_Int16
  
  use export enum.Bit_uint16_of_bit_int16
  
end

theory Uint16_of_Int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint16.t = (Uint16.of_int (Int32.to_int n))
  
end

theory Bit_uint16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint16_of_Int32
  
  use export enum.Bit_uint16_of_bit_int32
  
end

theory Uint16_of_Int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint16.t = (Uint16.of_int (Int64.to_int n))
  
end

theory Bit_uint16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint16_of_Int64
  
  use export enum.Bit_uint16_of_bit_int64
  
end

theory Uint16_of_Int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint16.t = (Uint16.of_int (Int8.to_int n))
  
end

theory Bit_uint16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint16_of_Int8
  
  use export enum.Bit_uint16_of_bit_int8
  
end

theory Uint32_of_Int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint32.t = (Uint32.of_int (Int16.to_int n))
  
end

theory Bit_uint32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint32_of_Int16
  
  use export enum.Bit_uint32_of_bit_int16
  
end

theory Uint32_of_Int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint32.t = (Uint32.of_int (Int32.to_int n))
  
end

theory Bit_uint32_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint32_of_Int32
  
  use export enum.Bit_uint32_of_bit_int32
  
end

theory Uint32_of_Int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint32.t = (Uint32.of_int (Int64.to_int n))
  
end

theory Bit_uint32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint32_of_Int64
  
  use export enum.Bit_uint32_of_bit_int64
  
end

theory Uint32_of_Int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint32.t = (Uint32.of_int (Int8.to_int n))
  
end

theory Bit_uint32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint32_of_Int8
  
  use export enum.Bit_uint32_of_bit_int8
  
end

theory Uint32_of_Uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint32.t = (Uint32.of_int (Uint16.to_int n))
  
end

theory Bit_uint32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint16
  
  use export enum.Bit_uint32_of_bit_uint16
  
end

theory Uint64_of_Int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint64.t = (Uint64.of_int (Int16.to_int n))
  
end

theory Bit_uint64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint64_of_Int16
  
  use export enum.Bit_uint64_of_bit_int16
  
end

theory Uint64_of_Int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint64.t = (Uint64.of_int (Int32.to_int n))
  
end

theory Bit_uint64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint64_of_Int32
  
  use export enum.Bit_uint64_of_bit_int32
  
end

theory Uint64_of_Int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint64.t = (Uint64.of_int (Int64.to_int n))
  
end

theory Bit_uint64_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint64_of_Int64
  
  use export enum.Bit_uint64_of_bit_int64
  
end

theory Uint64_of_Int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint64.t = (Uint64.of_int (Int8.to_int n))
  
end

theory Bit_uint64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint64_of_Int8
  
  use export enum.Bit_uint64_of_bit_int8
  
end

theory Uint64_of_Uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint64.t = (Uint64.of_int (Uint16.to_int n))
  
end

theory Bit_uint64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint16
  
  use export enum.Bit_uint64_of_bit_uint16
  
end

theory Uint64_of_Uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint64.t = (Uint64.of_int (Uint32.to_int n))
  
end

theory Bit_uint64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint32
  
  use export enum.Bit_uint64_of_bit_uint32
  
end

theory Uint8_of_Int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint8.t = (Uint8.of_int (Int16.to_int n))
  
end

theory Bit_uint8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint8_of_Int16
  
  use export enum.Bit_uint8_of_bit_int16
  
end

theory Uint8_of_Int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint8.t = (Uint8.of_int (Int32.to_int n))
  
end

theory Bit_uint8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint8_of_Int32
  
  use export enum.Bit_uint8_of_bit_int32
  
end

theory Uint8_of_Int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint8.t = (Uint8.of_int (Int64.to_int n))
  
end

theory Bit_uint8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint8_of_Int64
  
  use export enum.Bit_uint8_of_bit_int64
  
end

theory Uint8_of_Int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint8.t = (Uint8.of_int (Int8.to_int n))
  
end

theory Bit_uint8_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint8_of_Int8
  
  use export enum.Bit_uint8_of_bit_int8
  
end

theory Uint8_of_Uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint8.t = (Uint8.of_int (Uint16.to_int n))
  
end

theory Bit_uint8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint16
  
  use export enum.Bit_uint8_of_bit_uint16
  
end

theory Uint8_of_Uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint8.t = (Uint8.of_int (Uint32.to_int n))
  
end

theory Bit_uint8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint32
  
  use export enum.Bit_uint8_of_bit_uint32
  
end

theory Uint8_of_Uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint8.t = (Uint8.of_int (Uint64.to_int n))
  
end

theory Bit_uint8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint64
  
  use export enum.Bit_uint8_of_bit_uint64
  
end

theory Int16_of_Int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int16.t = (Int16.of_int (Int32.to_int n))
  
end

theory Bit_int16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int16_of_Int32
  
  use export enum.Bit_int16_of_bit_int32
  
end

theory Int16_of_Int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int16.t = (Int16.of_int (Int64.to_int n))
  
end

theory Bit_int16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int16_of_Int64
  
  use export enum.Bit_int16_of_bit_int64
  
end

theory Int32_of_Int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int32.t = (Int32.of_int (Int64.to_int n))
  
end

theory Bit_int32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int32_of_Int64
  
  use export enum.Bit_int32_of_bit_int64
  
end

theory Int16_of_Int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int16.t = (Int16.of_int (Int8.to_int n))
  
end

theory Bit_int16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int16_of_Int8
  
  use export enum.Bit_int16_of_bit_int8
  
end

theory Int32_of_Int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int32.t = (Int32.of_int (Int8.to_int n))
  
end

theory Bit_int32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int32_of_Int8
  
  use export enum.Bit_int32_of_bit_int8
  
end

theory Int64_of_Int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int64.t = (Int64.of_int (Int8.to_int n))
  
end

theory Bit_int64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int64_of_Int8
  
  use export enum.Bit_int64_of_bit_int8
  
end

theory Int16_of_Uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int16.t = (Int16.of_int (Uint16.to_int n))
  
end

theory Bit_int16_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int16_of_Uint16
  
  use export enum.Bit_int16_of_bit_uint16
  
end

theory Int32_of_Uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int32.t = (Int32.of_int (Uint16.to_int n))
  
end

theory Bit_int32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int32_of_Uint16
  
  use export enum.Bit_int32_of_bit_uint16
  
end

theory Int64_of_Uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int64.t = (Int64.of_int (Uint16.to_int n))
  
end

theory Bit_int64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int64_of_Uint16
  
  use export enum.Bit_int64_of_bit_uint16
  
end

theory Int8_of_Uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int8.t = (Int8.of_int (Uint16.to_int n))
  
end

theory Bit_int8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int8_of_Uint16
  
  use export enum.Bit_int8_of_bit_uint16
  
end

theory Int16_of_Uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int16.t = (Int16.of_int (Uint32.to_int n))
  
end

theory Bit_int16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int16_of_Uint32
  
  use export enum.Bit_int16_of_bit_uint32
  
end

theory Int32_of_Uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int32.t = (Int32.of_int (Uint32.to_int n))
  
end

theory Bit_int32_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int32_of_Uint32
  
  use export enum.Bit_int32_of_bit_uint32
  
end

theory Int64_of_Uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int64.t = (Int64.of_int (Uint32.to_int n))
  
end

theory Bit_int64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int64_of_Uint32
  
  use export enum.Bit_int64_of_bit_uint32
  
end

theory Int8_of_Uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int8.t = (Int8.of_int (Uint32.to_int n))
  
end

theory Bit_int8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int8_of_Uint32
  
  use export enum.Bit_int8_of_bit_uint32
  
end

theory Uint16_of_Uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint16.t = (Uint16.of_int (Uint32.to_int n))
  
end

theory Bit_uint16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint32
  
  use export enum.Bit_uint16_of_bit_uint32
  
end

theory Int16_of_Uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int16.t = (Int16.of_int (Uint64.to_int n))
  
end

theory Bit_int16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int16_of_Uint64
  
  use export enum.Bit_int16_of_bit_uint64
  
end

theory Int32_of_Uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int32.t = (Int32.of_int (Uint64.to_int n))
  
end

theory Bit_int32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int32_of_Uint64
  
  use export enum.Bit_int32_of_bit_uint64
  
end

theory Int64_of_Uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int64.t = (Int64.of_int (Uint64.to_int n))
  
end

theory Bit_int64_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int64_of_Uint64
  
  use export enum.Bit_int64_of_bit_uint64
  
end

theory Int8_of_Uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int8.t = (Int8.of_int (Uint64.to_int n))
  
end

theory Bit_int8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int8_of_Uint64
  
  use export enum.Bit_int8_of_bit_uint64
  
end

theory Uint16_of_Uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint16.t = (Uint16.of_int (Uint64.to_int n))
  
end

theory Bit_uint16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint64
  
  use export enum.Bit_uint16_of_bit_uint64
  
end

theory Uint32_of_Uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint32.t = (Uint32.of_int (Uint64.to_int n))
  
end

theory Bit_uint32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint64
  
  use export enum.Bit_uint32_of_bit_uint64
  
end

theory Int16_of_Uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int16.t = (Int16.of_int (Uint8.to_int n))
  
end

theory Bit_int16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int16_of_Uint8
  
  use export enum.Bit_int16_of_bit_uint8
  
end

theory Int32_of_Uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int32.t = (Int32.of_int (Uint8.to_int n))
  
end

theory Bit_int32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int32_of_Uint8
  
  use export enum.Bit_int32_of_bit_uint8
  
end

theory Int64_of_Uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int64.t = (Int64.of_int (Uint8.to_int n))
  
end

theory Bit_int64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int64_of_Uint8
  
  use export enum.Bit_int64_of_bit_uint8
  
end

theory Int8_of_Uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int8.t = (Int8.of_int (Uint8.to_int n))
  
end

theory Bit_int8_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int8_of_Uint8
  
  use export enum.Bit_int8_of_bit_uint8
  
end

theory Uint16_of_Uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint16.t = (Uint16.of_int (Uint8.to_int n))
  
end

theory Bit_uint16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint8
  
  use export enum.Bit_uint16_of_bit_uint8
  
end

theory Uint32_of_Uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint32.t = (Uint32.of_int (Uint8.to_int n))
  
end

theory Bit_uint32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint8
  
  use export enum.Bit_uint32_of_bit_uint8
  
end

theory Uint64_of_Uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint64.t = (Uint64.of_int (Uint8.to_int n))
  
end

theory Bit_uint64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint8
  
  use export enum.Bit_uint64_of_bit_uint8
  
end

module Unsafe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Globals_simple

  use why3.Bool.Bool 
  
end

theory Root_voidP

  use why3.Bool.Bool 
  
  use import core.Voidp 
  
end

module Root_voidP_safe

  use why3.Bool.Bool 
  
end

module Root_voidP_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Vertex_2_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Vertex_2_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Graph_4_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Graph_4_unsafe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Edge_3_safe

  use why3.Bool.Bool 
  
end

module Root___anonstruct_Edge_3_unsafe

  use why3.Bool.Bool 
  
end

theory Root___anonstruct_Graph_4

  use why3.Bool.Bool 
  
  type __anonstruct_Graph_4 
  
end

theory Root___anonstruct_Edge_3

  use why3.Bool.Bool 
  
  type __anonstruct_Edge_3 
  
end

theory Axiomatic_EdgesCount

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use bool.Bool 
  
  use why3.Bool.Bool 
  
  function count (pointer __anonstruct_Graph_4) int int int int (memory
  __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)) (memory
  __anonstruct_Edge_3 Int32.t) (memory __anonstruct_Edge_3 Int32.t) (memory
  __anonstruct_Edge_3 Int32.t) : int
  
  
  axiom Count_zero #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 84 81 188#
  "expl:Axiom count_zero"  :
  (forall __anonstruct_Graph_4_edges_g_5_8_at_L : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
   (forall __anonstruct_Edge_3_existent_0_edges_21_at_L : (memory
    __anonstruct_Edge_3 Int32.t).
    (forall __anonstruct_Edge_3_to_edges_21_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_from_edges_21_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 86 22 104#
      (forall g_6_0 : (pointer __anonstruct_Graph_4).
       (forall f_0_0 : int.
        (forall t_0_0 : int.
         (forall m_1 : int.
          (forall n_4 : int.
           (((>=) m_1 n_4) ->
            ((=)
            (count g_6_0 f_0_0 t_0_0 m_1 n_4
            __anonstruct_Graph_4_edges_g_5_8_at_L
            __anonstruct_Edge_3_existent_0_edges_21_at_L
            __anonstruct_Edge_3_to_edges_21_at_L
            __anonstruct_Edge_3_from_edges_21_at_L) (0)))))))))))))
  
  predicate count_one_p (g_7 : (pointer __anonstruct_Graph_4)) (f_1 : int)
  (t_1 : int) (m_2 : int) (__anonstruct_Graph_4_edges_g_5_8_at_L : (memory
  __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
  (__anonstruct_Edge_3_existent_0_edges_21_at_L : (memory __anonstruct_Edge_3
  Int32.t)) (__anonstruct_Edge_3_to_edges_21_at_L : (memory
  __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_from_edges_21_at_L :
  (memory __anonstruct_Edge_3 Int32.t))
  =
     ((=)
     (count g_7 f_1 t_1 m_2 (Int.(+) m_2 (1))
     __anonstruct_Graph_4_edges_g_5_8_at_L
     __anonstruct_Edge_3_existent_0_edges_21_at_L
     __anonstruct_Edge_3_to_edges_21_at_L
     __anonstruct_Edge_3_from_edges_21_at_L)
     (if
      (Bool.andb
      (Bool.andb
      ((<>)
      (Int32.to_int
      (select __anonstruct_Edge_3_existent_0_edges_21_at_L
      (shift (select __anonstruct_Graph_4_edges_g_5_8_at_L g_7) m_2))) (0))
      ((=)
      (Int32.to_int
      (select __anonstruct_Edge_3_from_edges_21_at_L
      (shift (select __anonstruct_Graph_4_edges_g_5_8_at_L g_7) m_2))) f_1))
      ((=)
      (Int32.to_int
      (select __anonstruct_Edge_3_to_edges_21_at_L
      (shift (select __anonstruct_Graph_4_edges_g_5_8_at_L g_7) m_2))) t_1))
      then (1) else (0)))
  
  
  axiom Count_one #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 90 115 200#
  "expl:Axiom count_one"  :
  (forall __anonstruct_Graph_4_edges_g_5_8_at_L : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
   (forall __anonstruct_Edge_3_existent_0_edges_21_at_L : (memory
    __anonstruct_Edge_3 Int32.t).
    (forall __anonstruct_Edge_3_to_edges_21_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_from_edges_21_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 92 24 82#
      (forall g_8 : (pointer __anonstruct_Graph_4).
       (forall f_2_0 : int.
        (forall t_2_0 : int.
         (forall m_3 : int.
          (count_one_p g_8 f_2_0 t_2_0 m_3
          __anonstruct_Graph_4_edges_g_5_8_at_L
          __anonstruct_Edge_3_existent_0_edges_21_at_L
          __anonstruct_Edge_3_to_edges_21_at_L
          __anonstruct_Edge_3_from_edges_21_at_L))))))))))
  
  predicate count_split_p (g_9 : (pointer __anonstruct_Graph_4)) (f_3 : int)
  (t_3 : int) (m_4 : int) (n_5 : int) (k_5 : int)
  (__anonstruct_Graph_4_edges_g_5_8_at_L : (memory __anonstruct_Graph_4
  (pointer __anonstruct_Edge_3)))
  (__anonstruct_Edge_3_existent_0_edges_21_at_L : (memory __anonstruct_Edge_3
  Int32.t)) (__anonstruct_Edge_3_to_edges_21_at_L : (memory
  __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_from_edges_21_at_L :
  (memory __anonstruct_Edge_3 Int32.t))
  =
     ((=)
     (count g_9 f_3 t_3 m_4 k_5 __anonstruct_Graph_4_edges_g_5_8_at_L
     __anonstruct_Edge_3_existent_0_edges_21_at_L
     __anonstruct_Edge_3_to_edges_21_at_L
     __anonstruct_Edge_3_from_edges_21_at_L)
     (Int.(+)
     (count g_9 f_3 t_3 m_4 n_5 __anonstruct_Graph_4_edges_g_5_8_at_L
     __anonstruct_Edge_3_existent_0_edges_21_at_L
     __anonstruct_Edge_3_to_edges_21_at_L
     __anonstruct_Edge_3_from_edges_21_at_L)
     (count g_9 f_3 t_3 n_5 k_5 __anonstruct_Graph_4_edges_g_5_8_at_L
     __anonstruct_Edge_3_existent_0_edges_21_at_L
     __anonstruct_Edge_3_to_edges_21_at_L
     __anonstruct_Edge_3_from_edges_21_at_L)))
  
  
  axiom Count_split #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 95 76 201#
  "expl:Axiom count_split"  :
  (forall __anonstruct_Graph_4_edges_g_5_8_at_L : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
   (forall __anonstruct_Edge_3_existent_0_edges_21_at_L : (memory
    __anonstruct_Edge_3 Int32.t).
    (forall __anonstruct_Edge_3_to_edges_21_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_from_edges_21_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 97 26 122#
      (forall g_10 : (pointer __anonstruct_Graph_4).
       (forall f_4 : int.
        (forall t_4 : int.
         (forall m_5 : int.
          (forall n_6 : int.
           (forall k_6 : int.
            ((((<=) m_5 n_6) /\ ((<=) n_6 k_6)) ->
             (count_split_p g_10 f_4 t_4 m_5 n_6 k_6
             __anonstruct_Graph_4_edges_g_5_8_at_L
             __anonstruct_Edge_3_existent_0_edges_21_at_L
             __anonstruct_Edge_3_to_edges_21_at_L
             __anonstruct_Edge_3_from_edges_21_at_L)))))))))))))
  
end

theory Lemma_count_one_l #"3-2_c.jc" 142 0 538# "expl:Lemma count_one_l"

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use bool.Bool 
  
  use import Axiomatic_EdgesCount 
  
  use why3.Bool.Bool 
  
  lemma Count_one_l #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 103 3 1190#
  "expl:Lemma count_one_l"  :
  (forall __anonstruct_Graph_4_edges_g_12_24_at_L : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
   (forall __anonstruct_Edge_3_existent_0_edges_25_at_L : (memory
    __anonstruct_Edge_3 Int32.t).
    (forall __anonstruct_Edge_3_to_edges_25_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_from_edges_25_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 106 4 209#
      (forall g_12 : (pointer __anonstruct_Graph_4).
       (forall f_6 : int.
        (forall t_6 : int.
         (forall m_6 : int.
          ((count_one_p g_12 f_6 t_6 m_6
           __anonstruct_Graph_4_edges_g_12_24_at_L
           __anonstruct_Edge_3_existent_0_edges_25_at_L
           __anonstruct_Edge_3_to_edges_25_at_L
           __anonstruct_Edge_3_from_edges_25_at_L)
          /\
          ((=)
          (count g_12 f_6 t_6 m_6 (Int.(+) m_6 (1))
          __anonstruct_Graph_4_edges_g_12_24_at_L
          __anonstruct_Edge_3_existent_0_edges_25_at_L
          __anonstruct_Edge_3_to_edges_25_at_L
          __anonstruct_Edge_3_from_edges_25_at_L)
          (if
           (Bool.andb
           (Bool.andb
           (Int32.(<>)
           (select __anonstruct_Edge_3_existent_0_edges_25_at_L
           (shift (select __anonstruct_Graph_4_edges_g_12_24_at_L g_12) m_6))
           (#"3-2_c.jc" 149 60 72# "expl:Integer cast" (Int32.of_int (0))))
           ((=)
           (Int32.to_int
           (select __anonstruct_Edge_3_from_edges_25_at_L
           (shift (select __anonstruct_Graph_4_edges_g_12_24_at_L g_12) m_6)))
           f_6))
           ((=)
           (Int32.to_int
           (select __anonstruct_Edge_3_to_edges_25_at_L
           (shift (select __anonstruct_Graph_4_edges_g_12_24_at_L g_12) m_6)))
           t_6)) then (1) else (0)))))))))))))
  
end

theory Logic_all_count

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import Axiomatic_EdgesCount 
  
  use why3.Bool.Bool 
  
  function all_count (g_11 : (pointer __anonstruct_Graph_4)) (f_5 : int) (t_5
  : int) (__anonstruct_Graph_4_esize_g_11_11_at_L : (memory
  __anonstruct_Graph_4 Int32.t)) (__anonstruct_Graph_4_edges_g_11_11_at_L :
  (memory __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
  (__anonstruct_Edge_3_existent_0_edges_69_at_L : (memory __anonstruct_Edge_3
  Int32.t)) (__anonstruct_Edge_3_to_edges_69_at_L : (memory
  __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_from_edges_69_at_L :
  (memory __anonstruct_Edge_3 Int32.t)) : int
  =
     (count g_11 f_5 t_5 (0)
     (Int32.to_int (select __anonstruct_Graph_4_esize_g_11_11_at_L g_11))
     __anonstruct_Graph_4_edges_g_11_11_at_L
     __anonstruct_Edge_3_existent_0_edges_69_at_L
     __anonstruct_Edge_3_to_edges_69_at_L
     __anonstruct_Edge_3_from_edges_69_at_L)
  
  
end

theory Lemma_all_count_l #"3-2_c.jc" 153 0 949# "expl:Lemma all_count_l"

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use why3.Bool.Bool 
  
  lemma All_count_l #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 110 38 990#
  "expl:Lemma all_count_l"  :
  (forall __anonstruct_Graph_4_esize_g_13_26_at_L : (memory
   __anonstruct_Graph_4 Int32.t).
   (forall __anonstruct_Graph_4_ecnt_g_13_26_at_L : (memory
    __anonstruct_Graph_4 Int32.t).
    (forall __anonstruct_Graph_4_edges_g_13_26_at_L : (memory
     __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
     (forall __anonstruct_Edge_3_existent_0_edges_73_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (forall __anonstruct_Edge_3_to_edges_73_at_L : (memory
       __anonstruct_Edge_3 Int32.t).
       (forall __anonstruct_Edge_3_from_edges_73_at_L : (memory
        __anonstruct_Edge_3 Int32.t).
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 113 4 350#
        (forall g_13 : (pointer __anonstruct_Graph_4).
         (forall k_7 : int.
          (forall f_7 : int.
           (forall t_7 : int.
            (((Int32.(<=) (#"3-2_c.jc" 158 19 31# "expl:Integer cast"
              (Int32.of_int (0)))
              (select __anonstruct_Graph_4_ecnt_g_13_26_at_L g_13))
             /\
             (Int32.(<=) (select __anonstruct_Graph_4_ecnt_g_13_26_at_L g_13)
             (select __anonstruct_Graph_4_esize_g_13_26_at_L g_13))) ->
             (((=)
              (all_count g_13 f_7 t_7 __anonstruct_Graph_4_esize_g_13_26_at_L
              __anonstruct_Graph_4_edges_g_13_26_at_L
              __anonstruct_Edge_3_existent_0_edges_73_at_L
              __anonstruct_Edge_3_to_edges_73_at_L
              __anonstruct_Edge_3_from_edges_73_at_L)
              (count g_13 f_7 t_7 (0)
              (Int32.to_int
              (select __anonstruct_Graph_4_esize_g_13_26_at_L g_13))
              __anonstruct_Graph_4_edges_g_13_26_at_L
              __anonstruct_Edge_3_existent_0_edges_73_at_L
              __anonstruct_Edge_3_to_edges_73_at_L
              __anonstruct_Edge_3_from_edges_73_at_L))
             /\
             (((=)
              (all_count g_13 f_7 t_7 __anonstruct_Graph_4_esize_g_13_26_at_L
              __anonstruct_Graph_4_edges_g_13_26_at_L
              __anonstruct_Edge_3_existent_0_edges_73_at_L
              __anonstruct_Edge_3_to_edges_73_at_L
              __anonstruct_Edge_3_from_edges_73_at_L)
              (Int.(+)
              (count g_13 f_7 t_7 (0)
              (Int32.to_int
              (select __anonstruct_Graph_4_ecnt_g_13_26_at_L g_13))
              __anonstruct_Graph_4_edges_g_13_26_at_L
              __anonstruct_Edge_3_existent_0_edges_73_at_L
              __anonstruct_Edge_3_to_edges_73_at_L
              __anonstruct_Edge_3_from_edges_73_at_L)
              (count g_13 f_7 t_7
              (Int32.to_int
              (select __anonstruct_Graph_4_ecnt_g_13_26_at_L g_13))
              (Int32.to_int
              (select __anonstruct_Graph_4_esize_g_13_26_at_L g_13))
              __anonstruct_Graph_4_edges_g_13_26_at_L
              __anonstruct_Edge_3_existent_0_edges_73_at_L
              __anonstruct_Edge_3_to_edges_73_at_L
              __anonstruct_Edge_3_from_edges_73_at_L)))
             /\
             ((=)
             (count g_13 f_7 t_7 (0)
             (Int32.to_int
             (select __anonstruct_Graph_4_esize_g_13_26_at_L g_13))
             __anonstruct_Graph_4_edges_g_13_26_at_L
             __anonstruct_Edge_3_existent_0_edges_73_at_L
             __anonstruct_Edge_3_to_edges_73_at_L
             __anonstruct_Edge_3_from_edges_73_at_L)
             (Int.(+)
             (count g_13 f_7 t_7 (0)
             (Int32.to_int
             (select __anonstruct_Graph_4_ecnt_g_13_26_at_L g_13))
             __anonstruct_Graph_4_edges_g_13_26_at_L
             __anonstruct_Edge_3_existent_0_edges_73_at_L
             __anonstruct_Edge_3_to_edges_73_at_L
             __anonstruct_Edge_3_from_edges_73_at_L)
             (count g_13 f_7 t_7
             (Int32.to_int
             (select __anonstruct_Graph_4_ecnt_g_13_26_at_L g_13))
             (Int32.to_int
             (select __anonstruct_Graph_4_esize_g_13_26_at_L g_13))
             __anonstruct_Graph_4_edges_g_13_26_at_L
             __anonstruct_Edge_3_existent_0_edges_73_at_L
             __anonstruct_Edge_3_to_edges_73_at_L
             __anonstruct_Edge_3_from_edges_73_at_L)))))))))))))))))
  
end

theory Lemma_all_count_l2 #"3-2_c.jc" 170 0 510# "expl:Lemma all_count_l2"

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use why3.Bool.Bool 
  
  lemma All_count_l2
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 118 104 680#
  "expl:Lemma all_count_l2"  :
  (forall __anonstruct_Graph_4_ecnt_g_14_27_at_L : (memory
   __anonstruct_Graph_4 Int32.t).
   (forall __anonstruct_Graph_4_edges_g_14_27_at_L : (memory
    __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
    (forall __anonstruct_Edge_3_existent_0_edges_89_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_to_edges_89_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (forall __anonstruct_Edge_3_from_edges_89_at_L : (memory
       __anonstruct_Edge_3 Int32.t).
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 121 4 173#
       (forall g_14 : (pointer __anonstruct_Graph_4).
        (forall k_8 : int.
         (forall f_8 : int.
          (forall t_8 : int.
           (forall m_7 : int.
            ((((<=) (0) (Int.(-) m_7 (1))) /\
             ((<=) (Int.(-) m_7 (1))
             (Int32.to_int
             (select __anonstruct_Graph_4_ecnt_g_14_27_at_L g_14)))) ->
             ((=)
             (count g_14 f_8 t_8 (0) m_7
             __anonstruct_Graph_4_edges_g_14_27_at_L
             __anonstruct_Edge_3_existent_0_edges_89_at_L
             __anonstruct_Edge_3_to_edges_89_at_L
             __anonstruct_Edge_3_from_edges_89_at_L)
             (Int.(+)
             (count g_14 f_8 t_8 (0) (Int.(-) m_7 (1))
             __anonstruct_Graph_4_edges_g_14_27_at_L
             __anonstruct_Edge_3_existent_0_edges_89_at_L
             __anonstruct_Edge_3_to_edges_89_at_L
             __anonstruct_Edge_3_from_edges_89_at_L)
             (count g_14 f_8 t_8 (Int.(-) m_7 (1)) m_7
             __anonstruct_Graph_4_edges_g_14_27_at_L
             __anonstruct_Edge_3_existent_0_edges_89_at_L
             __anonstruct_Edge_3_to_edges_89_at_L
             __anonstruct_Edge_3_from_edges_89_at_L)))))))))))))))
  
end

theory Lemma_count_zero_l #"3-2_c.jc" 182 0 316# "expl:Lemma count_zero_l"

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use why3.Bool.Bool 
  
  lemma Count_zero_l
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 123 95 471#
  "expl:Lemma count_zero_l"  :
  (forall __anonstruct_Graph_4_edges_g_15_28_at_L : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
   (forall __anonstruct_Edge_3_existent_0_edges_107_at_L : (memory
    __anonstruct_Edge_3 Int32.t).
    (forall __anonstruct_Edge_3_to_edges_107_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_from_edges_107_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 126 8 98#
      (forall g_15 : (pointer __anonstruct_Graph_4).
       (forall f_9 : int.
        (forall t_9 : int.
         (forall m_8 : int.
          (forall n_7 : int.
           (((>=) m_8 n_7) ->
            ((=)
            (count g_15 f_9 t_9 m_8 n_7
            __anonstruct_Graph_4_edges_g_15_28_at_L
            __anonstruct_Edge_3_existent_0_edges_107_at_L
            __anonstruct_Edge_3_to_edges_107_at_L
            __anonstruct_Edge_3_from_edges_107_at_L) (0)))))))))))))
  
end

theory Lemma_count_split_lemma #"3-2_c.jc" 191 0 597#
"expl:Lemma count_split_lemma"

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use why3.Bool.Bool 
  
  lemma Count_split_lemma
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 127 53 304#
  "expl:Lemma count_split_lemma"  :
  (forall __anonstruct_Graph_4_edges_g_16_29_at_L : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
   (forall __anonstruct_Edge_3_existent_0_edges_99_at_L : (memory
    __anonstruct_Edge_3 Int32.t).
    (forall __anonstruct_Edge_3_to_edges_99_at_L : (memory
     __anonstruct_Edge_3 Int32.t).
     (forall __anonstruct_Edge_3_from_edges_99_at_L : (memory
      __anonstruct_Edge_3 Int32.t).
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 130 8 219#
      (forall g_16 : (pointer __anonstruct_Graph_4).
       (forall f_10 : int.
        (forall t_10 : int.
         (forall m_9 : int.
          (forall n_8 : int.
           (forall k_9 : int.
            ((((<=) m_9 n_8) /\ ((<=) n_8 k_9)) ->
             ((count_split_p g_16 f_10 t_10 m_9 n_8 k_9
              __anonstruct_Graph_4_edges_g_16_29_at_L
              __anonstruct_Edge_3_existent_0_edges_99_at_L
              __anonstruct_Edge_3_to_edges_99_at_L
              __anonstruct_Edge_3_from_edges_99_at_L)
             /\
             ((=)
             (count g_16 f_10 t_10 m_9 k_9
             __anonstruct_Graph_4_edges_g_16_29_at_L
             __anonstruct_Edge_3_existent_0_edges_99_at_L
             __anonstruct_Edge_3_to_edges_99_at_L
             __anonstruct_Edge_3_from_edges_99_at_L)
             (Int.(+)
             (count g_16 f_10 t_10 m_9 n_8
             __anonstruct_Graph_4_edges_g_16_29_at_L
             __anonstruct_Edge_3_existent_0_edges_99_at_L
             __anonstruct_Edge_3_to_edges_99_at_L
             __anonstruct_Edge_3_from_edges_99_at_L)
             (count g_16 f_10 t_10 n_8 k_9
             __anonstruct_Graph_4_edges_g_16_29_at_L
             __anonstruct_Edge_3_existent_0_edges_99_at_L
             __anonstruct_Edge_3_to_edges_99_at_L
             __anonstruct_Edge_3_from_edges_99_at_L))))))))))))))))
  
end

theory Root___anonstruct_Vertex_2

  use why3.Bool.Bool 
  
  type __anonstruct_Vertex_2 
  
end

theory Logic_is_vertex

  use import Root___anonstruct_Graph_4 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate is_vertex (g : (pointer __anonstruct_Graph_4)) (v : int)
  (__anonstruct_Graph_4_vsize_g_2_at_L : (memory __anonstruct_Graph_4
  Int32.t))
  =
     (((<=) (0) v) /\
     ((<) v (Int32.to_int (select __anonstruct_Graph_4_vsize_g_2_at_L g))))
  
  
end

theory Logic_edge_valid

  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate edge_valid (g_0 : (pointer __anonstruct_Graph_4)) (k_1 : int)
  (__anonstruct_Graph_4_edges_g_0_3_at_L : (memory __anonstruct_Graph_4
  (pointer __anonstruct_Edge_3))) (__anonstruct_Graph_4_vsize_g_0_3_at_L :
  (memory __anonstruct_Graph_4 Int32.t))
  (__anonstruct_Graph_4_vertices_g_0_3_at_L : (memory __anonstruct_Graph_4
  (pointer __anonstruct_Vertex_2)))
  (__anonstruct_Edge_3_existent_0_edges_15_at_L : (memory __anonstruct_Edge_3
  Int32.t)) (__anonstruct_Edge_3_to_edges_15_at_L : (memory
  __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_from_edges_15_at_L :
  (memory __anonstruct_Edge_3 Int32.t))
  (__anonstruct_Vertex_2_existent_vertices_16_at_L : (memory
  __anonstruct_Vertex_2 Int32.t))
  =
     ((not
      ((=)
      (Int32.to_int
      (select __anonstruct_Edge_3_existent_0_edges_15_at_L
      (shift (select __anonstruct_Graph_4_edges_g_0_3_at_L g_0) k_1))) (0)))
      ->
      ((is_vertex g_0
       (Int32.to_int
       (select __anonstruct_Edge_3_from_edges_15_at_L
       (shift (select __anonstruct_Graph_4_edges_g_0_3_at_L g_0) k_1)))
       __anonstruct_Graph_4_vsize_g_0_3_at_L)
      /\
      ((is_vertex g_0
       (Int32.to_int
       (select __anonstruct_Edge_3_to_edges_15_at_L
       (shift (select __anonstruct_Graph_4_edges_g_0_3_at_L g_0) k_1)))
       __anonstruct_Graph_4_vsize_g_0_3_at_L)
      /\
      ((not
       ((=)
       (Int32.to_int
       (select __anonstruct_Vertex_2_existent_vertices_16_at_L
       (shift (select __anonstruct_Graph_4_vertices_g_0_3_at_L g_0)
       (Int32.to_int
       (select __anonstruct_Edge_3_from_edges_15_at_L
       (shift (select __anonstruct_Graph_4_edges_g_0_3_at_L g_0) k_1))))))
       (0)))
      /\
      (not
      ((=)
      (Int32.to_int
      (select __anonstruct_Vertex_2_existent_vertices_16_at_L
      (shift (select __anonstruct_Graph_4_vertices_g_0_3_at_L g_0)
      (Int32.to_int
      (select __anonstruct_Edge_3_to_edges_15_at_L
      (shift (select __anonstruct_Graph_4_edges_g_0_3_at_L g_0) k_1))))))
      (0)))))))
  
  
end

theory Logic_edges_valid

  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_edge_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate edges_valid (g_1 : (pointer __anonstruct_Graph_4)) (n_1 : int)
  (__anonstruct_Graph_4_edges_g_1_4_at_L : (memory __anonstruct_Graph_4
  (pointer __anonstruct_Edge_3))) (__anonstruct_Graph_4_vsize_g_1_4_at_L :
  (memory __anonstruct_Graph_4 Int32.t))
  (__anonstruct_Graph_4_vertices_g_1_4_at_L : (memory __anonstruct_Graph_4
  (pointer __anonstruct_Vertex_2)))
  (__anonstruct_Edge_3_existent_0_edges_39_at_L : (memory __anonstruct_Edge_3
  Int32.t)) (__anonstruct_Edge_3_to_edges_39_at_L : (memory
  __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_from_edges_39_at_L :
  (memory __anonstruct_Edge_3 Int32.t))
  (__anonstruct_Vertex_2_existent_vertices_40_at_L : (memory
  __anonstruct_Vertex_2 Int32.t))
  =
     (forall k_2 : int.
      ((((<=) (0) k_2) /\ ((<) k_2 n_1)) ->
       (edge_valid g_1 k_2 __anonstruct_Graph_4_edges_g_1_4_at_L
       __anonstruct_Graph_4_vsize_g_1_4_at_L
       __anonstruct_Graph_4_vertices_g_1_4_at_L
       __anonstruct_Edge_3_existent_0_edges_39_at_L
       __anonstruct_Edge_3_to_edges_39_at_L
       __anonstruct_Edge_3_from_edges_39_at_L
       __anonstruct_Vertex_2_existent_vertices_40_at_L)))
  
  
end

theory Logic_graph_valid

  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_edges_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  predicate graph_valid (g_2 : (pointer __anonstruct_Graph_4))
  (__anonstruct_Vertex_2_vertices_17_alloc_table_at_L : (alloc_table
  __anonstruct_Vertex_2)) (__anonstruct_Edge_3_edges_18_alloc_table_at_L :
  (alloc_table __anonstruct_Edge_3)) (__anonstruct_Graph_4_esize_g_2_5_at_L :
  (memory __anonstruct_Graph_4 Int32.t))
  (__anonstruct_Graph_4_ecnt_g_2_5_at_L : (memory __anonstruct_Graph_4
  Int32.t)) (__anonstruct_Graph_4_edges_g_2_5_at_L : (memory
  __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
  (__anonstruct_Graph_4_vsize_g_2_5_at_L : (memory __anonstruct_Graph_4
  Int32.t)) (__anonstruct_Graph_4_vertices_g_2_5_at_L : (memory
  __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
  (__anonstruct_Edge_3_existent_0_edges_18_at_L : (memory __anonstruct_Edge_3
  Int32.t)) (__anonstruct_Edge_3_to_edges_18_at_L : (memory
  __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_from_edges_18_at_L :
  (memory __anonstruct_Edge_3 Int32.t))
  (__anonstruct_Vertex_2_existent_vertices_17_at_L : (memory
  __anonstruct_Vertex_2 Int32.t))
  =
     ((Int32.(>) (select __anonstruct_Graph_4_vsize_g_2_5_at_L g_2)
      (#"3-2_c.jc" 59 24 36# "expl:Integer cast" (Int32.of_int (0))))
     /\
     ((Int32.(>) (select __anonstruct_Graph_4_esize_g_2_5_at_L g_2)
      (#"3-2_c.jc" 59 54 66# "expl:Integer cast" (Int32.of_int (0))))
     /\
     ((Int32.(>=) (select __anonstruct_Graph_4_esize_g_2_5_at_L g_2)
      (select __anonstruct_Graph_4_ecnt_g_2_5_at_L g_2))
     /\
     ((Int32.(>=) (select __anonstruct_Graph_4_ecnt_g_2_5_at_L g_2)
      (#"3-2_c.jc" 61 23 35# "expl:Integer cast" (Int32.of_int (0))))
     /\
     ((if
       ((<=) (0)
       (Int.(-)
       (Int32.to_int (select __anonstruct_Graph_4_vsize_g_2_5_at_L g_2)) (1)))
       then
       (((<=)
        (offset_min __anonstruct_Vertex_2_vertices_17_alloc_table_at_L
        (select __anonstruct_Graph_4_vertices_g_2_5_at_L g_2)) (0))
       /\
       (((>=)
        (offset_max __anonstruct_Vertex_2_vertices_17_alloc_table_at_L
        (select __anonstruct_Graph_4_vertices_g_2_5_at_L g_2))
        (Int.(-)
        (Int32.to_int (select __anonstruct_Graph_4_vsize_g_2_5_at_L g_2))
        (1)))
       /\
       (forall __framac_tmp2 : int.
        ((((<=) (0) __framac_tmp2) /\
         ((<=) __framac_tmp2
         (Int.(-)
         (Int32.to_int (select __anonstruct_Graph_4_vsize_g_2_5_at_L g_2))
         (1)))) -> ((=) true true))))) else ((=) true true))
     /\
     ((if
       ((<=) (0)
       (Int.(-)
       (Int32.to_int (select __anonstruct_Graph_4_esize_g_2_5_at_L g_2)) (1)))
       then
       (((<=)
        (offset_min __anonstruct_Edge_3_edges_18_alloc_table_at_L
        (select __anonstruct_Graph_4_edges_g_2_5_at_L g_2)) (0))
       /\
       (((>=)
        (offset_max __anonstruct_Edge_3_edges_18_alloc_table_at_L
        (select __anonstruct_Graph_4_edges_g_2_5_at_L g_2))
        (Int.(-)
        (Int32.to_int (select __anonstruct_Graph_4_esize_g_2_5_at_L g_2))
        (1)))
       /\
       (forall __framac_tmp1 : int.
        ((((<=) (0) __framac_tmp1) /\
         ((<=) __framac_tmp1
         (Int.(-)
         (Int32.to_int (select __anonstruct_Graph_4_esize_g_2_5_at_L g_2))
         (1)))) -> ((=) true true))))) else ((=) true true))
     /\
     ((edges_valid g_2
      (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_2_5_at_L g_2))
      __anonstruct_Graph_4_edges_g_2_5_at_L
      __anonstruct_Graph_4_vsize_g_2_5_at_L
      __anonstruct_Graph_4_vertices_g_2_5_at_L
      __anonstruct_Edge_3_existent_0_edges_18_at_L
      __anonstruct_Edge_3_to_edges_18_at_L
      __anonstruct_Edge_3_from_edges_18_at_L
      __anonstruct_Vertex_2_existent_vertices_17_at_L)
     /\
     (forall k_3 : int.
      ((((<=)
        (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_2_5_at_L g_2)) k_3)
       /\
       ((<) k_3
       (Int32.to_int (select __anonstruct_Graph_4_esize_g_2_5_at_L g_2)))) ->
       ((=)
       (Int32.to_int
       (select __anonstruct_Edge_3_existent_0_edges_18_at_L
       (shift (select __anonstruct_Graph_4_edges_g_2_5_at_L g_2) k_3))) (0)))))))))))
  
  
end

theory Axiomatic_LF__Axiomatic__ecnt_empty_g

  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_graph_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  axiom LF__Lemma__ecnt_empty_g
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 147 9 52#
  "expl:Axiom LF__Lemma__ecnt_empty_g" "W:non_conservative_extension:N" :
  (forall __anonstruct_Vertex_2_vertices_116_alloc_table : (alloc_table
   __anonstruct_Vertex_2).
   (forall __anonstruct_Graph_4_g_17_30_alloc_table : (alloc_table
    __anonstruct_Graph_4).
    (forall __anonstruct_Edge_3_edges_115_alloc_table : (alloc_table
     __anonstruct_Edge_3).
     (forall __anonstruct_Graph_4_esize_g_17_30 : (memory
      __anonstruct_Graph_4 Int32.t).
      (forall __anonstruct_Graph_4_ecnt_g_17_30 : (memory
       __anonstruct_Graph_4 Int32.t).
       (forall __anonstruct_Graph_4_edges_g_17_30 : (memory
        __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)).
        (forall __anonstruct_Graph_4_vsize_g_17_30 : (memory
         __anonstruct_Graph_4 Int32.t).
         (forall __anonstruct_Graph_4_vertices_g_17_30 : (memory
          __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)).
          (forall __anonstruct_Edge_3_existent_0_edges_115 : (memory
           __anonstruct_Edge_3 Int32.t).
           (forall __anonstruct_Edge_3_to_edges_115 : (memory
            __anonstruct_Edge_3 Int32.t).
            (forall __anonstruct_Edge_3_from_edges_115 : (memory
             __anonstruct_Edge_3 Int32.t).
             (forall __anonstruct_Vertex_2_existent_vertices_116 : (memory
              __anonstruct_Vertex_2 Int32.t).
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 147 9 52#
              (forall g_17 : (pointer __anonstruct_Graph_4).
               (forall f_11 : Int32.t.
                (forall t_11 : Int32.t.
                 (forall k_10 : Int32.t.
                  (((((<=)
                     (offset_min __anonstruct_Graph_4_g_17_30_alloc_table
                     g_17) (0))
                    /\
                    (((>=)
                     (offset_max __anonstruct_Graph_4_g_17_30_alloc_table
                     g_17) (0))
                    /\ ((=) true true)))
                   /\
                   ((graph_valid g_17
                    __anonstruct_Vertex_2_vertices_116_alloc_table
                    __anonstruct_Edge_3_edges_115_alloc_table
                    __anonstruct_Graph_4_esize_g_17_30
                    __anonstruct_Graph_4_ecnt_g_17_30
                    __anonstruct_Graph_4_edges_g_17_30
                    __anonstruct_Graph_4_vsize_g_17_30
                    __anonstruct_Graph_4_vertices_g_17_30
                    __anonstruct_Edge_3_existent_0_edges_115
                    __anonstruct_Edge_3_to_edges_115
                    __anonstruct_Edge_3_from_edges_115
                    __anonstruct_Vertex_2_existent_vertices_116)
                   /\
                   ((Int32.(<=)
                    (select __anonstruct_Graph_4_ecnt_g_17_30 g_17) k_10)
                   /\
                   (Int32.(<=) k_10
                   (select __anonstruct_Graph_4_esize_g_17_30 g_17))))) ->
                   ((=)
                   (count g_17 (Int32.to_int f_11) (Int32.to_int t_11)
                   (Int32.to_int
                   (select __anonstruct_Graph_4_ecnt_g_17_30 g_17))
                   (Int32.to_int k_10) __anonstruct_Graph_4_edges_g_17_30
                   __anonstruct_Edge_3_existent_0_edges_115
                   __anonstruct_Edge_3_to_edges_115
                   __anonstruct_Edge_3_from_edges_115) (0))))))))))))))))))))
  
  predicate _LF__Predicate__ecnt_empty_g  = ((=) true true)
  
  
end

module Function_ecnt_empty_g_safe

  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_graph_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  val ecnt_empty_g
  (g_1_0 : (pointer __anonstruct_Graph_4)) 
   (f_1_0 : Int32.t) 
    (t_1_0 : Int32.t) 
     (k : Int32.t) 
      (__anonstruct_Vertex_2_vertices_121_alloc_table : (alloc_table
       __anonstruct_Vertex_2)) 
       (__anonstruct_Graph_4_g_1_12_alloc_table : (alloc_table
        __anonstruct_Graph_4)) 
        (__anonstruct_Edge_3_edges_120_alloc_table : (alloc_table
         __anonstruct_Edge_3)) 
         (__anonstruct_Graph_4_esize_g_1_12 : (memory __anonstruct_Graph_4
          Int32.t)) 
          (__anonstruct_Graph_4_ecnt_g_1_12 : (memory __anonstruct_Graph_4
           Int32.t)) 
           (__anonstruct_Graph_4_edges_g_1_12 : (memory __anonstruct_Graph_4
            (pointer __anonstruct_Edge_3))) 
            (__anonstruct_Graph_4_vsize_g_1_12 : (memory __anonstruct_Graph_4
             Int32.t)) 
             (__anonstruct_Graph_4_vertices_g_1_12 : (memory
              __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2))) 
              (__anonstruct_Edge_3_existent_0_edges_120 : (memory
               __anonstruct_Edge_3 Int32.t)) 
               (__anonstruct_Edge_3_to_edges_120 : (memory
                __anonstruct_Edge_3 Int32.t)) 
                (__anonstruct_Edge_3_from_edges_120 : (memory
                 __anonstruct_Edge_3 Int32.t)) 
                 (__anonstruct_Vertex_2_existent_vertices_121 : (memory
                  __anonstruct_Vertex_2 Int32.t)) : unit
                  requires {
                    ("expl:Internal"
                    (#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 141 17 26#
                     "expl:Requires clause"
                     (#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                     ((#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                      ((<=)
                      (offset_min __anonstruct_Graph_4_g_1_12_alloc_table
                      g_1_0) (0)))
                     /\
                     (#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                     ((#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                      ((>=)
                      (offset_max __anonstruct_Graph_4_g_1_12_alloc_table
                      g_1_0) (0)))
                     /\
                     (#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                     ((=) true true)))))))
                    /\
                    (#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 142 17 31#
                     "expl:Requires clause"
                     (graph_valid g_1_0
                     __anonstruct_Vertex_2_vertices_121_alloc_table
                     __anonstruct_Edge_3_edges_120_alloc_table
                     __anonstruct_Graph_4_esize_g_1_12
                     __anonstruct_Graph_4_ecnt_g_1_12
                     __anonstruct_Graph_4_edges_g_1_12
                     __anonstruct_Graph_4_vsize_g_1_12
                     __anonstruct_Graph_4_vertices_g_1_12
                     __anonstruct_Edge_3_existent_0_edges_120
                     __anonstruct_Edge_3_to_edges_120
                     __anonstruct_Edge_3_from_edges_120
                     __anonstruct_Vertex_2_existent_vertices_121))
                    /\
                    (#"3-2_c.jc" 205 12 352# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 143 17 29#
                     "expl:Requires clause"
                     (Int32.(<=)
                     (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0) k))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 143 28 41#
                    "expl:Requires clause"
                    (Int32.(<=) k
                    (select __anonstruct_Graph_4_esize_g_1_12 g_1_0))))))))))
                    }
                  ensures {
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 145 16 47#
                    "expl:Ensures clause"
                    ((=)
                    (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
                    (Int32.to_int
                    (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
                    (Int32.to_int k) __anonstruct_Graph_4_edges_g_1_12
                    __anonstruct_Edge_3_existent_0_edges_120
                    __anonstruct_Edge_3_to_edges_120
                    __anonstruct_Edge_3_from_edges_120) (0))) }
  
end

module Function_ecnt_empty_g_safety
#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 147 9 52#
"expl:ecnt_empty_g, safety"

  use import core.Zwf 
  
  use Safe_int32 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_graph_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_ecnt_empty_g_safe 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  let ecnt_empty_g #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 147 9 52#
  "expl:Function ecnt_empty_g, safety" =
  fun
   (g_1_0 : (pointer __anonstruct_Graph_4)) (f_1_0 : Int32.t) (t_1_0 :
   Int32.t) (k : Int32.t) (__anonstruct_Edge_3_edges_120_alloc_table :
   (alloc_table __anonstruct_Edge_3))
   (__anonstruct_Graph_4_g_1_12_alloc_table : (alloc_table
   __anonstruct_Graph_4)) (__anonstruct_Vertex_2_vertices_121_alloc_table :
   (alloc_table __anonstruct_Vertex_2))
   (__anonstruct_Vertex_2_existent_vertices_121 : (memory
   __anonstruct_Vertex_2 Int32.t)) (__anonstruct_Edge_3_from_edges_120 :
   (memory __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_to_edges_120 :
   (memory __anonstruct_Edge_3 Int32.t))
   (__anonstruct_Edge_3_existent_0_edges_120 : (memory __anonstruct_Edge_3
   Int32.t)) (__anonstruct_Graph_4_vertices_g_1_12 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
   (__anonstruct_Graph_4_vsize_g_1_12 : (memory __anonstruct_Graph_4
   Int32.t)) (__anonstruct_Graph_4_edges_g_1_12 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
   (__anonstruct_Graph_4_ecnt_g_1_12 : (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Graph_4_esize_g_1_12 : (memory __anonstruct_Graph_4
   Int32.t)) 
   requires {
   (#"3-2_c.jc" 205 12 352#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 141 17 26#
    (#"3-2_c.jc" 205 12 352#
    ((#"3-2_c.jc" 205 12 352#
     ((<=) (offset_min __anonstruct_Graph_4_g_1_12_alloc_table g_1_0) (0)))
    /\
    (#"3-2_c.jc" 205 12 352#
    ((#"3-2_c.jc" 205 12 352#
     ((>=) (offset_max __anonstruct_Graph_4_g_1_12_alloc_table g_1_0) (0)))
    /\ (#"3-2_c.jc" 205 12 352# ((=) true true)))))))
   /\
   (#"3-2_c.jc" 205 12 352#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 142 17 31#
    (graph_valid g_1_0 __anonstruct_Vertex_2_vertices_121_alloc_table
    __anonstruct_Edge_3_edges_120_alloc_table
    __anonstruct_Graph_4_esize_g_1_12 __anonstruct_Graph_4_ecnt_g_1_12
    __anonstruct_Graph_4_edges_g_1_12 __anonstruct_Graph_4_vsize_g_1_12
    __anonstruct_Graph_4_vertices_g_1_12
    __anonstruct_Edge_3_existent_0_edges_120 __anonstruct_Edge_3_to_edges_120
    __anonstruct_Edge_3_from_edges_120
    __anonstruct_Vertex_2_existent_vertices_121))
   /\
   (#"3-2_c.jc" 205 12 352#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 143 17 29#
    (Int32.(<=) (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0) k))
   /\
   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 143 28 41#
   (Int32.(<=) k (select __anonstruct_Graph_4_esize_g_1_12 g_1_0))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   try
    begin
    (if
    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 148 12 23#
    (Safe_int32.(>)  k
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 148 16 23#
     "expl:Pointer dereference"
     (acc  __anonstruct_Graph_4_g_1_12_alloc_table
      __anonstruct_Graph_4_ecnt_g_1_12 g_1_0 )) ))
    then
     begin
     begin
     any unit
     requires { true } reads { f_1_0, g_1_0, k, t_1_0 }
     ensures {
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 149 23 114#
       ((=)
       (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
       (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
       (Int32.to_int k) __anonstruct_Graph_4_edges_g_1_12
       __anonstruct_Edge_3_existent_0_edges_120
       __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
       (Int.(+)
       (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
       (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
       (Int.(-) (Int32.to_int k) (1)) __anonstruct_Graph_4_edges_g_1_12
       __anonstruct_Edge_3_existent_0_edges_120
       __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
       (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
       (Int.(-) (Int32.to_int k) (1)) (Int32.to_int k)
       __anonstruct_Graph_4_edges_g_1_12
       __anonstruct_Edge_3_existent_0_edges_120
       __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120))))
       } ; () end;
      begin
      any unit
      requires { true } reads { f_1_0, g_1_0, k, t_1_0 }
      ensures {
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 150 23 54#
        ((=)
        (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
        (Int.(-) (Int32.to_int k) (1)) (Int32.to_int k)
        __anonstruct_Graph_4_edges_g_1_12
        __anonstruct_Edge_3_existent_0_edges_120
        __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
        (0))) } ; () end;
      (let _jessie_21 = g_1_0 in
      (let _jessie_20 = f_1_0 in
      (let _jessie_19 = t_1_0 in
      (let _jessie_18 =
      (Safe_int32.(-)  k
       (#"3-2_c.jc" 255 55 67# "expl:Integer cast" (Safe_int32.of_int (1))) )
      in
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 151 12 42#
      "expl:Variant decreases"
      begin
      (check {
      (zwf_zero (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 144 18 29#
      (Int.(-) (Int32.to_int _jessie_18)
      (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 _jessie_21))))
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 144 18 29#
      (Int.(-) (Int32.to_int k)
      (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))))) });
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 151 12 42#
       "expl:Precondition for ecnt_empty_g"
       (Function_ecnt_empty_g_safe.ecnt_empty_g  _jessie_21 _jessie_20
        _jessie_19 _jessie_18 __anonstruct_Vertex_2_vertices_121_alloc_table
        __anonstruct_Graph_4_g_1_12_alloc_table
        __anonstruct_Edge_3_edges_120_alloc_table
        __anonstruct_Graph_4_esize_g_1_12 __anonstruct_Graph_4_ecnt_g_1_12
        __anonstruct_Graph_4_edges_g_1_12 __anonstruct_Graph_4_vsize_g_1_12
        __anonstruct_Graph_4_vertices_g_1_12
        __anonstruct_Edge_3_existent_0_edges_120
        __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120
        __anonstruct_Vertex_2_existent_vertices_121 )) end))))) end else ());
     (raise Return); (raise Return) end with Return -> () end
  
end

module Function_ecnt_empty_g

  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  val ecnt_empty_g
  (g_1_0 : (pointer __anonstruct_Graph_4)) 
   (f_1_0 : Int32.t) 
    (t_1_0 : Int32.t) 
     (k : Int32.t) 
      (__anonstruct_Vertex_2_vertices_121_alloc_table : (alloc_table
       __anonstruct_Vertex_2)) 
       (__anonstruct_Graph_4_g_1_12_alloc_table : (alloc_table
        __anonstruct_Graph_4)) 
        (__anonstruct_Edge_3_edges_120_alloc_table : (alloc_table
         __anonstruct_Edge_3)) 
         (__anonstruct_Graph_4_esize_g_1_12 : (memory __anonstruct_Graph_4
          Int32.t)) 
          (__anonstruct_Graph_4_ecnt_g_1_12 : (memory __anonstruct_Graph_4
           Int32.t)) 
           (__anonstruct_Graph_4_edges_g_1_12 : (memory __anonstruct_Graph_4
            (pointer __anonstruct_Edge_3))) 
            (__anonstruct_Graph_4_vsize_g_1_12 : (memory __anonstruct_Graph_4
             Int32.t)) 
             (__anonstruct_Graph_4_vertices_g_1_12 : (memory
              __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2))) 
              (__anonstruct_Edge_3_existent_0_edges_120 : (memory
               __anonstruct_Edge_3 Int32.t)) 
               (__anonstruct_Edge_3_to_edges_120 : (memory
                __anonstruct_Edge_3 Int32.t)) 
                (__anonstruct_Edge_3_from_edges_120 : (memory
                 __anonstruct_Edge_3 Int32.t)) 
                 (__anonstruct_Vertex_2_existent_vertices_121 : (memory
                  __anonstruct_Vertex_2 Int32.t)) : unit
                  requires { true }
                  ensures {
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 145 16 47#
                    "expl:Ensures clause"
                    ((=)
                    (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
                    (Int32.to_int
                    (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
                    (Int32.to_int k) __anonstruct_Graph_4_edges_g_1_12
                    __anonstruct_Edge_3_existent_0_edges_120
                    __anonstruct_Edge_3_to_edges_120
                    __anonstruct_Edge_3_from_edges_120) (0))) }
  
end

module Function_ecnt_empty_g_behaviors
#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 147 9 52#
"expl:ecnt_empty_g, behaviors"

  use Unsafe_int32 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_graph_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use Function_ecnt_empty_g 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  let ecnt_empty_g_ensures_default
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 147 9 52#
  "expl:Function ecnt_empty_g, default behavior" =
  fun
   (g_1_0 : (pointer __anonstruct_Graph_4)) (f_1_0 : Int32.t) (t_1_0 :
   Int32.t) (k : Int32.t) (__anonstruct_Edge_3_edges_120_alloc_table :
   (alloc_table __anonstruct_Edge_3))
   (__anonstruct_Graph_4_g_1_12_alloc_table : (alloc_table
   __anonstruct_Graph_4)) (__anonstruct_Vertex_2_vertices_121_alloc_table :
   (alloc_table __anonstruct_Vertex_2))
   (__anonstruct_Vertex_2_existent_vertices_121 : (memory
   __anonstruct_Vertex_2 Int32.t)) (__anonstruct_Edge_3_from_edges_120 :
   (memory __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_to_edges_120 :
   (memory __anonstruct_Edge_3 Int32.t))
   (__anonstruct_Edge_3_existent_0_edges_120 : (memory __anonstruct_Edge_3
   Int32.t)) (__anonstruct_Graph_4_vertices_g_1_12 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
   (__anonstruct_Graph_4_vsize_g_1_12 : (memory __anonstruct_Graph_4
   Int32.t)) (__anonstruct_Graph_4_edges_g_1_12 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
   (__anonstruct_Graph_4_ecnt_g_1_12 : (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Graph_4_esize_g_1_12 : (memory __anonstruct_Graph_4
   Int32.t)) 
   requires {
   (#"3-2_c.jc" 205 12 352#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 141 17 26#
    (#"3-2_c.jc" 205 12 352#
    ((#"3-2_c.jc" 205 12 352#
     ((<=) (offset_min __anonstruct_Graph_4_g_1_12_alloc_table g_1_0) (0)))
    /\
    (#"3-2_c.jc" 205 12 352#
    ((#"3-2_c.jc" 205 12 352#
     ((>=) (offset_max __anonstruct_Graph_4_g_1_12_alloc_table g_1_0) (0)))
    /\ (#"3-2_c.jc" 205 12 352# ((=) true true)))))))
   /\
   (#"3-2_c.jc" 205 12 352#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 142 17 31#
    (graph_valid g_1_0 __anonstruct_Vertex_2_vertices_121_alloc_table
    __anonstruct_Edge_3_edges_120_alloc_table
    __anonstruct_Graph_4_esize_g_1_12 __anonstruct_Graph_4_ecnt_g_1_12
    __anonstruct_Graph_4_edges_g_1_12 __anonstruct_Graph_4_vsize_g_1_12
    __anonstruct_Graph_4_vertices_g_1_12
    __anonstruct_Edge_3_existent_0_edges_120 __anonstruct_Edge_3_to_edges_120
    __anonstruct_Edge_3_from_edges_120
    __anonstruct_Vertex_2_existent_vertices_121))
   /\
   (#"3-2_c.jc" 205 12 352#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 143 17 29#
    (Int32.(<=) (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0) k))
   /\
   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 143 28 41#
   (Int32.(<=) k (select __anonstruct_Graph_4_esize_g_1_12 g_1_0))))))))) }
   ensures {
     ("expl:Postcondition"
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 145 16 47#
     "expl:Ensures clause"
     ((=)
     (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
     (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
     (Int32.to_int k) __anonstruct_Graph_4_edges_g_1_12
     __anonstruct_Edge_3_existent_0_edges_120
     __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
     (0)))) }  ->
   'Init:
   try
    begin
    (if
    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 148 12 23#
    (Unsafe_int32.(>)  k (acc  __anonstruct_Graph_4_ecnt_g_1_12 g_1_0 ) ))
    then
     begin
     begin
     (assert {
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 149 23 114#
     "expl:Assertion in line 149"
     ((=)
     (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
     (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
     (Int32.to_int k) __anonstruct_Graph_4_edges_g_1_12
     __anonstruct_Edge_3_existent_0_edges_120
     __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
     (Int.(+)
     (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
     (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_1_12 g_1_0))
     (Int.(-) (Int32.to_int k) (1)) __anonstruct_Graph_4_edges_g_1_12
     __anonstruct_Edge_3_existent_0_edges_120
     __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
     (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
     (Int.(-) (Int32.to_int k) (1)) (Int32.to_int k)
     __anonstruct_Graph_4_edges_g_1_12
     __anonstruct_Edge_3_existent_0_edges_120
     __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120))))
     }); () end;
      begin
      (assert {
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 150 23 54#
      "expl:Assertion in line 150"
      ((=)
      (count g_1_0 (Int32.to_int f_1_0) (Int32.to_int t_1_0)
      (Int.(-) (Int32.to_int k) (1)) (Int32.to_int k)
      __anonstruct_Graph_4_edges_g_1_12
      __anonstruct_Edge_3_existent_0_edges_120
      __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120)
      (0))) }); () end;
      (let _jessie_17 = g_1_0 in
      (let _jessie_16 = f_1_0 in
      (let _jessie_15 = t_1_0 in
      (let _jessie_14 =
      (Unsafe_int32.(-)  k
       (#"3-2_c.jc" 255 55 67# "expl:Integer cast" (Unsafe_int32.of_int (1)))
       ) in
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 151 12 42#
      "expl:Precondition for ecnt_empty_g"
      (Function_ecnt_empty_g.ecnt_empty_g  _jessie_17 _jessie_16 _jessie_15
       _jessie_14 __anonstruct_Vertex_2_vertices_121_alloc_table
       __anonstruct_Graph_4_g_1_12_alloc_table
       __anonstruct_Edge_3_edges_120_alloc_table
       __anonstruct_Graph_4_esize_g_1_12 __anonstruct_Graph_4_ecnt_g_1_12
       __anonstruct_Graph_4_edges_g_1_12 __anonstruct_Graph_4_vsize_g_1_12
       __anonstruct_Graph_4_vertices_g_1_12
       __anonstruct_Edge_3_existent_0_edges_120
       __anonstruct_Edge_3_to_edges_120 __anonstruct_Edge_3_from_edges_120
       __anonstruct_Vertex_2_existent_vertices_121 )))))) end else ());
     (raise Return); (raise Return) end with Return -> () end
  
end

module Exceptions

  use why3.Bool.Bool 
  
  exception Goto_while_0_break_exc unit
  
  exception Goto_while_0_break_0_exc unit
  
  exception Goto_while_0_break_0_0_exc unit
  
  exception Goto_while_1_break_exc unit
  
  exception Loop_continue_exc unit
  
  exception Loop_exit_exc unit
  
  exception Return_label_exc unit
  
end

module Function_count_0_safety
#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 166 0 29# "expl:count, safety"

  use import core.Tag_table_type 
  
  use Safe_int32 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use import Logic_graph_valid 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use bool.Bool 
  
  use import Axiomatic_LF__Axiomatic__ecnt_empty_g 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  let count_0 #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 166 0 29#
  "expl:Function count, safety" =
  fun
   (g_0_0 : (pointer __anonstruct_Graph_4)) (f_0 : Int32.t) (t_0 : Int32.t)
   (__anonstruct_Edge_3_edges_32_alloc_table : (alloc_table
   __anonstruct_Edge_3)) (__anonstruct_Graph_4_g_0_13_alloc_table :
   (alloc_table __anonstruct_Graph_4))
   (__anonstruct_Vertex_2_vertices_31_alloc_table : (alloc_table
   __anonstruct_Vertex_2)) (__anonstruct_Edge_3_edges_32_tag_table :
   (tag_table __anonstruct_Edge_3))
   (__anonstruct_Vertex_2_existent_vertices_31 : (memory
   __anonstruct_Vertex_2 Int32.t)) (__anonstruct_Edge_3_from_edges_32 :
   (memory __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_to_edges_32 :
   (memory __anonstruct_Edge_3 Int32.t))
   (__anonstruct_Edge_3_existent_0_edges_32 : (memory __anonstruct_Edge_3
   Int32.t)) (__anonstruct_Graph_4_vertices_g_0_13 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
   (__anonstruct_Graph_4_vsize_g_0_13 : (memory __anonstruct_Graph_4
   Int32.t)) (__anonstruct_Graph_4_edges_g_0_13 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
   (__anonstruct_Graph_4_ecnt_g_0_13 : (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Graph_4_esize_g_0_13 : (memory __anonstruct_Graph_4
   Int32.t)) 
   requires {
   (#"3-2_c.jc" 284 12 803#
   ((#"3-2_c.jc" 284 12 803# _LF__Predicate__ecnt_empty_g) /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 158 13 22#
    (#"3-2_c.jc" 284 12 803#
    ((#"3-2_c.jc" 284 12 803#
     ((<=) (offset_min __anonstruct_Graph_4_g_0_13_alloc_table g_0_0) (0)))
    /\
    (#"3-2_c.jc" 284 12 803#
    ((#"3-2_c.jc" 284 12 803#
     ((>=) (offset_max __anonstruct_Graph_4_g_0_13_alloc_table g_0_0) (0)))
    /\ (#"3-2_c.jc" 284 12 803# ((=) true true)))))))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 158 26 40#
    (graph_valid g_0_0 __anonstruct_Vertex_2_vertices_31_alloc_table
    __anonstruct_Edge_3_edges_32_alloc_table
    __anonstruct_Graph_4_esize_g_0_13 __anonstruct_Graph_4_ecnt_g_0_13
    __anonstruct_Graph_4_edges_g_0_13 __anonstruct_Graph_4_vsize_g_0_13
    __anonstruct_Graph_4_vertices_g_0_13
    __anonstruct_Edge_3_existent_0_edges_32 __anonstruct_Edge_3_to_edges_32
    __anonstruct_Edge_3_from_edges_32
    __anonstruct_Vertex_2_existent_vertices_31))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 159 13 28#
    (is_vertex g_0_0 (Int32.to_int f_0) __anonstruct_Graph_4_vsize_g_0_13))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 160 13 28#
    (is_vertex g_0_0 (Int32.to_int t_0) __anonstruct_Graph_4_vsize_g_0_13))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 161 13 36#
    (not
    ((=)
    (Int32.to_int
    (select __anonstruct_Vertex_2_existent_vertices_31
    (shift (select __anonstruct_Graph_4_vertices_g_0_13 g_0_0)
    (Int32.to_int f_0)))) (0))))
   /\
   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 162 13 36#
   (not
   ((=)
   (Int32.to_int
   (select __anonstruct_Vertex_2_existent_vertices_31
   (shift (select __anonstruct_Graph_4_vertices_g_0_13 g_0_0)
   (Int32.to_int t_0)))) (0)))))))))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_int32.any_  () ) in
   try
    begin
    (let c = ref (Safe_int32.any_  () ) in
    (let i = ref (Safe_int32.any_  () ) in
    begin
    (c :=
     (let _jessie_27 =
     (#"3-2_c.jc" 306 20 32# "expl:Integer cast" (Safe_int32.of_int (0))) in
     begin
     (assert {
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 168 8 9#
     "expl:Pointer index bounds" true) }); _jessie_27 end));
     try
      begin
      (i :=
       (let _jessie_30 =
       (#"3-2_c.jc" 308 23 35# "expl:Integer cast" (Safe_int32.of_int (0)))
       in
       begin
       (assert {
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 175 13 14#
       "expl:Pointer index bounds" true) }); _jessie_30 end));
       'LoopEntry:
       begin
       'LoopEntry:
       'Loop_2:
       loop
       invariant { (#"3-2_c.jc" 310 9 4330# true) }
         variant { (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 173 21 34#
           (Int.(-)
           (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))
           (Int32.to_int !i))) }
        begin
        any unit
        requires { true } reads { f_0, g_0_0, t_0 }
        ensures {
          ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 172 24 49#
           ((=) (Int32.to_int !c)
           (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0) (0)
           (Int32.to_int !i) __anonstruct_Graph_4_edges_g_0_13
           __anonstruct_Edge_3_existent_0_edges_32
           __anonstruct_Edge_3_to_edges_32 __anonstruct_Edge_3_from_edges_32)))
          /\
          ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 23 42#
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 23 42#
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 24 30#
            (Int32.(<=) (#"3-2_c.jc" 315 41 53# "expl:Integer cast"
            (Int32.of_int (0))) !i))
           /\
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 29 41#
           (Int32.(<=) !i (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))))))
          /\
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 23 36#
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 23 36#
          ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 24 30#
           (Int32.(<=) (#"3-2_c.jc" 312 41 53# "expl:Integer cast"
           (Int32.of_int (0))) !c))
          /\
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 29 35#
          (Int32.(<=) !c !i))))))) } ;
         try
          begin
          'LoopCurrent:
          begin
          'LoopCurrent:
          (if
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 175 20 31#
          (Safe_int32.(<)  !i
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 175 24 31#
           "expl:Pointer dereference"
           (acc  __anonstruct_Graph_4_g_0_13_alloc_table
            __anonstruct_Graph_4_ecnt_g_0_13 g_0_0 )) )) then ()
          else (raise (Goto_while_0_break_exc ())));
           begin
           (if
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 12 32#
           (Safe_int32.(<>) 
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 12 32#
            "expl:Pointer dereference"
            (acc_offset_typesafe  __anonstruct_Edge_3_edges_32_alloc_table
             __anonstruct_Edge_3_existent_0_edges_32
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 12 20#
             "expl:Pointer dereference"
             (acc  __anonstruct_Graph_4_g_0_13_alloc_table
              __anonstruct_Graph_4_edges_g_0_13 g_0_0 ))
             (Safe_int32.to_int  !i ) ))
            (#"3-2_c.jc" 329 33 45# "expl:Integer cast"
            (Safe_int32.of_int (0))) ))
           then
            (if
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 36 57#
            (Safe_int32.(=) 
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 36 52#
             "expl:Pointer dereference"
             (acc_offset_typesafe  __anonstruct_Edge_3_edges_32_alloc_table
              __anonstruct_Edge_3_from_edges_32
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 36 44#
              "expl:Pointer dereference"
              (acc  __anonstruct_Graph_4_g_0_13_alloc_table
               __anonstruct_Graph_4_edges_g_0_13 g_0_0 ))
              (Safe_int32.to_int  !i ) )) f_0 ))
            then
             (if
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 61 80#
             (Safe_int32.(=) 
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 61 75#
              "expl:Pointer dereference"
              (acc_offset_typesafe  __anonstruct_Edge_3_edges_32_alloc_table
               __anonstruct_Edge_3_to_edges_32
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 61 69#
               "expl:Pointer dereference"
               (acc  __anonstruct_Graph_4_g_0_13_alloc_table
                __anonstruct_Graph_4_edges_g_0_13 g_0_0 ))
               (Safe_int32.to_int  !i ) )) t_0 ))
             then
              (c :=
               (let _jessie_28 =
               (Safe_int32.(+)  !c
                (#"3-2_c.jc" 342 68 80# "expl:Integer cast"
                (Safe_int32.of_int (1))) ) in
               begin
               (assert {
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 178 12 16#
               "expl:Pointer index bounds" true) }); _jessie_28 end))
             else ()) else ()) else ());
            begin
            any unit
            requires { true } reads { f_0, g_0_0, t_0 }
            ensures {
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 181 19 183#
              (if
               (Bool.andb
               (Bool.andb
               ((<>)
               (Int32.to_int
               (select __anonstruct_Edge_3_existent_0_edges_32
               (shift (select __anonstruct_Graph_4_edges_g_0_13 g_0_0)
               (Int32.to_int !i)))) (0))
               (Int32.(=)
               (select __anonstruct_Edge_3_from_edges_32
               (shift (select __anonstruct_Graph_4_edges_g_0_13 g_0_0)
               (Int32.to_int !i))) f_0))
               (Int32.(=)
               (select __anonstruct_Edge_3_to_edges_32
               (shift (select __anonstruct_Graph_4_edges_g_0_13 g_0_0)
               (Int32.to_int !i))) t_0)) then
               ((=)
               (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
               (Int32.to_int !i) (Int.(+) (Int32.to_int !i) (1))
               __anonstruct_Graph_4_edges_g_0_13
               __anonstruct_Edge_3_existent_0_edges_32
               __anonstruct_Edge_3_to_edges_32
               __anonstruct_Edge_3_from_edges_32) (1)) else
               ((=)
               (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
               (Int32.to_int !i) (Int.(+) (Int32.to_int !i) (1))
               __anonstruct_Graph_4_edges_g_0_13
               __anonstruct_Edge_3_existent_0_edges_32
               __anonstruct_Edge_3_to_edges_32
               __anonstruct_Edge_3_from_edges_32) (0)))) } ; () end end;
           (i :=
            (let _jessie_29 =
            (Safe_int32.(+)  !i
             (#"3-2_c.jc" 373 53 65# "expl:Integer cast"
             (Safe_int32.of_int (1))) ) in
            begin
            (assert {
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 175 33 36#
            "expl:Pointer index bounds" true) }); _jessie_29 end)) end;
           (raise (Loop_continue_exc ())) end with Loop_continue_exc
          _jessie_3 -> () end end end; (raise (Goto_while_0_break_exc ()))
       end end with Goto_while_0_break_exc _jessie_1 ->
      'While_0_break: 'While_0_break: () end;
     begin
     any unit
     requires { true } reads { f_0, g_0_0, t_0 }
     ensures {
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 187 15 46#
       ((=) (Int32.to_int !c)
       (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0) (0)
       (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))
       __anonstruct_Graph_4_edges_g_0_13
       __anonstruct_Edge_3_existent_0_edges_32
       __anonstruct_Edge_3_to_edges_32 __anonstruct_Edge_3_from_edges_32))) } ;
      () end;
     begin
     any unit
     requires { true } reads { f_0, g_0_0, t_0 }
     ensures {
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 188 15 53#
       ((=)
       (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
       (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))
       (Int32.to_int (select __anonstruct_Graph_4_esize_g_0_13 g_0_0))
       __anonstruct_Graph_4_edges_g_0_13
       __anonstruct_Edge_3_existent_0_edges_32
       __anonstruct_Edge_3_to_edges_32 __anonstruct_Edge_3_from_edges_32)
       (0))) } ; () end;
     begin
     (return :=
      (let _jessie_31 = !c in
      begin
      (assert { (#"3-2_c.jc" 399 7 15# "expl:Pointer index bounds" true) });
       _jessie_31 end)); (raise Return) end end)); absurd  end with Return ->
    !return end)
  
end

module Function_count_0_behaviors
#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 166 0 29#
"expl:count, behaviors"

  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use import Logic_graph_valid 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use bool.Bool 
  
  use import Axiomatic_LF__Axiomatic__ecnt_empty_g 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  let count_ensures_default
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 166 0 29#
  "expl:Function count, default behavior" =
  fun
   (g_0_0 : (pointer __anonstruct_Graph_4)) (f_0 : Int32.t) (t_0 : Int32.t)
   (__anonstruct_Edge_3_edges_32_alloc_table : (alloc_table
   __anonstruct_Edge_3)) (__anonstruct_Graph_4_g_0_13_alloc_table :
   (alloc_table __anonstruct_Graph_4))
   (__anonstruct_Vertex_2_vertices_31_alloc_table : (alloc_table
   __anonstruct_Vertex_2)) (__anonstruct_Edge_3_edges_32_tag_table :
   (tag_table __anonstruct_Edge_3))
   (__anonstruct_Vertex_2_existent_vertices_31 : (memory
   __anonstruct_Vertex_2 Int32.t)) (__anonstruct_Edge_3_from_edges_32 :
   (memory __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_to_edges_32 :
   (memory __anonstruct_Edge_3 Int32.t))
   (__anonstruct_Edge_3_existent_0_edges_32 : (memory __anonstruct_Edge_3
   Int32.t)) (__anonstruct_Graph_4_vertices_g_0_13 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
   (__anonstruct_Graph_4_vsize_g_0_13 : (memory __anonstruct_Graph_4
   Int32.t)) (__anonstruct_Graph_4_edges_g_0_13 : (memory
   __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
   (__anonstruct_Graph_4_ecnt_g_0_13 : (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Graph_4_esize_g_0_13 : (memory __anonstruct_Graph_4
   Int32.t)) 
   requires {
   (#"3-2_c.jc" 284 12 803#
   ((#"3-2_c.jc" 284 12 803# _LF__Predicate__ecnt_empty_g) /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 158 13 22#
    (#"3-2_c.jc" 284 12 803#
    ((#"3-2_c.jc" 284 12 803#
     ((<=) (offset_min __anonstruct_Graph_4_g_0_13_alloc_table g_0_0) (0)))
    /\
    (#"3-2_c.jc" 284 12 803#
    ((#"3-2_c.jc" 284 12 803#
     ((>=) (offset_max __anonstruct_Graph_4_g_0_13_alloc_table g_0_0) (0)))
    /\ (#"3-2_c.jc" 284 12 803# ((=) true true)))))))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 158 26 40#
    (graph_valid g_0_0 __anonstruct_Vertex_2_vertices_31_alloc_table
    __anonstruct_Edge_3_edges_32_alloc_table
    __anonstruct_Graph_4_esize_g_0_13 __anonstruct_Graph_4_ecnt_g_0_13
    __anonstruct_Graph_4_edges_g_0_13 __anonstruct_Graph_4_vsize_g_0_13
    __anonstruct_Graph_4_vertices_g_0_13
    __anonstruct_Edge_3_existent_0_edges_32 __anonstruct_Edge_3_to_edges_32
    __anonstruct_Edge_3_from_edges_32
    __anonstruct_Vertex_2_existent_vertices_31))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 159 13 28#
    (is_vertex g_0_0 (Int32.to_int f_0) __anonstruct_Graph_4_vsize_g_0_13))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 160 13 28#
    (is_vertex g_0_0 (Int32.to_int t_0) __anonstruct_Graph_4_vsize_g_0_13))
   /\
   (#"3-2_c.jc" 284 12 803#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 161 13 36#
    (not
    ((=)
    (Int32.to_int
    (select __anonstruct_Vertex_2_existent_vertices_31
    (shift (select __anonstruct_Graph_4_vertices_g_0_13 g_0_0)
    (Int32.to_int f_0)))) (0))))
   /\
   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 162 13 36#
   (not
   ((=)
   (Int32.to_int
   (select __anonstruct_Vertex_2_existent_vertices_31
   (shift (select __anonstruct_Graph_4_vertices_g_0_13 g_0_0)
   (Int32.to_int t_0)))) (0)))))))))))))))) }
   ensures {
     ("expl:Postcondition"
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 163 12 41#
     "expl:Ensures clause"
     ((=) (Int32.to_int result)
     (all_count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
     __anonstruct_Graph_4_esize_g_0_13 __anonstruct_Graph_4_edges_g_0_13
     __anonstruct_Edge_3_existent_0_edges_32 __anonstruct_Edge_3_to_edges_32
     __anonstruct_Edge_3_from_edges_32)))) } diverges  ->
   'Init:
   (let return = ref (Unsafe_int32.any_  () ) in
   try
    begin
    (let c = ref (Unsafe_int32.any_  () ) in
    (let i = ref (Unsafe_int32.any_  () ) in
    begin
    (c :=
     (#"3-2_c.jc" 306 20 32# "expl:Integer cast" (Unsafe_int32.of_int (0))));
     try
      begin
      (i :=
       (#"3-2_c.jc" 308 23 35# "expl:Integer cast" (Unsafe_int32.of_int (0))));
       'LoopEntry:
       begin
       'LoopEntry:
       'Loop_1:
       loop
       invariant
         { ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 23 36#
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 23 36#
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 24 30#
             (Int32.(<=) (#"3-2_c.jc" 312 41 53# "expl:Integer cast"
             (Int32.of_int (0))) !c))
            /\
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 170 29 35#
            (Int32.(<=) !c !i)))))
           &&
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 23 42#
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 23 42#
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 24 30#
             (Int32.(<=) (#"3-2_c.jc" 315 41 53# "expl:Integer cast"
             (Int32.of_int (0))) !i))
            /\
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 171 29 41#
            (Int32.(<=) !i (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))))))
           &&
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 172 24 49#
           ((=) (Int32.to_int !c)
           (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0) (0)
           (Int32.to_int !i) __anonstruct_Graph_4_edges_g_0_13
           __anonstruct_Edge_3_existent_0_edges_32
           __anonstruct_Edge_3_to_edges_32 __anonstruct_Edge_3_from_edges_32))))) }
         
        begin
        any unit requires { true } ensures { true } ;
         try
          begin
          'LoopCurrent:
          begin
          'LoopCurrent:
          (if
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 175 20 31#
          (Unsafe_int32.(<)  !i
           (acc  __anonstruct_Graph_4_ecnt_g_0_13 g_0_0 ) )) then ()
          else (raise (Goto_while_0_break_exc ())));
           begin
           (if
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 12 32#
           (Unsafe_int32.(<>) 
            (acc  __anonstruct_Edge_3_existent_0_edges_32
             (shift_  (acc  __anonstruct_Graph_4_edges_g_0_13 g_0_0 )
              (Unsafe_int32.to_int  !i ) ) )
            (#"3-2_c.jc" 329 33 45# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))
           then
            (if
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 36 57#
            (Unsafe_int32.(=) 
             (acc  __anonstruct_Edge_3_from_edges_32
              (shift_  (acc  __anonstruct_Graph_4_edges_g_0_13 g_0_0 )
               (Unsafe_int32.to_int  !i ) ) ) f_0 ))
            then
             (if
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 177 61 80#
             (Unsafe_int32.(=) 
              (acc  __anonstruct_Edge_3_to_edges_32
               (shift_  (acc  __anonstruct_Graph_4_edges_g_0_13 g_0_0 )
                (Unsafe_int32.to_int  !i ) ) ) t_0 ))
             then
              (c :=
               (Unsafe_int32.(+)  !c
                (#"3-2_c.jc" 342 68 80# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) )) else ()) else ()) else ());
            begin
            (assert {
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 181 19 183#
            "expl:Assertion in line 181"
            (if
             (Bool.andb
             (Bool.andb
             ((<>)
             (Int32.to_int
             (select __anonstruct_Edge_3_existent_0_edges_32
             (shift (select __anonstruct_Graph_4_edges_g_0_13 g_0_0)
             (Int32.to_int !i)))) (0))
             (Int32.(=)
             (select __anonstruct_Edge_3_from_edges_32
             (shift (select __anonstruct_Graph_4_edges_g_0_13 g_0_0)
             (Int32.to_int !i))) f_0))
             (Int32.(=)
             (select __anonstruct_Edge_3_to_edges_32
             (shift (select __anonstruct_Graph_4_edges_g_0_13 g_0_0)
             (Int32.to_int !i))) t_0)) then
             ((=)
             (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
             (Int32.to_int !i) (Int.(+) (Int32.to_int !i) (1))
             __anonstruct_Graph_4_edges_g_0_13
             __anonstruct_Edge_3_existent_0_edges_32
             __anonstruct_Edge_3_to_edges_32
             __anonstruct_Edge_3_from_edges_32) (1)) else
             ((=)
             (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
             (Int32.to_int !i) (Int.(+) (Int32.to_int !i) (1))
             __anonstruct_Graph_4_edges_g_0_13
             __anonstruct_Edge_3_existent_0_edges_32
             __anonstruct_Edge_3_to_edges_32
             __anonstruct_Edge_3_from_edges_32) (0)))) }); () end end;
           (i :=
            (Unsafe_int32.(+)  !i
             (#"3-2_c.jc" 373 53 65# "expl:Integer cast"
             (Unsafe_int32.of_int (1))) )) end;
           (raise (Loop_continue_exc ())) end with Loop_continue_exc
          _jessie_3 -> () end end end; (raise (Goto_while_0_break_exc ()))
       end end with Goto_while_0_break_exc _jessie_1 ->
      'While_0_break: 'While_0_break: () end;
     begin
     (assert {
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 187 15 46#
     "expl:Assertion in line 187"
     ((=) (Int32.to_int !c)
     (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0) (0)
     (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))
     __anonstruct_Graph_4_edges_g_0_13
     __anonstruct_Edge_3_existent_0_edges_32 __anonstruct_Edge_3_to_edges_32
     __anonstruct_Edge_3_from_edges_32))) }); () end;
     begin
     (assert {
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 188 15 53#
     "expl:Assertion in line 188"
     ((=)
     (count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
     (Int32.to_int (select __anonstruct_Graph_4_ecnt_g_0_13 g_0_0))
     (Int32.to_int (select __anonstruct_Graph_4_esize_g_0_13 g_0_0))
     __anonstruct_Graph_4_edges_g_0_13
     __anonstruct_Edge_3_existent_0_edges_32 __anonstruct_Edge_3_to_edges_32
     __anonstruct_Edge_3_from_edges_32) (0))) }); () end;
     begin (return := !c); (raise Return) end end)); absurd  end with Return
    -> !return end)
  
end

theory Logic_range_existent

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use enum.Int32 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  predicate range_existent (g_4 : (pointer __anonstruct_Graph_4)) (m : int)
  (n_2 : int) (__anonstruct_Graph_4_edges_g_4_7_at_L : (memory
  __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
  (__anonstruct_Edge_3_existent_0_edges_19_at_L : (memory __anonstruct_Edge_3
  Int32.t))
  =
     (forall k_4 : int.
      ((((<=) m k_4) /\ ((<) k_4 n_2)) ->
       (not
       ((=)
       (Int32.to_int
       (select __anonstruct_Edge_3_existent_0_edges_19_at_L
       (shift (select __anonstruct_Graph_4_edges_g_4_7_at_L g_4) k_4))) (0)))))
  
  
end

theory Logic_full

  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_range_existent 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  predicate full (g_3 : (pointer __anonstruct_Graph_4))
  (__anonstruct_Graph_4_esize_g_3_6_at_L : (memory __anonstruct_Graph_4
  Int32.t)) (__anonstruct_Graph_4_edges_g_3_6_at_L : (memory
  __anonstruct_Graph_4 (pointer __anonstruct_Edge_3)))
  (__anonstruct_Edge_3_existent_0_edges_51_at_L : (memory __anonstruct_Edge_3
  Int32.t))
  =
     (range_existent g_3 (0)
     (Int32.to_int (select __anonstruct_Graph_4_esize_g_3_6_at_L g_3))
     __anonstruct_Graph_4_edges_g_3_6_at_L
     __anonstruct_Edge_3_existent_0_edges_51_at_L)
  
  
end

module Function_add_edge_safety
#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 204 0 32#
"expl:add_edge, safety"

  use import core.Upd_safe 
  
  use import core.Upd_offset_safe 
  
  use import core.Tag_table_type 
  
  use import core.Shift_safe 
  
  use Safe_int32 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use import Logic_graph_valid 
  
  use import Logic_full 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use bool.Bool 
  
  use import Axiomatic_LF__Axiomatic__ecnt_empty_g 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Alloc_table 
  
  use import core.Acc_safe 
  
  use import core.Acc_offset_safe 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  let add_edge #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 204 0 32#
  "expl:Function add_edge, safety" =
  fun
   (g_6 : (pointer __anonstruct_Graph_4)) (f_2 : Int32.t) (t_2 : Int32.t)
   (__anonstruct_Edge_3_from_edges_34 : ref (memory __anonstruct_Edge_3
   Int32.t)) (__anonstruct_Edge_3_to_edges_34 : ref (memory
   __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_existent_0_edges_34 :
   ref (memory __anonstruct_Edge_3 Int32.t)) (__anonstruct_Graph_4_ecnt_g_14
   : ref (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Edge_3_edges_34_alloc_table : (alloc_table
   __anonstruct_Edge_3)) (__anonstruct_Graph_4_g_14_alloc_table :
   (alloc_table __anonstruct_Graph_4))
   (__anonstruct_Vertex_2_vertices_33_alloc_table : (alloc_table
   __anonstruct_Vertex_2)) (__anonstruct_Edge_3_edges_34_tag_table :
   (tag_table __anonstruct_Edge_3))
   (__anonstruct_Vertex_2_existent_vertices_33 : (memory
   __anonstruct_Vertex_2 Int32.t)) (__anonstruct_Graph_4_vertices_g_14 :
   (memory __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
   (__anonstruct_Graph_4_vsize_g_14 : (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Graph_4_edges_g_14 : (memory __anonstruct_Graph_4 (pointer
   __anonstruct_Edge_3))) (__anonstruct_Graph_4_esize_g_14 : (memory
   __anonstruct_Graph_4 Int32.t)) 
   requires {
   (#"3-2_c.jc" 404 12 857#
   ((#"3-2_c.jc" 404 12 857# _LF__Predicate__ecnt_empty_g) /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 193 11 20#
    (#"3-2_c.jc" 404 12 857#
    ((#"3-2_c.jc" 404 12 857#
     ((<=) (offset_min __anonstruct_Graph_4_g_14_alloc_table g_6) (0)))
    /\
    (#"3-2_c.jc" 404 12 857#
    ((#"3-2_c.jc" 404 12 857#
     ((>=) (offset_max __anonstruct_Graph_4_g_14_alloc_table g_6) (0)))
    /\ (#"3-2_c.jc" 404 12 857# ((=) true true)))))))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 193 24 38#
    (graph_valid g_6 __anonstruct_Vertex_2_vertices_33_alloc_table
    __anonstruct_Edge_3_edges_34_alloc_table __anonstruct_Graph_4_esize_g_14
    !__anonstruct_Graph_4_ecnt_g_14 __anonstruct_Graph_4_edges_g_14
    __anonstruct_Graph_4_vsize_g_14 __anonstruct_Graph_4_vertices_g_14
    !__anonstruct_Edge_3_existent_0_edges_34 !__anonstruct_Edge_3_to_edges_34
    !__anonstruct_Edge_3_from_edges_34
    __anonstruct_Vertex_2_existent_vertices_33))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 194 11 26#
    (is_vertex g_6 (Int32.to_int f_2) __anonstruct_Graph_4_vsize_g_14))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 195 11 26#
    (is_vertex g_6 (Int32.to_int t_2) __anonstruct_Graph_4_vsize_g_14))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 196 11 34#
    (not
    ((=)
    (Int32.to_int
    (select __anonstruct_Vertex_2_existent_vertices_33
    (shift (select __anonstruct_Graph_4_vertices_g_14 g_6)
    (Int32.to_int f_2)))) (0))))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 197 11 34#
    (not
    ((=)
    (Int32.to_int
    (select __anonstruct_Vertex_2_existent_vertices_33
    (shift (select __anonstruct_Graph_4_vertices_g_14 g_6)
    (Int32.to_int t_2)))) (0))))
   /\
   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 198 11 19#
   (not
   (full g_6 __anonstruct_Graph_4_esize_g_14 __anonstruct_Graph_4_edges_g_14
   !__anonstruct_Edge_3_existent_0_edges_34))))))))))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   try
    begin
    (let i_0 = ref (Safe_int32.any_  () ) in
    (let i_0_0 = ref (Safe_int32.any_  () ) in
    (let l = ref (Safe_int32.any_  () ) in
    try
     begin
     (if
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 206 8 26#
     (Safe_int32.(<) 
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 206 8 15#
      "expl:Pointer dereference"
      (acc  __anonstruct_Graph_4_g_14_alloc_table
       !__anonstruct_Graph_4_ecnt_g_14 g_6 ))
      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 206 18 26#
      "expl:Pointer dereference"
      (acc  __anonstruct_Graph_4_g_14_alloc_table
       __anonstruct_Graph_4_esize_g_14 g_6 )) ))
     then
      try
       begin
       (let _jessie_91 =
       (let _jessie_90 = f_2 in
       begin
       (assert {
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 207 8 34#
       "expl:Pointer index bounds" true) }); _jessie_90 end) in
       (let _jessie_92 =
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 207 8 16#
       "expl:Pointer dereference"
       (acc  __anonstruct_Graph_4_g_14_alloc_table
        __anonstruct_Graph_4_edges_g_14 g_6 )) in
       (let _jessie_93 =
       (Safe_int32.to_int 
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 207 17 24#
        "expl:Pointer dereference"
        (acc  __anonstruct_Graph_4_g_14_alloc_table
         !__anonstruct_Graph_4_ecnt_g_14 g_6 )) ) in
       (let _jessie_94 = (shift_typesafe  _jessie_92 _jessie_93 ) in
       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 207 8 34#
       "expl:Pointer dereference"
       (upd_offset_typesafe  __anonstruct_Edge_3_edges_34_alloc_table
        __anonstruct_Edge_3_from_edges_34 _jessie_92 _jessie_93 _jessie_91 ))))));
        begin
        (let _jessie_86 =
        (let _jessie_85 = t_2 in
        begin
        (assert {
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 208 8 32#
        "expl:Pointer index bounds" true) }); _jessie_85 end) in
        (let _jessie_87 =
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 208 8 16#
        "expl:Pointer dereference"
        (acc  __anonstruct_Graph_4_g_14_alloc_table
         __anonstruct_Graph_4_edges_g_14 g_6 )) in
        (let _jessie_88 =
        (Safe_int32.to_int 
         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 208 17 24#
         "expl:Pointer dereference"
         (acc  __anonstruct_Graph_4_g_14_alloc_table
          !__anonstruct_Graph_4_ecnt_g_14 g_6 )) ) in
        (let _jessie_89 = (shift_typesafe  _jessie_87 _jessie_88 ) in
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 208 8 32#
        "expl:Pointer dereference"
        (upd_offset_typesafe  __anonstruct_Edge_3_edges_34_alloc_table
         __anonstruct_Edge_3_to_edges_34 _jessie_87 _jessie_88 _jessie_86 ))))));
         begin
         (let _jessie_81 =
         (let _jessie_80 =
         (#"3-2_c.jc" 446 91 103# "expl:Integer cast"
         (Safe_int32.of_int (1))) in
         begin
         (assert {
         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 209 8 38#
         "expl:Pointer index bounds" true) }); _jessie_80 end) in
         (let _jessie_82 =
         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 209 8 16#
         "expl:Pointer dereference"
         (acc  __anonstruct_Graph_4_g_14_alloc_table
          __anonstruct_Graph_4_edges_g_14 g_6 )) in
         (let _jessie_83 =
         (Safe_int32.to_int 
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 209 17 24#
          "expl:Pointer dereference"
          (acc  __anonstruct_Graph_4_g_14_alloc_table
           !__anonstruct_Graph_4_ecnt_g_14 g_6 )) ) in
         (let _jessie_84 = (shift_typesafe  _jessie_82 _jessie_83 ) in
         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 209 8 38#
         "expl:Pointer dereference"
         (upd_offset_typesafe  __anonstruct_Edge_3_edges_34_alloc_table
          __anonstruct_Edge_3_existent_0_edges_34 _jessie_82 _jessie_83
          _jessie_81 ))))));
          begin
          (let _jessie_76 =
          (let _jessie_75 =
          (Safe_int32.(+) 
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 210 11 18#
           "expl:Pointer dereference"
           (acc  __anonstruct_Graph_4_g_14_alloc_table
            !__anonstruct_Graph_4_ecnt_g_14 g_6 ))
           (#"3-2_c.jc" 448 59 71# "expl:Integer cast"
           (Safe_int32.of_int (1))) ) in
          begin
          (assert {
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 210 8 18#
          "expl:Pointer index bounds" true) }); _jessie_75 end) in
          (let _jessie_77 = g_6 in
          (let _jessie_78 = (0) in
          (let _jessie_79 = _jessie_77 in
          (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 210 8 18#
          "expl:Pointer dereference"
          (upd  __anonstruct_Graph_4_g_14_alloc_table
           __anonstruct_Graph_4_ecnt_g_14 _jessie_77 _jessie_76 ))))));
           begin
           any unit
           requires { true } reads { __anonstruct_Edge_3_existent_0_edges_34,
           __anonstruct_Edge_3_from_edges_34,
           __anonstruct_Edge_3_to_edges_34, __anonstruct_Graph_4_ecnt_g_14,
           f_2, g_6, t_2 }
           ensures {
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 213 17 169#
             (forall f2 : int.
              (forall t2 : int.
               (((not ((=) f2 (Int32.to_int f_2))) \/
                (not ((=) t2 (Int32.to_int t_2)))) ->
                ((=)
                (count g_6 f2 t2
                (Int.(-)
                (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                (1))
                (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                __anonstruct_Graph_4_edges_g_14
                !__anonstruct_Edge_3_existent_0_edges_34
                !__anonstruct_Edge_3_to_edges_34
                !__anonstruct_Edge_3_from_edges_34)
                (count g_6 f2 t2
                (Int.(-)
                (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                (1))
                (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                __anonstruct_Graph_4_edges_g_14 (at
                !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                !__anonstruct_Edge_3_to_edges_34 'Init) (at
                !__anonstruct_Edge_3_from_edges_34 'Init))))))) } ; () end;
           begin
           any unit
           requires { true } reads { __anonstruct_Edge_3_existent_0_edges_34,
           __anonstruct_Edge_3_from_edges_34,
           __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
           ensures {
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 219 12 199#
             (forall k_11 : int.
              ((((<=) (0) k_11) /\
               ((<) k_11
               (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6))))
               ->
               (forall f2_0 : int.
                (forall t2_0 : int.
                 (((not ((=) f2_0 (Int32.to_int f_2))) \/
                  (not ((=) t2_0 (Int32.to_int t_2)))) ->
                  ((=)
                  (count g_6 f2_0 t2_0 k_11 (Int.(+) k_11 (1))
                  __anonstruct_Graph_4_edges_g_14
                  !__anonstruct_Edge_3_existent_0_edges_34
                  !__anonstruct_Edge_3_to_edges_34
                  !__anonstruct_Edge_3_from_edges_34)
                  (count g_6 f2_0 t2_0 k_11 (Int.(+) k_11 (1))
                  __anonstruct_Graph_4_edges_g_14 (at
                  !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                  !__anonstruct_Edge_3_to_edges_34 'Init) (at
                  !__anonstruct_Edge_3_from_edges_34 'Init))))))))) } ; ()
           end;
           begin
           any unit
           requires { true } reads { __anonstruct_Edge_3_existent_0_edges_34,
           __anonstruct_Edge_3_from_edges_34,
           __anonstruct_Edge_3_to_edges_34, __anonstruct_Graph_4_ecnt_g_14,
           f_2, g_6, t_2 }
           ensures {
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 226 12 220#
             (forall k_12 : int.
              ((((<=) (0) k_12) /\
               (((<) k_12
                (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6)))
               /\
               (not
               ((=) k_12
               (Int.(-)
               (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
               (1)))))) ->
               (forall f2_1 : int.
                (forall t2_1 : int.
                 (((not ((=) f2_1 (Int32.to_int f_2))) \/
                  (not ((=) t2_1 (Int32.to_int t_2)))) ->
                  ((=)
                  (count g_6 f2_1 t2_1 k_12 (Int.(+) k_12 (1))
                  __anonstruct_Graph_4_edges_g_14
                  !__anonstruct_Edge_3_existent_0_edges_34
                  !__anonstruct_Edge_3_to_edges_34
                  !__anonstruct_Edge_3_from_edges_34)
                  (count g_6 f2_1 t2_1 k_12 (Int.(+) k_12 (1))
                  __anonstruct_Graph_4_edges_g_14 (at
                  !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                  !__anonstruct_Edge_3_to_edges_34 'Init) (at
                  !__anonstruct_Edge_3_from_edges_34 'Init))))))))) } ; ()
           end;
           begin
           (i_0 :=
            (let _jessie_74 =
            (#"3-2_c.jc" 516 25 37# "expl:Integer cast"
            (Safe_int32.of_int (0))) in
            begin
            (assert {
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 232 16 17#
            "expl:Pointer index bounds" true) }); _jessie_74 end));
            'LoopEntry:
            begin
            'LoopEntry:
            'Loop_6:
            loop
            invariant { (#"3-2_c.jc" 518 9 21314# true) }
              variant {
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 309 27 39#
                (Int.(-)
                (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6))
                (Int32.to_int !i_0))) }
             begin
             any unit
             requires { true } reads {
             __anonstruct_Edge_3_existent_0_edges_34,
             __anonstruct_Edge_3_from_edges_34,
             __anonstruct_Edge_3_to_edges_34, __anonstruct_Graph_4_ecnt_g_14,
             f_2, g_6, t_2 }
             ensures {
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 301 29 274#
                (forall j_6 : int.
                 ((((<=) (0) j_6) /\ ((<=) j_6 (Int32.to_int !i_0))) ->
                  (forall f2_12 : int.
                   (forall t2_12 : int.
                    (((not ((=) f2_12 (Int32.to_int f_2))) \/
                     (not ((=) t2_12 (Int32.to_int t_2)))) ->
                     ((=)
                     (count g_6 f2_12 t2_12 (0) j_6
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (count g_6 f2_12 t2_12 (0) j_6
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init)))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 294 29 286#
                (forall j_5 : int.
                 ((((<=) (0) j_5) /\
                  ((<=) j_5 (Int.(-) (Int32.to_int !i_0) (1)))) ->
                  (forall f2_11 : int.
                   (forall t2_11 : int.
                    (((not ((=) f2_11 (Int32.to_int f_2))) \/
                     (not ((=) t2_11 (Int32.to_int t_2)))) ->
                     ((=)
                     (count g_6 f2_11 t2_11 j_5 (Int.(+) j_5 (1))
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (count g_6 f2_11 t2_11 j_5 (Int.(+) j_5 (1))
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init)))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 287 29 339#
                (forall j_4 : int.
                 ((((<=) (0) j_4) /\
                  (((>=) j_4 (Int.(-) (Int32.to_int !i_0) (1))) /\
                  ((<) j_4
                  (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6)))))
                  ->
                  (forall f2_10 : int.
                   (forall t2_10 : int.
                    (((not ((=) f2_10 (Int32.to_int f_2))) \/
                     (not ((=) t2_10 (Int32.to_int t_2)))) ->
                     ((=)
                     (count g_6 f2_10 t2_10 (0) (Int.(+) j_4 (1))
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (Int.(+)
                     (count g_6 f2_10 t2_10 (0) j_4
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (count g_6 f2_10 t2_10 j_4 (Int.(+) j_4 (1))
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 280 29 318#
                (forall j_3 : int.
                 ((((<=) (0) j_3) /\
                  ((<=) j_3 (Int.(-) (Int32.to_int !i_0) (1)))) ->
                  (forall f2_9 : int.
                   (forall t2_9 : int.
                    (((not ((=) f2_9 (Int32.to_int f_2))) \/
                     (not ((=) t2_9 (Int32.to_int t_2)))) ->
                     ((=)
                     (count g_6 f2_9 t2_9 (0) (Int.(+) j_3 (1))
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (Int.(+)
                     (count g_6 f2_9 t2_9 (0) j_3
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (count g_6 f2_9 t2_9 j_3 (Int.(+) j_3 (1))
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 273 29 336#
                (forall j_2 : int.
                 ((((<=) (0) j_2) /\
                  (((>=) j_2 (Int.(-) (Int32.to_int !i_0) (1))) /\
                  ((<) j_2
                  (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6)))))
                  ->
                  (forall f2_8 : int.
                   (forall t2_8 : int.
                    (((not ((=) f2_8 (Int32.to_int f_2))) \/
                     (not ((=) t2_8 (Int32.to_int t_2)))) ->
                     ((=)
                     (count g_6 f2_8 t2_8 (0) (Int.(+) j_2 (1))
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init))
                     (Int.(+)
                     (count g_6 f2_8 t2_8 (0) j_2
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init))
                     (count g_6 f2_8 t2_8 j_2 (Int.(+) j_2 (1))
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init))))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 266 29 315#
                (forall j_1 : int.
                 ((((<=) (0) j_1) /\
                  ((<=) j_1 (Int.(-) (Int32.to_int !i_0) (1)))) ->
                  (forall f2_7 : int.
                   (forall t2_7 : int.
                    (((not ((=) f2_7 (Int32.to_int f_2))) \/
                     (not ((=) t2_7 (Int32.to_int t_2)))) ->
                     ((=)
                     (count g_6 f2_7 t2_7 (0) (Int.(+) j_1 (1))
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init))
                     (Int.(+)
                     (count g_6 f2_7 t2_7 (0) j_1
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init))
                     (count g_6 f2_7 t2_7 j_1 (Int.(+) j_1 (1))
                     __anonstruct_Graph_4_edges_g_14 (at
                     !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                     !__anonstruct_Edge_3_to_edges_34 'Init) (at
                     !__anonstruct_Edge_3_from_edges_34 'Init))))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 263 29 125#
                ((Int32.(>=) !i_0
                 (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) ->
                 ((=)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (Int.(+)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init)) (1)))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 260 29 157#
                (((>=) (Int32.to_int !i_0)
                 (Int.(-)
                 (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                 (1))) ->
                 ((=)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (Int.(+)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                 (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 257 29 154#
                (((>=) (Int32.to_int !i_0)
                 (Int.(-)
                 (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                 (1))) ->
                 ((=)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))
                 (Int.(+)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                 (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 254 29 118#
                ((Int32.(<) !i_0
                 (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) ->
                 ((=)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init)))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 251 29 156#
                (((<) (Int32.to_int !i_0)
                 (Int.(-)
                 (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                 (1))) ->
                 ((=)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (Int.(+)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                 (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 248 29 153#
                (((<) (Int32.to_int !i_0)
                 (Int.(-)
                 (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                 (1))) ->
                 ((=)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))
                 (Int.(+)
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                 (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))
                 (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                 (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                 __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 244 29 188#
                (forall j_0 : int.
                 ((((<=) (0) j_0) /\
                  (((<) j_0 (Int32.to_int !i_0)) /\
                  (not
                  ((=) j_0
                  (Int.(-)
                  (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                  (1)))))) ->
                  ((=)
                  (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) j_0
                  (Int.(+) j_0 (1)) __anonstruct_Graph_4_edges_g_14 (at
                  !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                  !__anonstruct_Edge_3_to_edges_34 'Init) (at
                  !__anonstruct_Edge_3_from_edges_34 'Init))
                  (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) j_0
                  (Int.(+) j_0 (1)) __anonstruct_Graph_4_edges_g_14
                  !__anonstruct_Edge_3_existent_0_edges_34
                  !__anonstruct_Edge_3_to_edges_34
                  !__anonstruct_Edge_3_from_edges_34)))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 240 29 168#
                (forall j : int.
                 ((((<=) (0) j) /\
                  (((<) j (Int32.to_int !i_0)) /\
                  (not
                  ((=) j
                  (Int.(-)
                  (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
                  (1)))))) ->
                  ((Int32.(=)
                   (select (at !__anonstruct_Edge_3_from_edges_34 'Init)
                   (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))
                   (select !__anonstruct_Edge_3_from_edges_34
                   (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j)))
                  /\
                  ((Int32.(=)
                   (select (at !__anonstruct_Edge_3_to_edges_34 'Init)
                   (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))
                   (select !__anonstruct_Edge_3_to_edges_34
                   (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j)))
                  /\
                  (Int32.(=)
                  (select (at !__anonstruct_Edge_3_existent_0_edges_34 'Init)
                  (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))
                  (select !__anonstruct_Edge_3_existent_0_edges_34
                  (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 238 29 43#
                (graph_valid g_6
                __anonstruct_Vertex_2_vertices_33_alloc_table
                __anonstruct_Edge_3_edges_34_alloc_table
                __anonstruct_Graph_4_esize_g_14
                !__anonstruct_Graph_4_ecnt_g_14
                __anonstruct_Graph_4_edges_g_14
                __anonstruct_Graph_4_vsize_g_14
                __anonstruct_Graph_4_vertices_g_14
                !__anonstruct_Edge_3_existent_0_edges_34
                !__anonstruct_Edge_3_to_edges_34
                !__anonstruct_Edge_3_from_edges_34
                __anonstruct_Vertex_2_existent_vertices_33))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 237 29 67#
                (if
                 ((<=) (0)
                 (Int.(-)
                 (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6))
                 (1))) then
                 (((<=)
                  (offset_min __anonstruct_Edge_3_edges_34_alloc_table
                  (select __anonstruct_Graph_4_edges_g_14 g_6)) (0))
                 /\
                 (((>=)
                  (offset_max __anonstruct_Edge_3_edges_34_alloc_table
                  (select __anonstruct_Graph_4_edges_g_14 g_6))
                  (Int.(-)
                  (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6))
                  (1)))
                 /\
                 (forall __framac_tmp6 : int.
                  ((((<=) (0) __framac_tmp6) /\
                   ((<=) __framac_tmp6
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))) ->
                   ((=) true true))))) else ((=) true true)))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                 ((<=) (offset_min __anonstruct_Graph_4_g_14_alloc_table g_6)
                 (0)))
                /\
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                 ((>=) (offset_max __anonstruct_Graph_4_g_14_alloc_table g_6)
                 (0)))
                /\
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                ((=) true true)))))))
               /\
               ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 235 29 42#
                (Int32.(<=) !i_0
                (select __anonstruct_Graph_4_esize_g_14 g_6)))
               /\
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 234 29 35#
               (Int32.(>=) !i_0 (#"3-2_c.jc" 523 39 51# "expl:Integer cast"
               (Int32.of_int (0))))))))))))))))))))))) } ;
              try
               begin
               'LoopCurrent:
               begin
               'LoopCurrent:
               (if
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 311 19 31#
               (Safe_int32.(<)  !i_0
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 311 23 31#
                "expl:Pointer dereference"
                (acc  __anonstruct_Graph_4_g_14_alloc_table
                 __anonstruct_Graph_4_esize_g_14 g_6 )) )) then ()
               else (raise (Goto_while_0_break_0_exc ())));
                begin
                (i_0 :=
                 (let _jessie_73 =
                 (Safe_int32.(+)  !i_0
                  (#"3-2_c.jc" 716 63 75# "expl:Integer cast"
                  (Safe_int32.of_int (1))) ) in
                 begin
                 (assert {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 312 16 19#
                 "expl:Pointer index bounds" true) }); _jessie_73 end));
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Edge_3_existent_0_edges_34,
                 __anonstruct_Edge_3_from_edges_34,
                 __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                 ensures {
                   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 313 27 144#
                   (forall f2_2 : int.
                    (forall t2_2 : int.
                     (((not ((=) f2_2 (Int32.to_int f_2))) \/
                      (not ((=) t2_2 (Int32.to_int t_2)))) ->
                      ((=)
                      (count g_6 f2_2 t2_2 (Int.(-) (Int32.to_int !i_0) (1))
                      (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34)
                      (count g_6 f2_2 t2_2 (Int.(-) (Int32.to_int !i_0) (1))
                      (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init))))))) } ; ()
                 end;
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Edge_3_existent_0_edges_34,
                 __anonstruct_Edge_3_from_edges_34,
                 __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                 ensures {
                   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 314 27 176#
                   (forall f2_3 : int.
                    (forall t2_3 : int.
                     (((not ((=) f2_3 (Int32.to_int f_2))) \/
                      (not ((=) t2_3 (Int32.to_int t_2)))) ->
                      ((=)
                      (count g_6 f2_3 t2_3 (0) (Int32.to_int !i_0)
                      __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34)
                      (Int.(+)
                      (count g_6 f2_3 t2_3 (0)
                      (Int.(-) (Int32.to_int !i_0) (1))
                      __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34)
                      (count g_6 f2_3 t2_3 (Int.(-) (Int32.to_int !i_0) (1))
                      (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34))))))) } ; () end;
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Edge_3_existent_0_edges_34,
                 __anonstruct_Edge_3_from_edges_34,
                 __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                 ensures {
                   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 315 27 173#
                   (forall f2_4 : int.
                    (forall t2_4 : int.
                     (((not ((=) f2_4 (Int32.to_int f_2))) \/
                      (not ((=) t2_4 (Int32.to_int t_2)))) ->
                      ((=)
                      (count g_6 f2_4 t2_4 (0) (Int32.to_int !i_0)
                      __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init))
                      (Int.(+)
                      (count g_6 f2_4 t2_4 (0)
                      (Int.(-) (Int32.to_int !i_0) (1))
                      __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init))
                      (count g_6 f2_4 t2_4 (Int.(-) (Int32.to_int !i_0) (1))
                      (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init)))))))) } ; ()
                 end;
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Edge_3_existent_0_edges_34,
                 __anonstruct_Edge_3_from_edges_34,
                 __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                 ensures {
                   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 316 27 144#
                   (forall f2_5 : int.
                    (forall t2_5 : int.
                     (((not ((=) f2_5 (Int32.to_int f_2))) \/
                      (not ((=) t2_5 (Int32.to_int t_2)))) ->
                      ((=)
                      (count g_6 f2_5 t2_5 (0)
                      (Int.(-) (Int32.to_int !i_0) (1))
                      __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34)
                      (count g_6 f2_5 t2_5 (0)
                      (Int.(-) (Int32.to_int !i_0) (1))
                      __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init))))))) } ; ()
                 end;
                 begin
                 any unit
                 requires { true } reads {
                 __anonstruct_Edge_3_existent_0_edges_34,
                 __anonstruct_Edge_3_from_edges_34,
                 __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                 ensures {
                   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 317 27 174#
                   (forall f2_6 : int.
                    (forall t2_6 : int.
                     (((not ((=) f2_6 (Int32.to_int f_2))) \/
                      (not ((=) t2_6 (Int32.to_int t_2)))) ->
                      ((=)
                      (count g_6 f2_6 t2_6 (0) (Int32.to_int !i_0)
                      __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34)
                      (Int.(+)
                      (count g_6 f2_6 t2_6 (0)
                      (Int.(-) (Int32.to_int !i_0) (1))
                      __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init))
                      (count g_6 f2_6 t2_6 (Int.(-) (Int32.to_int !i_0) (1))
                      (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init)))))))) } ; ()
                 end end end; (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end;
             (raise (Goto_while_0_break_0_exc ())) end end end end end end
       with Goto_while_0_break_0_exc _jessie_4 ->
       'While_0_break_0:
       'While_0_break_0: begin (); (raise (Return_label_exc ())) end end
     else ());
      try
       begin
       (i_0_0 :=
        (let _jessie_113 =
        (#"3-2_c.jc" 852 28 40# "expl:Integer cast" (Safe_int32.of_int (0)))
        in
        begin
        (assert {
        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 343 13 14#
        "expl:Pointer index bounds" true) }); _jessie_113 end));
        'LoopEntry:
        begin
        'LoopEntry:
        'Loop_7:
        loop
        invariant { (#"3-2_c.jc" 854 9 38399# true) }
          variant { (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 341 21 32#
            (Int.(-)
            (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
            (Int32.to_int !i_0_0))) }
         begin
         any unit
         requires { true } reads { __anonstruct_Edge_3_existent_0_edges_34,
         __anonstruct_Edge_3_from_edges_34, __anonstruct_Edge_3_to_edges_34,
         __anonstruct_Graph_4_ecnt_g_14, f_2, g_6, t_2 }
         ensures {
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 337 23 143#
            (forall f2_25 : int.
             (forall t2_25 : int.
              (((not ((=) f2_25 (Int32.to_int f_2))) \/
               (not ((=) t2_25 (Int32.to_int t_2)))) ->
               ((=)
               (all_count g_6 f2_25 t2_25 __anonstruct_Graph_4_esize_g_14
               __anonstruct_Graph_4_edges_g_14
               !__anonstruct_Edge_3_existent_0_edges_34
               !__anonstruct_Edge_3_to_edges_34
               !__anonstruct_Edge_3_from_edges_34)
               (all_count g_6 f2_25 t2_25 __anonstruct_Graph_4_esize_g_14
               __anonstruct_Graph_4_edges_g_14 (at
               !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
               !__anonstruct_Edge_3_to_edges_34 'Init) (at
               !__anonstruct_Edge_3_from_edges_34 'Init)))))))
           /\
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 334 23 116#
            (forall f2_24 : int.
             (forall t2_24 : int.
              (forall m_10 : int.
               (forall n_9 : int.
                ((=)
                (count g_6 f2_24 t2_24 m_10 n_9
                __anonstruct_Graph_4_edges_g_14
                !__anonstruct_Edge_3_existent_0_edges_34
                !__anonstruct_Edge_3_to_edges_34
                !__anonstruct_Edge_3_from_edges_34)
                (count g_6 f2_24 t2_24 m_10 n_9
                __anonstruct_Graph_4_edges_g_14 (at
                !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                !__anonstruct_Edge_3_to_edges_34 'Init) (at
                !__anonstruct_Edge_3_from_edges_34 'Init))))))))
           /\
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 331 23 101#
            (exists j_16 : int.
             (((<=) (0) j_16) /\
             (((<) j_16
              (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6)))
             /\
             (Int32.(=)
             (select !__anonstruct_Edge_3_existent_0_edges_34
             (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j_16))
             (#"3-2_c.jc" 872 37 49# "expl:Integer cast" (Int32.of_int (0))))))))
           /\
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 328 23 96#
            (forall j_15 : int.
             ((((<=) (0) j_15) /\ ((<) j_15 (Int32.to_int !i_0_0))) ->
              (not
              (Int32.(=)
              (select !__anonstruct_Edge_3_existent_0_edges_34
              (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j_15))
              (#"3-2_c.jc" 866 40 52# "expl:Integer cast" (Int32.of_int
              (0))))))))
           /\
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 326 23 37#
            (graph_valid g_6 __anonstruct_Vertex_2_vertices_33_alloc_table
            __anonstruct_Edge_3_edges_34_alloc_table
            __anonstruct_Graph_4_esize_g_14 !__anonstruct_Graph_4_ecnt_g_14
            __anonstruct_Graph_4_edges_g_14 __anonstruct_Graph_4_vsize_g_14
            __anonstruct_Graph_4_vertices_g_14
            !__anonstruct_Edge_3_existent_0_edges_34
            !__anonstruct_Edge_3_to_edges_34
            !__anonstruct_Edge_3_from_edges_34
            __anonstruct_Vertex_2_existent_vertices_33))
           /\
           ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 325 23 35#
            (Int32.(<=) !i_0_0 (select !__anonstruct_Graph_4_ecnt_g_14 g_6)))
           /\
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 324 23 29#
           (Int32.(>=) !i_0_0 (#"3-2_c.jc" 856 41 53# "expl:Integer cast"
           (Int32.of_int (0))))))))))) } ;
          try
           begin
           'LoopCurrent:
           begin
           'LoopCurrent:
           (if
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 343 20 31#
           (Safe_int32.(<)  !i_0_0
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 343 24 31#
            "expl:Pointer dereference"
            (acc  __anonstruct_Graph_4_g_14_alloc_table
             !__anonstruct_Graph_4_ecnt_g_14 g_6 )) )) then ()
           else (raise (Goto_while_0_break_0_0_exc ())));
            'U__Pre:
            'U__Pre:
            (if
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 345 12 33#
            (Bool.notb 
             (Safe_int32.(<>) 
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 345 13 33#
              "expl:Pointer dereference"
              (acc_offset_typesafe  __anonstruct_Edge_3_edges_34_alloc_table
               !__anonstruct_Edge_3_existent_0_edges_34
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 345 13 21#
               "expl:Pointer dereference"
               (acc  __anonstruct_Graph_4_g_14_alloc_table
                __anonstruct_Graph_4_edges_g_14 g_6 ))
               (Safe_int32.to_int  !i_0_0 ) ))
              (#"3-2_c.jc" 897 45 57# "expl:Integer cast"
              (Safe_int32.of_int (0))) ) ))
            then
             try
              begin
              (let _jessie_108 =
              (let _jessie_107 = f_2 in
              begin
              (assert {
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 346 12 32#
              "expl:Pointer index bounds" true) }); _jessie_107 end) in
              (let _jessie_109 =
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 346 12 20#
              "expl:Pointer dereference"
              (acc  __anonstruct_Graph_4_g_14_alloc_table
               __anonstruct_Graph_4_edges_g_14 g_6 )) in
              (let _jessie_110 = (Safe_int32.to_int  !i_0_0 ) in
              (let _jessie_111 = (shift_typesafe  _jessie_109 _jessie_110 )
              in
              (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 346 12 32#
              "expl:Pointer dereference"
              (upd_offset_typesafe  __anonstruct_Edge_3_edges_34_alloc_table
               __anonstruct_Edge_3_from_edges_34 _jessie_109 _jessie_110
               _jessie_108 ))))));
               begin
               (let _jessie_103 =
               (let _jessie_102 = t_2 in
               begin
               (assert {
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 347 12 30#
               "expl:Pointer index bounds" true) }); _jessie_102 end) in
               (let _jessie_104 =
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 347 12 20#
               "expl:Pointer dereference"
               (acc  __anonstruct_Graph_4_g_14_alloc_table
                __anonstruct_Graph_4_edges_g_14 g_6 )) in
               (let _jessie_105 = (Safe_int32.to_int  !i_0_0 ) in
               (let _jessie_106 = (shift_typesafe  _jessie_104 _jessie_105 )
               in
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 347 12 30#
               "expl:Pointer dereference"
               (upd_offset_typesafe  __anonstruct_Edge_3_edges_34_alloc_table
                __anonstruct_Edge_3_to_edges_34 _jessie_104 _jessie_105
                _jessie_103 ))))));
                begin
                (let _jessie_98 =
                (let _jessie_97 =
                (#"3-2_c.jc" 903 84 96# "expl:Integer cast"
                (Safe_int32.of_int (1))) in
                begin
                (assert {
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 348 12 36#
                "expl:Pointer index bounds" true) }); _jessie_97 end) in
                (let _jessie_99 =
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 348 12 20#
                "expl:Pointer dereference"
                (acc  __anonstruct_Graph_4_g_14_alloc_table
                 __anonstruct_Graph_4_edges_g_14 g_6 )) in
                (let _jessie_100 = (Safe_int32.to_int  !i_0_0 ) in
                (let _jessie_101 = (shift_typesafe  _jessie_99 _jessie_100 )
                in
                (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 348 12 36#
                "expl:Pointer dereference"
                (upd_offset_typesafe 
                 __anonstruct_Edge_3_edges_34_alloc_table
                 __anonstruct_Edge_3_existent_0_edges_34 _jessie_99
                 _jessie_100 _jessie_98 ))))));
                 begin
                 (l :=
                  (let _jessie_96 =
                  (#"3-2_c.jc" 904 44 56# "expl:Integer cast"
                  (Safe_int32.of_int (0))) in
                  begin
                  (assert {
                  (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 351 18 19#
                  "expl:Pointer index bounds" true) }); _jessie_96 end));
                  'LoopEntry:
                  begin
                  'LoopEntry:
                  'Loop_8:
                  loop
                  invariant { (#"3-2_c.jc" 906 29 34171# true) }
                    variant {
                      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 427 29 41#
                      (Int.(-)
                      (Int32.to_int
                      (select __anonstruct_Graph_4_esize_g_14 g_6))
                      (Int32.to_int !l))) }
                   begin
                   any unit
                   requires { true } reads {
                   __anonstruct_Edge_3_existent_0_edges_34,
                   __anonstruct_Edge_3_from_edges_34,
                   __anonstruct_Edge_3_to_edges_34,
                   __anonstruct_Graph_4_ecnt_g_14, f_2, g_6, t_2 }
                   ensures {
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 420 31 317#
                      (forall j_14 : int.
                       ((((<=) (0) j_14) /\ ((<=) j_14 (Int32.to_int !l))) ->
                        (forall f2_23 : int.
                         (forall t2_23 : int.
                          (((not ((=) f2_23 (Int32.to_int f_2))) \/
                           (not ((=) t2_23 (Int32.to_int t_2)))) ->
                           ((=)
                           (count g_6 f2_23 t2_23 (0) j_14
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)
                           (count g_6 f2_23 t2_23 (0) j_14
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 413 31 329#
                      (forall j_13 : int.
                       ((((<=) (0) j_13) /\
                        ((<=) j_13 (Int.(-) (Int32.to_int !l) (1)))) ->
                        (forall f2_22 : int.
                         (forall t2_22 : int.
                          (((not ((=) f2_22 (Int32.to_int f_2))) \/
                           (not ((=) t2_22 (Int32.to_int t_2)))) ->
                           ((=)
                           (count g_6 f2_22 t2_22 j_13 (Int.(+) j_13 (1))
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)
                           (count g_6 f2_22 t2_22 j_13 (Int.(+) j_13 (1))
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 406 31 381#
                      (forall j_12 : int.
                       ((((<=) (0) j_12) /\
                        (((>=) j_12 (Int.(-) (Int32.to_int !l) (1))) /\
                        ((<) j_12
                        (Int32.to_int
                        (select __anonstruct_Graph_4_esize_g_14 g_6))))) ->
                        (forall f2_21 : int.
                         (forall t2_21 : int.
                          (((not ((=) f2_21 (Int32.to_int f_2))) \/
                           (not ((=) t2_21 (Int32.to_int t_2)))) ->
                           ((=)
                           (count g_6 f2_21 t2_21 (0) (Int.(+) j_12 (1))
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)
                           (Int.(+)
                           (count g_6 f2_21 t2_21 (0) j_12
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)
                           (count g_6 f2_21 t2_21 j_12 (Int.(+) j_12 (1))
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 399 31 360#
                      (forall j_11 : int.
                       ((((<=) (0) j_11) /\
                        ((<=) j_11 (Int.(-) (Int32.to_int !l) (1)))) ->
                        (forall f2_20 : int.
                         (forall t2_20 : int.
                          (((not ((=) f2_20 (Int32.to_int f_2))) \/
                           (not ((=) t2_20 (Int32.to_int t_2)))) ->
                           ((=)
                           (count g_6 f2_20 t2_20 (0) (Int.(+) j_11 (1))
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)
                           (Int.(+)
                           (count g_6 f2_20 t2_20 (0) j_11
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)
                           (count g_6 f2_20 t2_20 j_11 (Int.(+) j_11 (1))
                           __anonstruct_Graph_4_edges_g_14
                           !__anonstruct_Edge_3_existent_0_edges_34
                           !__anonstruct_Edge_3_to_edges_34
                           !__anonstruct_Edge_3_from_edges_34)))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 392 31 381#
                      (forall j_10 : int.
                       ((((<=) (0) j_10) /\
                        (((>=) j_10 (Int.(-) (Int32.to_int !l) (1))) /\
                        ((<) j_10
                        (Int32.to_int
                        (select __anonstruct_Graph_4_esize_g_14 g_6))))) ->
                        (forall f2_19 : int.
                         (forall t2_19 : int.
                          (((not ((=) f2_19 (Int32.to_int f_2))) \/
                           (not ((=) t2_19 (Int32.to_int t_2)))) ->
                           ((=)
                           (count g_6 f2_19 t2_19 (0) (Int.(+) j_10 (1))
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                           (Int.(+)
                           (count g_6 f2_19 t2_19 (0) j_10
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                           (count g_6 f2_19 t2_19 j_10 (Int.(+) j_10 (1))
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 385 31 340#
                      (forall j_9 : int.
                       ((((<=) (0) j_9) /\
                        ((<=) j_9 (Int.(-) (Int32.to_int !l) (1)))) ->
                        (forall f2_18 : int.
                         (forall t2_18 : int.
                          (((not ((=) f2_18 (Int32.to_int f_2))) \/
                           (not ((=) t2_18 (Int32.to_int t_2)))) ->
                           ((=)
                           (count g_6 f2_18 t2_18 (0) (Int.(+) j_9 (1))
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                           (Int.(+)
                           (count g_6 f2_18 t2_18 (0) j_9
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                           (count g_6 f2_18 t2_18 j_9 (Int.(+) j_9 (1))
                           __anonstruct_Graph_4_edges_g_14 (at
                           !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                           (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                           !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 382 31 129#
                      ((Int32.(>) !l !i_0_0) ->
                       ((=)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (Int.(+)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre)) (1)))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 379 31 164#
                      (((>) (Int32.to_int !l)
                       (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                       ((=)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (Int.(+)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                       (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 376 31 160#
                      (((>) (Int32.to_int !l)
                       (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                       ((=)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                       (Int.(+)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                       (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 373 31 124#
                      ((Int32.(<=) !l !i_0_0) ->
                       ((=)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 370 31 159#
                      (((<=) (Int32.to_int !l)
                       (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                       ((=)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (Int.(+)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                       (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 367 31 159#
                      (((<=) (Int32.to_int !l)
                       (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                       ((=)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                       (Int.(+)
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                       (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                       (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                       (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                       !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 363 31 191#
                      (forall j_8 : int.
                       ((((<=) (0) j_8) /\
                        (((<) j_8 (Int32.to_int !l)) /\
                        (not ((=) j_8 (Int32.to_int !i_0_0))))) ->
                        ((=)
                        (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) j_8
                        (Int.(+) j_8 (1)) __anonstruct_Graph_4_edges_g_14 (at
                        !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                        !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                        !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                        (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) j_8
                        (Int.(+) j_8 (1)) __anonstruct_Graph_4_edges_g_14
                        !__anonstruct_Edge_3_existent_0_edges_34
                        !__anonstruct_Edge_3_to_edges_34
                        !__anonstruct_Edge_3_from_edges_34)))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 359 31 171#
                      (forall j_7 : int.
                       ((((<=) (0) j_7) /\
                        (((<) j_7 (Int32.to_int !l)) /\
                        (not ((=) j_7 (Int32.to_int !i_0_0))))) ->
                        ((Int32.(=)
                         (select (at !__anonstruct_Edge_3_from_edges_34
                         'U__Pre)
                         (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                         j_7))
                         (select !__anonstruct_Edge_3_from_edges_34
                         (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                         j_7)))
                        /\
                        ((Int32.(=)
                         (select (at !__anonstruct_Edge_3_to_edges_34
                         'U__Pre)
                         (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                         j_7))
                         (select !__anonstruct_Edge_3_to_edges_34
                         (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                         j_7)))
                        /\
                        (Int32.(=)
                        (select (at !__anonstruct_Edge_3_existent_0_edges_34
                        'U__Pre)
                        (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                        j_7))
                        (select !__anonstruct_Edge_3_existent_0_edges_34
                        (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                        j_7))))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 357 31 45#
                      (graph_valid g_6
                      __anonstruct_Vertex_2_vertices_33_alloc_table
                      __anonstruct_Edge_3_edges_34_alloc_table
                      __anonstruct_Graph_4_esize_g_14
                      !__anonstruct_Graph_4_ecnt_g_14
                      __anonstruct_Graph_4_edges_g_14
                      __anonstruct_Graph_4_vsize_g_14
                      __anonstruct_Graph_4_vertices_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34
                      __anonstruct_Vertex_2_existent_vertices_33))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 356 31 69#
                      (if
                       ((<=) (0)
                       (Int.(-)
                       (Int32.to_int
                       (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))
                       then
                       (((<=)
                        (offset_min __anonstruct_Edge_3_edges_34_alloc_table
                        (select __anonstruct_Graph_4_edges_g_14 g_6)) (0))
                       /\
                       (((>=)
                        (offset_max __anonstruct_Edge_3_edges_34_alloc_table
                        (select __anonstruct_Graph_4_edges_g_14 g_6))
                        (Int.(-)
                        (Int32.to_int
                        (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))
                       /\
                       (forall __framac_tmp8 : int.
                        ((((<=) (0) __framac_tmp8) /\
                         ((<=) __framac_tmp8
                         (Int.(-)
                         (Int32.to_int
                         (select __anonstruct_Graph_4_esize_g_14 g_6)) (1))))
                         -> ((=) true true))))) else ((=) true true)))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                      ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                       ((<=)
                       (offset_min __anonstruct_Graph_4_g_14_alloc_table g_6)
                       (0)))
                      /\
                      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                      ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                       ((>=)
                       (offset_max __anonstruct_Graph_4_g_14_alloc_table g_6)
                       (0)))
                      /\
                      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                      ((=) true true)))))))
                     /\
                     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 354 31 44#
                      (Int32.(<=) !l
                      (select __anonstruct_Graph_4_esize_g_14 g_6)))
                     /\
                     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 353 31 37#
                     (Int32.(>=) !l (#"3-2_c.jc" 911 57 69#
                     "expl:Integer cast" (Int32.of_int (0)))))))))))))))))))))))
                     } ;
                    try
                     begin
                     'LoopCurrent:
                     begin
                     'LoopCurrent:
                     (if
                     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 429 23 35#
                     (Safe_int32.(<)  !l
                      (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 429 27 35#
                      "expl:Pointer dereference"
                      (acc  __anonstruct_Graph_4_g_14_alloc_table
                       __anonstruct_Graph_4_esize_g_14 g_6 )) )) then ()
                     else (raise (Goto_while_1_break_exc ())));
                      begin
                      (l :=
                       (let _jessie_95 =
                       (Safe_int32.(+)  !l
                        (#"3-2_c.jc" 1227 66 78# "expl:Integer cast"
                        (Safe_int32.of_int (1))) ) in
                       begin
                       (assert {
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 430 20 23#
                       "expl:Pointer index bounds" true) }); _jessie_95 end));
                       begin
                       any unit
                       requires { true } reads {
                       __anonstruct_Edge_3_existent_0_edges_34,
                       __anonstruct_Edge_3_from_edges_34,
                       __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                       ensures {
                         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 431 31 149#
                         (forall f2_13 : int.
                          (forall t2_13 : int.
                           (((not ((=) f2_13 (Int32.to_int f_2))) \/
                            (not ((=) t2_13 (Int32.to_int t_2)))) ->
                            ((=)
                            (count g_6 f2_13 t2_13
                            (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34)
                            (count g_6 f2_13 t2_13
                            (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))
                         } ; () end;
                       begin
                       any unit
                       requires { true } reads {
                       __anonstruct_Edge_3_existent_0_edges_34,
                       __anonstruct_Edge_3_from_edges_34,
                       __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                       ensures {
                         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 432 31 180#
                         (forall f2_14 : int.
                          (forall t2_14 : int.
                           (((not ((=) f2_14 (Int32.to_int f_2))) \/
                            (not ((=) t2_14 (Int32.to_int t_2)))) ->
                            ((=)
                            (count g_6 f2_14 t2_14 (0) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34)
                            (Int.(+)
                            (count g_6 f2_14 t2_14 (0)
                            (Int.(-) (Int32.to_int !l) (1))
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34)
                            (count g_6 f2_14 t2_14
                            (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34))))))) } ; ()
                       end;
                       begin
                       any unit
                       requires { true } reads {
                       __anonstruct_Edge_3_existent_0_edges_34,
                       __anonstruct_Edge_3_from_edges_34,
                       __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                       ensures {
                         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 433 31 180#
                         (forall f2_15 : int.
                          (forall t2_15 : int.
                           (((not ((=) f2_15 (Int32.to_int f_2))) \/
                            (not ((=) t2_15 (Int32.to_int t_2)))) ->
                            ((=)
                            (count g_6 f2_15 t2_15 (0) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                            (Int.(+)
                            (count g_6 f2_15 t2_15 (0)
                            (Int.(-) (Int32.to_int !l) (1))
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                            (count g_6 f2_15 t2_15
                            (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))))
                         } ; () end;
                       begin
                       any unit
                       requires { true } reads {
                       __anonstruct_Edge_3_existent_0_edges_34,
                       __anonstruct_Edge_3_from_edges_34,
                       __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                       ensures {
                         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 434 31 149#
                         (forall f2_16 : int.
                          (forall t2_16 : int.
                           (((not ((=) f2_16 (Int32.to_int f_2))) \/
                            (not ((=) t2_16 (Int32.to_int t_2)))) ->
                            ((=)
                            (count g_6 f2_16 t2_16 (0)
                            (Int.(-) (Int32.to_int !l) (1))
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34)
                            (count g_6 f2_16 t2_16 (0)
                            (Int.(-) (Int32.to_int !l) (1))
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))
                         } ; () end;
                       begin
                       any unit
                       requires { true } reads {
                       __anonstruct_Edge_3_existent_0_edges_34,
                       __anonstruct_Edge_3_from_edges_34,
                       __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
                       ensures {
                         (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 435 31 180#
                         (forall f2_17 : int.
                          (forall t2_17 : int.
                           (((not ((=) f2_17 (Int32.to_int f_2))) \/
                            (not ((=) t2_17 (Int32.to_int t_2)))) ->
                            ((=)
                            (count g_6 f2_17 t2_17 (0) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34)
                            (Int.(+)
                            (count g_6 f2_17 t2_17 (0)
                            (Int.(-) (Int32.to_int !l) (1))
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                            (count g_6 f2_17 t2_17
                            (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))))
                         } ; () end end end; (raise (Loop_continue_exc ()))
                     end with Loop_continue_exc _jessie_11 -> () end end end;
                   (raise (Goto_while_1_break_exc ())) end end end end end
              with Goto_while_1_break_exc _jessie_5 ->
              'While_1_break:
              'While_1_break:
              begin
              ();
               begin
               any unit
               requires { true } reads {
               __anonstruct_Edge_3_existent_0_edges_34,
               __anonstruct_Edge_3_from_edges_34,
               __anonstruct_Edge_3_to_edges_34, f_2, g_6, t_2 }
               ensures {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 438 23 75#
                 ((=)
                 (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                 __anonstruct_Graph_4_esize_g_14
                 __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (Int.(+)
                 (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                 __anonstruct_Graph_4_esize_g_14
                 __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
                 !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                 !__anonstruct_Edge_3_from_edges_34 'U__Pre)) (1)))) } ; ()
               end; (raise (Return_label_exc ())) end end else ());
            (i_0_0 :=
             (let _jessie_112 =
             (Safe_int32.(+)  !i_0_0
              (#"3-2_c.jc" 1387 64 76# "expl:Integer cast"
              (Safe_int32.of_int (1))) ) in
             begin
             (assert {
             (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 343 33 36#
             "expl:Pointer index bounds" true) }); _jessie_112 end)) end;
            (raise (Loop_continue_exc ())) end with Loop_continue_exc
           _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_0_0_exc ())) end end with
       Goto_while_0_break_0_0_exc _jessie_6 ->
       'While_0_break_0_0: 'While_0_break_0_0: () end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label: 'Return_label: (raise Return) end))); (raise Return) end
    with Return -> () end
  
end

module Function_add_edge_behaviors
#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 204 0 32#
"expl:add_edge, behaviors"

  use import core.Upd_unsafe 
  
  use Unsafe_int32 
  
  use import core.Tag_table_type 
  
  use import core.Shift_unsafe 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Return 
  
  use import ref.Ref 
  
  use import core.Pset 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use import Logic_graph_valid 
  
  use import Logic_full 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Exceptions 
  
  use bool.Bool 
  
  use import Axiomatic_LF__Axiomatic__ecnt_empty_g 
  
  use import Axiomatic_EdgesCount 
  
  use import core.Assigns 
  
  use import core.Alloc_table 
  
  use import core.Acc_unsafe 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  let add_edge_ensures_default
  #"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 204 0 32#
  "expl:Function add_edge, default behavior" =
  fun
   (g_6 : (pointer __anonstruct_Graph_4)) (f_2 : Int32.t) (t_2 : Int32.t)
   (__anonstruct_Edge_3_from_edges_34 : ref (memory __anonstruct_Edge_3
   Int32.t)) (__anonstruct_Edge_3_to_edges_34 : ref (memory
   __anonstruct_Edge_3 Int32.t)) (__anonstruct_Edge_3_existent_0_edges_34 :
   ref (memory __anonstruct_Edge_3 Int32.t)) (__anonstruct_Graph_4_ecnt_g_14
   : ref (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Edge_3_edges_34_alloc_table : (alloc_table
   __anonstruct_Edge_3)) (__anonstruct_Graph_4_g_14_alloc_table :
   (alloc_table __anonstruct_Graph_4))
   (__anonstruct_Vertex_2_vertices_33_alloc_table : (alloc_table
   __anonstruct_Vertex_2)) (__anonstruct_Edge_3_edges_34_tag_table :
   (tag_table __anonstruct_Edge_3))
   (__anonstruct_Vertex_2_existent_vertices_33 : (memory
   __anonstruct_Vertex_2 Int32.t)) (__anonstruct_Graph_4_vertices_g_14 :
   (memory __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2)))
   (__anonstruct_Graph_4_vsize_g_14 : (memory __anonstruct_Graph_4 Int32.t))
   (__anonstruct_Graph_4_edges_g_14 : (memory __anonstruct_Graph_4 (pointer
   __anonstruct_Edge_3))) (__anonstruct_Graph_4_esize_g_14 : (memory
   __anonstruct_Graph_4 Int32.t)) 
   requires {
   (#"3-2_c.jc" 404 12 857#
   ((#"3-2_c.jc" 404 12 857# _LF__Predicate__ecnt_empty_g) /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 193 11 20#
    (#"3-2_c.jc" 404 12 857#
    ((#"3-2_c.jc" 404 12 857#
     ((<=) (offset_min __anonstruct_Graph_4_g_14_alloc_table g_6) (0)))
    /\
    (#"3-2_c.jc" 404 12 857#
    ((#"3-2_c.jc" 404 12 857#
     ((>=) (offset_max __anonstruct_Graph_4_g_14_alloc_table g_6) (0)))
    /\ (#"3-2_c.jc" 404 12 857# ((=) true true)))))))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 193 24 38#
    (graph_valid g_6 __anonstruct_Vertex_2_vertices_33_alloc_table
    __anonstruct_Edge_3_edges_34_alloc_table __anonstruct_Graph_4_esize_g_14
    !__anonstruct_Graph_4_ecnt_g_14 __anonstruct_Graph_4_edges_g_14
    __anonstruct_Graph_4_vsize_g_14 __anonstruct_Graph_4_vertices_g_14
    !__anonstruct_Edge_3_existent_0_edges_34 !__anonstruct_Edge_3_to_edges_34
    !__anonstruct_Edge_3_from_edges_34
    __anonstruct_Vertex_2_existent_vertices_33))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 194 11 26#
    (is_vertex g_6 (Int32.to_int f_2) __anonstruct_Graph_4_vsize_g_14))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 195 11 26#
    (is_vertex g_6 (Int32.to_int t_2) __anonstruct_Graph_4_vsize_g_14))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 196 11 34#
    (not
    ((=)
    (Int32.to_int
    (select __anonstruct_Vertex_2_existent_vertices_33
    (shift (select __anonstruct_Graph_4_vertices_g_14 g_6)
    (Int32.to_int f_2)))) (0))))
   /\
   (#"3-2_c.jc" 404 12 857#
   ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 197 11 34#
    (not
    ((=)
    (Int32.to_int
    (select __anonstruct_Vertex_2_existent_vertices_33
    (shift (select __anonstruct_Graph_4_vertices_g_14 g_6)
    (Int32.to_int t_2)))) (0))))
   /\
   (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 198 11 19#
   (not
   (full g_6 __anonstruct_Graph_4_esize_g_14 __anonstruct_Graph_4_edges_g_14
   !__anonstruct_Edge_3_existent_0_edges_34))))))))))))))))) }
   ensures {
     ("expl:Postcondition"
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
     "expl:Ensures clause"
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
     "expl:Ensures clause"
     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
      "expl:Ensures clause"
      (graph_valid g_6 __anonstruct_Vertex_2_vertices_33_alloc_table
      __anonstruct_Edge_3_edges_34_alloc_table
      __anonstruct_Graph_4_esize_g_14 !__anonstruct_Graph_4_ecnt_g_14
      __anonstruct_Graph_4_edges_g_14 __anonstruct_Graph_4_vsize_g_14
      __anonstruct_Graph_4_vertices_g_14
      !__anonstruct_Edge_3_existent_0_edges_34
      !__anonstruct_Edge_3_to_edges_34 !__anonstruct_Edge_3_from_edges_34
      __anonstruct_Vertex_2_existent_vertices_33))
     /\
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
     "expl:Ensures clause"
     ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 200 10 59#
      "expl:Ensures clause"
      ((=)
      (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
      __anonstruct_Graph_4_esize_g_14 __anonstruct_Graph_4_edges_g_14
      !__anonstruct_Edge_3_existent_0_edges_34
      !__anonstruct_Edge_3_to_edges_34 !__anonstruct_Edge_3_from_edges_34)
      (Int.(+)
      (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
      __anonstruct_Graph_4_esize_g_14 __anonstruct_Graph_4_edges_g_14 (old
      !__anonstruct_Edge_3_existent_0_edges_34) (old
      !__anonstruct_Edge_3_to_edges_34) (old
      !__anonstruct_Edge_3_from_edges_34)) (1))))
     /\
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 201 10 108#
     "expl:Ensures clause"
     (forall f2_26 : int.
      (forall t2_26 : int.
       (((not ((=) f2_26 (Int32.to_int f_2))) \/
        (not ((=) t2_26 (Int32.to_int t_2)))) ->
        ((=)
        (all_count g_6 f2_26 t2_26 __anonstruct_Graph_4_esize_g_14
        __anonstruct_Graph_4_edges_g_14
        !__anonstruct_Edge_3_existent_0_edges_34
        !__anonstruct_Edge_3_to_edges_34 !__anonstruct_Edge_3_from_edges_34)
        (all_count g_6 f2_26 t2_26 __anonstruct_Graph_4_esize_g_14
        __anonstruct_Graph_4_edges_g_14 (old
        !__anonstruct_Edge_3_existent_0_edges_34) (old
        !__anonstruct_Edge_3_to_edges_34) (old
        !__anonstruct_Edge_3_from_edges_34))))))))))))) } diverges  ->
   'Init:
   try
    begin
    (let i_0 = ref (Unsafe_int32.any_  () ) in
    (let i_0_0 = ref (Unsafe_int32.any_  () ) in
    (let l = ref (Unsafe_int32.any_  () ) in
    try
     begin
     (if
     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 206 8 26#
     (Unsafe_int32.(<)  (acc  !__anonstruct_Graph_4_ecnt_g_14 g_6 )
      (acc  __anonstruct_Graph_4_esize_g_14 g_6 ) ))
     then
      try
       begin
       (let _jessie_50 = f_2 in
       (let _jessie_51 = (acc  __anonstruct_Graph_4_edges_g_14 g_6 ) in
       (let _jessie_52 =
       (Unsafe_int32.to_int  (acc  !__anonstruct_Graph_4_ecnt_g_14 g_6 ) ) in
       (let _jessie_53 = (shift_  _jessie_51 _jessie_52 ) in
       (upd  __anonstruct_Edge_3_from_edges_34 _jessie_53 _jessie_50 )))));
        begin
        (let _jessie_45 = t_2 in
        (let _jessie_46 = (acc  __anonstruct_Graph_4_edges_g_14 g_6 ) in
        (let _jessie_47 =
        (Unsafe_int32.to_int  (acc  !__anonstruct_Graph_4_ecnt_g_14 g_6 ) )
        in
        (let _jessie_48 = (shift_  _jessie_46 _jessie_47 ) in
        (upd  __anonstruct_Edge_3_to_edges_34 _jessie_48 _jessie_45 )))));
         begin
         (let _jessie_40 =
         (#"3-2_c.jc" 446 91 103# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) in
         (let _jessie_41 = (acc  __anonstruct_Graph_4_edges_g_14 g_6 ) in
         (let _jessie_42 =
         (Unsafe_int32.to_int  (acc  !__anonstruct_Graph_4_ecnt_g_14 g_6 ) )
         in
         (let _jessie_43 = (shift_  _jessie_41 _jessie_42 ) in
         (upd  __anonstruct_Edge_3_existent_0_edges_34 _jessie_43 _jessie_40
          )))));
          begin
          (let _jessie_35 =
          (Unsafe_int32.(+)  (acc  !__anonstruct_Graph_4_ecnt_g_14 g_6 )
           (#"3-2_c.jc" 448 59 71# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) in
          (let _jessie_36 = g_6 in
          (let _jessie_37 = (0) in
          (let _jessie_38 = _jessie_36 in
          (upd  __anonstruct_Graph_4_ecnt_g_14 _jessie_38 _jessie_35 )))));
           begin
           (assert {
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 213 17 169#
           "expl:Assertion in line 213"
           (forall f2 : int.
            (forall t2 : int.
             (((not ((=) f2 (Int32.to_int f_2))) \/
              (not ((=) t2 (Int32.to_int t_2)))) ->
              ((=)
              (count g_6 f2 t2
              (Int.(-)
              (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
              (1))
              (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
              __anonstruct_Graph_4_edges_g_14
              !__anonstruct_Edge_3_existent_0_edges_34
              !__anonstruct_Edge_3_to_edges_34
              !__anonstruct_Edge_3_from_edges_34)
              (count g_6 f2 t2
              (Int.(-)
              (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
              (1))
              (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6))
              __anonstruct_Graph_4_edges_g_14 (at
              !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
              !__anonstruct_Edge_3_to_edges_34 'Init) (at
              !__anonstruct_Edge_3_from_edges_34 'Init))))))) }); () end;
           begin
           (assert {
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 219 12 199#
           "expl:Assertion in line 219"
           (forall k_11 : int.
            ((((<=) (0) k_11) /\
             ((<) k_11
             (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6)))) ->
             (forall f2_0 : int.
              (forall t2_0 : int.
               (((not ((=) f2_0 (Int32.to_int f_2))) \/
                (not ((=) t2_0 (Int32.to_int t_2)))) ->
                ((=)
                (count g_6 f2_0 t2_0 k_11 (Int.(+) k_11 (1))
                __anonstruct_Graph_4_edges_g_14
                !__anonstruct_Edge_3_existent_0_edges_34
                !__anonstruct_Edge_3_to_edges_34
                !__anonstruct_Edge_3_from_edges_34)
                (count g_6 f2_0 t2_0 k_11 (Int.(+) k_11 (1))
                __anonstruct_Graph_4_edges_g_14 (at
                !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                !__anonstruct_Edge_3_to_edges_34 'Init) (at
                !__anonstruct_Edge_3_from_edges_34 'Init))))))))) }); () end;
           begin
           (assert {
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 226 12 220#
           "expl:Assertion in line 226"
           (forall k_12 : int.
            ((((<=) (0) k_12) /\
             (((<) k_12
              (Int32.to_int (select __anonstruct_Graph_4_esize_g_14 g_6)))
             /\
             (not
             ((=) k_12
             (Int.(-)
             (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1))))))
             ->
             (forall f2_1 : int.
              (forall t2_1 : int.
               (((not ((=) f2_1 (Int32.to_int f_2))) \/
                (not ((=) t2_1 (Int32.to_int t_2)))) ->
                ((=)
                (count g_6 f2_1 t2_1 k_12 (Int.(+) k_12 (1))
                __anonstruct_Graph_4_edges_g_14
                !__anonstruct_Edge_3_existent_0_edges_34
                !__anonstruct_Edge_3_to_edges_34
                !__anonstruct_Edge_3_from_edges_34)
                (count g_6 f2_1 t2_1 k_12 (Int.(+) k_12 (1))
                __anonstruct_Graph_4_edges_g_14 (at
                !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                !__anonstruct_Edge_3_to_edges_34 'Init) (at
                !__anonstruct_Edge_3_from_edges_34 'Init))))))))) }); () end;
           begin
           (i_0 :=
            (#"3-2_c.jc" 516 25 37# "expl:Integer cast"
            (Unsafe_int32.of_int (0))));
            'LoopEntry:
            begin
            'LoopEntry:
            'Loop_3:
            loop
            invariant
              { (((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 234 29 35#
                  (Int32.(>=) !i_0 (#"3-2_c.jc" 523 39 51#
                  "expl:Integer cast" (Int32.of_int (0)))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 235 29 42#
                  (Int32.(<=) !i_0
                  (select __anonstruct_Graph_4_esize_g_14 g_6)))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                  (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                  ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                   ((<=)
                   (offset_min __anonstruct_Graph_4_g_14_alloc_table g_6)
                   (0)))
                  /\
                  (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                  ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                   ((>=)
                   (offset_max __anonstruct_Graph_4_g_14_alloc_table g_6)
                   (0)))
                  /\
                  (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 236 29 38#
                  ((=) true true)))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 237 29 67#
                  (if
                   ((<=) (0)
                   (Int.(-)
                   (Int32.to_int
                   (select __anonstruct_Graph_4_esize_g_14 g_6)) (1))) then
                   (((<=)
                    (offset_min __anonstruct_Edge_3_edges_34_alloc_table
                    (select __anonstruct_Graph_4_edges_g_14 g_6)) (0))
                   /\
                   (((>=)
                    (offset_max __anonstruct_Edge_3_edges_34_alloc_table
                    (select __anonstruct_Graph_4_edges_g_14 g_6))
                    (Int.(-)
                    (Int32.to_int
                    (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))
                   /\
                   (forall __framac_tmp6 : int.
                    ((((<=) (0) __framac_tmp6) /\
                     ((<=) __framac_tmp6
                     (Int.(-)
                     (Int32.to_int
                     (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))) ->
                     ((=) true true))))) else ((=) true true)))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 238 29 43#
                  (graph_valid g_6
                  __anonstruct_Vertex_2_vertices_33_alloc_table
                  __anonstruct_Edge_3_edges_34_alloc_table
                  __anonstruct_Graph_4_esize_g_14
                  !__anonstruct_Graph_4_ecnt_g_14
                  __anonstruct_Graph_4_edges_g_14
                  __anonstruct_Graph_4_vsize_g_14
                  __anonstruct_Graph_4_vertices_g_14
                  !__anonstruct_Edge_3_existent_0_edges_34
                  !__anonstruct_Edge_3_to_edges_34
                  !__anonstruct_Edge_3_from_edges_34
                  __anonstruct_Vertex_2_existent_vertices_33))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 240 29 168#
                  (forall j : int.
                   ((((<=) (0) j) /\
                    (((<) j (Int32.to_int !i_0)) /\
                    (not
                    ((=) j
                    (Int.(-)
                    (Int32.to_int
                    (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1)))))) ->
                    ((Int32.(=)
                     (select (at !__anonstruct_Edge_3_from_edges_34 'Init)
                     (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))
                     (select !__anonstruct_Edge_3_from_edges_34
                     (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j)))
                    /\
                    ((Int32.(=)
                     (select (at !__anonstruct_Edge_3_to_edges_34 'Init)
                     (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))
                     (select !__anonstruct_Edge_3_to_edges_34
                     (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j)))
                    /\
                    (Int32.(=)
                    (select (at !__anonstruct_Edge_3_existent_0_edges_34
                    'Init)
                    (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))
                    (select !__anonstruct_Edge_3_existent_0_edges_34
                    (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j))))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 244 29 188#
                  (forall j_0 : int.
                   ((((<=) (0) j_0) /\
                    (((<) j_0 (Int32.to_int !i_0)) /\
                    (not
                    ((=) j_0
                    (Int.(-)
                    (Int32.to_int
                    (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1)))))) ->
                    ((=)
                    (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) j_0
                    (Int.(+) j_0 (1)) __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init))
                    (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) j_0
                    (Int.(+) j_0 (1)) __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34)))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 248 29 153#
                  (((<) (Int32.to_int !i_0)
                   (Int.(-)
                   (Int32.to_int
                   (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1))) ->
                   ((=)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init))
                   (Int.(+)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init))
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                   (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 251 29 156#
                  (((<) (Int32.to_int !i_0)
                   (Int.(-)
                   (Int32.to_int
                   (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1))) ->
                   ((=)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)
                   (Int.(+)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                   (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 254 29 118#
                  ((Int32.(<) !i_0
                   (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) ->
                   ((=)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init)))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 257 29 154#
                  (((>=) (Int32.to_int !i_0)
                   (Int.(-)
                   (Int32.to_int
                   (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1))) ->
                   ((=)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init))
                   (Int.(+)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init))
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                   (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 260 29 157#
                  (((>=) (Int32.to_int !i_0)
                   (Int.(-)
                   (Int32.to_int
                   (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) (1))) ->
                   ((=)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)
                   (Int.(+)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                   (Int32.to_int !i_0) (Int.(+) (Int32.to_int !i_0) (1))
                   __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 263 29 125#
                  ((Int32.(>=) !i_0
                   (select !__anonstruct_Graph_4_ecnt_g_14 g_6)) ->
                   ((=)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                   !__anonstruct_Edge_3_existent_0_edges_34
                   !__anonstruct_Edge_3_to_edges_34
                   !__anonstruct_Edge_3_from_edges_34)
                   (Int.(+)
                   (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                   (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                   !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                   !__anonstruct_Edge_3_to_edges_34 'Init) (at
                   !__anonstruct_Edge_3_from_edges_34 'Init)) (1)))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 266 29 315#
                  (forall j_1 : int.
                   ((((<=) (0) j_1) /\
                    ((<=) j_1 (Int.(-) (Int32.to_int !i_0) (1)))) ->
                    (forall f2_7 : int.
                     (forall t2_7 : int.
                      (((not ((=) f2_7 (Int32.to_int f_2))) \/
                       (not ((=) t2_7 (Int32.to_int t_2)))) ->
                       ((=)
                       (count g_6 f2_7 t2_7 (0) (Int.(+) j_1 (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init))
                       (Int.(+)
                       (count g_6 f2_7 t2_7 (0) j_1
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init))
                       (count g_6 f2_7 t2_7 j_1 (Int.(+) j_1 (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init))))))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 273 29 336#
                  (forall j_2 : int.
                   ((((<=) (0) j_2) /\
                    (((>=) j_2 (Int.(-) (Int32.to_int !i_0) (1))) /\
                    ((<) j_2
                    (Int32.to_int
                    (select __anonstruct_Graph_4_esize_g_14 g_6))))) ->
                    (forall f2_8 : int.
                     (forall t2_8 : int.
                      (((not ((=) f2_8 (Int32.to_int f_2))) \/
                       (not ((=) t2_8 (Int32.to_int t_2)))) ->
                       ((=)
                       (count g_6 f2_8 t2_8 (0) (Int.(+) j_2 (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init))
                       (Int.(+)
                       (count g_6 f2_8 t2_8 (0) j_2
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init))
                       (count g_6 f2_8 t2_8 j_2 (Int.(+) j_2 (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init))))))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 280 29 318#
                  (forall j_3 : int.
                   ((((<=) (0) j_3) /\
                    ((<=) j_3 (Int.(-) (Int32.to_int !i_0) (1)))) ->
                    (forall f2_9 : int.
                     (forall t2_9 : int.
                      (((not ((=) f2_9 (Int32.to_int f_2))) \/
                       (not ((=) t2_9 (Int32.to_int t_2)))) ->
                       ((=)
                       (count g_6 f2_9 t2_9 (0) (Int.(+) j_3 (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (Int.(+)
                       (count g_6 f2_9 t2_9 (0) j_3
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (count g_6 f2_9 t2_9 j_3 (Int.(+) j_3 (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)))))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 287 29 339#
                  (forall j_4 : int.
                   ((((<=) (0) j_4) /\
                    (((>=) j_4 (Int.(-) (Int32.to_int !i_0) (1))) /\
                    ((<) j_4
                    (Int32.to_int
                    (select __anonstruct_Graph_4_esize_g_14 g_6))))) ->
                    (forall f2_10 : int.
                     (forall t2_10 : int.
                      (((not ((=) f2_10 (Int32.to_int f_2))) \/
                       (not ((=) t2_10 (Int32.to_int t_2)))) ->
                       ((=)
                       (count g_6 f2_10 t2_10 (0) (Int.(+) j_4 (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (Int.(+)
                       (count g_6 f2_10 t2_10 (0) j_4
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (count g_6 f2_10 t2_10 j_4 (Int.(+) j_4 (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)))))))))
                 &&
                 ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 294 29 286#
                  (forall j_5 : int.
                   ((((<=) (0) j_5) /\
                    ((<=) j_5 (Int.(-) (Int32.to_int !i_0) (1)))) ->
                    (forall f2_11 : int.
                     (forall t2_11 : int.
                      (((not ((=) f2_11 (Int32.to_int f_2))) \/
                       (not ((=) t2_11 (Int32.to_int t_2)))) ->
                       ((=)
                       (count g_6 f2_11 t2_11 j_5 (Int.(+) j_5 (1))
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (count g_6 f2_11 t2_11 j_5 (Int.(+) j_5 (1))
                       __anonstruct_Graph_4_edges_g_14 (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                       !__anonstruct_Edge_3_to_edges_34 'Init) (at
                       !__anonstruct_Edge_3_from_edges_34 'Init)))))))))
                 &&
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 301 29 274#
                 (forall j_6 : int.
                  ((((<=) (0) j_6) /\ ((<=) j_6 (Int32.to_int !i_0))) ->
                   (forall f2_12 : int.
                    (forall t2_12 : int.
                     (((not ((=) f2_12 (Int32.to_int f_2))) \/
                      (not ((=) t2_12 (Int32.to_int t_2)))) ->
                      ((=)
                      (count g_6 f2_12 t2_12 (0) j_6
                      __anonstruct_Graph_4_edges_g_14
                      !__anonstruct_Edge_3_existent_0_edges_34
                      !__anonstruct_Edge_3_to_edges_34
                      !__anonstruct_Edge_3_from_edges_34)
                      (count g_6 f2_12 t2_12 (0) j_6
                      __anonstruct_Graph_4_edges_g_14 (at
                      !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                      !__anonstruct_Edge_3_to_edges_34 'Init) (at
                      !__anonstruct_Edge_3_from_edges_34 'Init)))))))))))))))))))))))))))
                /\
                (#"3-2_c.jc" 518 9 21314#
                ((#"3-2_c.jc" 518 9 21314#
                 ((#"3-2_c.jc" 518 9 21314#
                  ((#"3-2_c.jc" 518 9 21314# "expl:Assigns clause"
                   (not_assigns __anonstruct_Edge_3_edges_34_alloc_table
                   __anonstruct_Edge_3_edges_34_alloc_table (at
                   !__anonstruct_Edge_3_from_edges_34 'Loop_3)
                   !__anonstruct_Edge_3_from_edges_34 pset_empty))
                  /\
                  (#"3-2_c.jc" 518 9 21314# "expl:Assigns clause"
                  (not_assigns __anonstruct_Edge_3_edges_34_alloc_table
                  __anonstruct_Edge_3_edges_34_alloc_table (at
                  !__anonstruct_Edge_3_to_edges_34 'Loop_3)
                  !__anonstruct_Edge_3_to_edges_34 pset_empty))))
                 /\
                 (#"3-2_c.jc" 518 9 21314# "expl:Assigns clause"
                 (not_assigns __anonstruct_Edge_3_edges_34_alloc_table
                 __anonstruct_Edge_3_edges_34_alloc_table (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Loop_3)
                 !__anonstruct_Edge_3_existent_0_edges_34 pset_empty))))
                /\
                (#"3-2_c.jc" 518 9 21314# "expl:Assigns clause"
                (not_assigns __anonstruct_Graph_4_g_14_alloc_table
                __anonstruct_Graph_4_g_14_alloc_table (at
                !__anonstruct_Graph_4_ecnt_g_14 'Loop_3)
                !__anonstruct_Graph_4_ecnt_g_14 pset_empty))))) } 
             begin
             any unit requires { true } ensures { true } ;
              try
               begin
               'LoopCurrent:
               begin
               'LoopCurrent:
               (if
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 311 19 31#
               (Unsafe_int32.(<)  !i_0
                (acc  __anonstruct_Graph_4_esize_g_14 g_6 ) )) then ()
               else (raise (Goto_while_0_break_0_exc ())));
                begin
                (i_0 :=
                 (Unsafe_int32.(+)  !i_0
                  (#"3-2_c.jc" 716 63 75# "expl:Integer cast"
                  (Unsafe_int32.of_int (1))) ));
                 begin
                 (assert {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 313 27 144#
                 "expl:Assertion in line 313"
                 (forall f2_2 : int.
                  (forall t2_2 : int.
                   (((not ((=) f2_2 (Int32.to_int f_2))) \/
                    (not ((=) t2_2 (Int32.to_int t_2)))) ->
                    ((=)
                    (count g_6 f2_2 t2_2 (Int.(-) (Int32.to_int !i_0) (1))
                    (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34)
                    (count g_6 f2_2 t2_2 (Int.(-) (Int32.to_int !i_0) (1))
                    (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init))))))) }); ()
                 end;
                 begin
                 (assert {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 314 27 176#
                 "expl:Assertion in line 314"
                 (forall f2_3 : int.
                  (forall t2_3 : int.
                   (((not ((=) f2_3 (Int32.to_int f_2))) \/
                    (not ((=) t2_3 (Int32.to_int t_2)))) ->
                    ((=)
                    (count g_6 f2_3 t2_3 (0) (Int32.to_int !i_0)
                    __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34)
                    (Int.(+)
                    (count g_6 f2_3 t2_3 (0)
                    (Int.(-) (Int32.to_int !i_0) (1))
                    __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34)
                    (count g_6 f2_3 t2_3 (Int.(-) (Int32.to_int !i_0) (1))
                    (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34))))))) }); () end;
                 begin
                 (assert {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 315 27 173#
                 "expl:Assertion in line 315"
                 (forall f2_4 : int.
                  (forall t2_4 : int.
                   (((not ((=) f2_4 (Int32.to_int f_2))) \/
                    (not ((=) t2_4 (Int32.to_int t_2)))) ->
                    ((=)
                    (count g_6 f2_4 t2_4 (0) (Int32.to_int !i_0)
                    __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init))
                    (Int.(+)
                    (count g_6 f2_4 t2_4 (0)
                    (Int.(-) (Int32.to_int !i_0) (1))
                    __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init))
                    (count g_6 f2_4 t2_4 (Int.(-) (Int32.to_int !i_0) (1))
                    (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init)))))))) }); ()
                 end;
                 begin
                 (assert {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 316 27 144#
                 "expl:Assertion in line 316"
                 (forall f2_5 : int.
                  (forall t2_5 : int.
                   (((not ((=) f2_5 (Int32.to_int f_2))) \/
                    (not ((=) t2_5 (Int32.to_int t_2)))) ->
                    ((=)
                    (count g_6 f2_5 t2_5 (0)
                    (Int.(-) (Int32.to_int !i_0) (1))
                    __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34)
                    (count g_6 f2_5 t2_5 (0)
                    (Int.(-) (Int32.to_int !i_0) (1))
                    __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init))))))) }); ()
                 end;
                 begin
                 (assert {
                 (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 317 27 174#
                 "expl:Assertion in line 317"
                 (forall f2_6 : int.
                  (forall t2_6 : int.
                   (((not ((=) f2_6 (Int32.to_int f_2))) \/
                    (not ((=) t2_6 (Int32.to_int t_2)))) ->
                    ((=)
                    (count g_6 f2_6 t2_6 (0) (Int32.to_int !i_0)
                    __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34
                    !__anonstruct_Edge_3_to_edges_34
                    !__anonstruct_Edge_3_from_edges_34)
                    (Int.(+)
                    (count g_6 f2_6 t2_6 (0)
                    (Int.(-) (Int32.to_int !i_0) (1))
                    __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init))
                    (count g_6 f2_6 t2_6 (Int.(-) (Int32.to_int !i_0) (1))
                    (Int32.to_int !i_0) __anonstruct_Graph_4_edges_g_14 (at
                    !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                    !__anonstruct_Edge_3_to_edges_34 'Init) (at
                    !__anonstruct_Edge_3_from_edges_34 'Init)))))))) }); ()
                 end end end; (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end;
             (raise (Goto_while_0_break_0_exc ())) end end end end end end
       with Goto_while_0_break_0_exc _jessie_4 ->
       'While_0_break_0:
       'While_0_break_0: begin (); (raise (Return_label_exc ())) end end
     else ());
      try
       begin
       (i_0_0 :=
        (#"3-2_c.jc" 852 28 40# "expl:Integer cast"
        (Unsafe_int32.of_int (0))));
        'LoopEntry:
        begin
        'LoopEntry:
        'Loop_4:
        loop
        invariant
          { ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 324 23 29#
             (Int32.(>=) !i_0_0 (#"3-2_c.jc" 856 41 53# "expl:Integer cast"
             (Int32.of_int (0)))))
            &&
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 325 23 35#
             (Int32.(<=) !i_0_0 (select !__anonstruct_Graph_4_ecnt_g_14 g_6)))
            &&
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 326 23 37#
             (graph_valid g_6 __anonstruct_Vertex_2_vertices_33_alloc_table
             __anonstruct_Edge_3_edges_34_alloc_table
             __anonstruct_Graph_4_esize_g_14 !__anonstruct_Graph_4_ecnt_g_14
             __anonstruct_Graph_4_edges_g_14 __anonstruct_Graph_4_vsize_g_14
             __anonstruct_Graph_4_vertices_g_14
             !__anonstruct_Edge_3_existent_0_edges_34
             !__anonstruct_Edge_3_to_edges_34
             !__anonstruct_Edge_3_from_edges_34
             __anonstruct_Vertex_2_existent_vertices_33))
            &&
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 328 23 96#
             (forall j_15 : int.
              ((((<=) (0) j_15) /\ ((<) j_15 (Int32.to_int !i_0_0))) ->
               (not
               (Int32.(=)
               (select !__anonstruct_Edge_3_existent_0_edges_34
               (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j_15))
               (#"3-2_c.jc" 866 40 52# "expl:Integer cast" (Int32.of_int
               (0))))))))
            &&
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 331 23 101#
             (exists j_16 : int.
              (((<=) (0) j_16) /\
              (((<) j_16
               (Int32.to_int (select !__anonstruct_Graph_4_ecnt_g_14 g_6)))
              /\
              (Int32.(=)
              (select !__anonstruct_Edge_3_existent_0_edges_34
              (shift (select __anonstruct_Graph_4_edges_g_14 g_6) j_16))
              (#"3-2_c.jc" 872 37 49# "expl:Integer cast" (Int32.of_int
              (0))))))))
            &&
            ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 334 23 116#
             (forall f2_24 : int.
              (forall t2_24 : int.
               (forall m_10 : int.
                (forall n_9 : int.
                 ((=)
                 (count g_6 f2_24 t2_24 m_10 n_9
                 __anonstruct_Graph_4_edges_g_14
                 !__anonstruct_Edge_3_existent_0_edges_34
                 !__anonstruct_Edge_3_to_edges_34
                 !__anonstruct_Edge_3_from_edges_34)
                 (count g_6 f2_24 t2_24 m_10 n_9
                 __anonstruct_Graph_4_edges_g_14 (at
                 !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
                 !__anonstruct_Edge_3_to_edges_34 'Init) (at
                 !__anonstruct_Edge_3_from_edges_34 'Init))))))))
            &&
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 337 23 143#
            (forall f2_25 : int.
             (forall t2_25 : int.
              (((not ((=) f2_25 (Int32.to_int f_2))) \/
               (not ((=) t2_25 (Int32.to_int t_2)))) ->
               ((=)
               (all_count g_6 f2_25 t2_25 __anonstruct_Graph_4_esize_g_14
               __anonstruct_Graph_4_edges_g_14
               !__anonstruct_Edge_3_existent_0_edges_34
               !__anonstruct_Edge_3_to_edges_34
               !__anonstruct_Edge_3_from_edges_34)
               (all_count g_6 f2_25 t2_25 __anonstruct_Graph_4_esize_g_14
               __anonstruct_Graph_4_edges_g_14 (at
               !__anonstruct_Edge_3_existent_0_edges_34 'Init) (at
               !__anonstruct_Edge_3_to_edges_34 'Init) (at
               !__anonstruct_Edge_3_from_edges_34 'Init))))))))))))) } 
          
         begin
         any unit requires { true } ensures { true } ;
          try
           begin
           'LoopCurrent:
           begin
           'LoopCurrent:
           (if
           (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 343 20 31#
           (Unsafe_int32.(<)  !i_0_0
            (acc  !__anonstruct_Graph_4_ecnt_g_14 g_6 ) )) then ()
           else (raise (Goto_while_0_break_0_0_exc ())));
            'U__Pre:
            'U__Pre:
            (if
            (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 345 12 33#
            (Bool.notb 
             (Unsafe_int32.(<>) 
              (acc  !__anonstruct_Edge_3_existent_0_edges_34
               (shift_  (acc  __anonstruct_Graph_4_edges_g_14 g_6 )
                (Unsafe_int32.to_int  !i_0_0 ) ) )
              (#"3-2_c.jc" 897 45 57# "expl:Integer cast"
              (Unsafe_int32.of_int (0))) ) ))
            then
             try
              begin
              (let _jessie_67 = f_2 in
              (let _jessie_68 = (acc  __anonstruct_Graph_4_edges_g_14 g_6 )
              in
              (let _jessie_69 = (Unsafe_int32.to_int  !i_0_0 ) in
              (let _jessie_70 = (shift_  _jessie_68 _jessie_69 ) in
              (upd  __anonstruct_Edge_3_from_edges_34 _jessie_70 _jessie_67 )))));
               begin
               (let _jessie_62 = t_2 in
               (let _jessie_63 = (acc  __anonstruct_Graph_4_edges_g_14 g_6 )
               in
               (let _jessie_64 = (Unsafe_int32.to_int  !i_0_0 ) in
               (let _jessie_65 = (shift_  _jessie_63 _jessie_64 ) in
               (upd  __anonstruct_Edge_3_to_edges_34 _jessie_65 _jessie_62 )))));
                begin
                (let _jessie_57 =
                (#"3-2_c.jc" 903 84 96# "expl:Integer cast"
                (Unsafe_int32.of_int (1))) in
                (let _jessie_58 = (acc  __anonstruct_Graph_4_edges_g_14 g_6 )
                in
                (let _jessie_59 = (Unsafe_int32.to_int  !i_0_0 ) in
                (let _jessie_60 = (shift_  _jessie_58 _jessie_59 ) in
                (upd  __anonstruct_Edge_3_existent_0_edges_34 _jessie_60
                 _jessie_57 )))));
                 begin
                 (l :=
                  (#"3-2_c.jc" 904 44 56# "expl:Integer cast"
                  (Unsafe_int32.of_int (0))));
                  'LoopEntry:
                  begin
                  'LoopEntry:
                  'Loop_5:
                  loop
                  invariant
                    { (((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 353 31 37#
                        (Int32.(>=) !l (#"3-2_c.jc" 911 57 69#
                        "expl:Integer cast" (Int32.of_int (0)))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 354 31 44#
                        (Int32.(<=) !l
                        (select __anonstruct_Graph_4_esize_g_14 g_6)))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                        ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                         ((<=)
                         (offset_min __anonstruct_Graph_4_g_14_alloc_table
                         g_6) (0)))
                        /\
                        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                        ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                         ((>=)
                         (offset_max __anonstruct_Graph_4_g_14_alloc_table
                         g_6) (0)))
                        /\
                        (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 355 31 40#
                        ((=) true true)))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 356 31 69#
                        (if
                         ((<=) (0)
                         (Int.(-)
                         (Int32.to_int
                         (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))
                         then
                         (((<=)
                          (offset_min
                          __anonstruct_Edge_3_edges_34_alloc_table
                          (select __anonstruct_Graph_4_edges_g_14 g_6)) (0))
                         /\
                         (((>=)
                          (offset_max
                          __anonstruct_Edge_3_edges_34_alloc_table
                          (select __anonstruct_Graph_4_edges_g_14 g_6))
                          (Int.(-)
                          (Int32.to_int
                          (select __anonstruct_Graph_4_esize_g_14 g_6)) (1)))
                         /\
                         (forall __framac_tmp8 : int.
                          ((((<=) (0) __framac_tmp8) /\
                           ((<=) __framac_tmp8
                           (Int.(-)
                           (Int32.to_int
                           (select __anonstruct_Graph_4_esize_g_14 g_6)) (1))))
                           -> ((=) true true))))) else ((=) true true)))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 357 31 45#
                        (graph_valid g_6
                        __anonstruct_Vertex_2_vertices_33_alloc_table
                        __anonstruct_Edge_3_edges_34_alloc_table
                        __anonstruct_Graph_4_esize_g_14
                        !__anonstruct_Graph_4_ecnt_g_14
                        __anonstruct_Graph_4_edges_g_14
                        __anonstruct_Graph_4_vsize_g_14
                        __anonstruct_Graph_4_vertices_g_14
                        !__anonstruct_Edge_3_existent_0_edges_34
                        !__anonstruct_Edge_3_to_edges_34
                        !__anonstruct_Edge_3_from_edges_34
                        __anonstruct_Vertex_2_existent_vertices_33))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 359 31 171#
                        (forall j_7 : int.
                         ((((<=) (0) j_7) /\
                          (((<) j_7 (Int32.to_int !l)) /\
                          (not ((=) j_7 (Int32.to_int !i_0_0))))) ->
                          ((Int32.(=)
                           (select (at !__anonstruct_Edge_3_from_edges_34
                           'U__Pre)
                           (shift
                           (select __anonstruct_Graph_4_edges_g_14 g_6) j_7))
                           (select !__anonstruct_Edge_3_from_edges_34
                           (shift
                           (select __anonstruct_Graph_4_edges_g_14 g_6) j_7)))
                          /\
                          ((Int32.(=)
                           (select (at !__anonstruct_Edge_3_to_edges_34
                           'U__Pre)
                           (shift
                           (select __anonstruct_Graph_4_edges_g_14 g_6) j_7))
                           (select !__anonstruct_Edge_3_to_edges_34
                           (shift
                           (select __anonstruct_Graph_4_edges_g_14 g_6) j_7)))
                          /\
                          (Int32.(=)
                          (select (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                          j_7))
                          (select !__anonstruct_Edge_3_existent_0_edges_34
                          (shift (select __anonstruct_Graph_4_edges_g_14 g_6)
                          j_7))))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 363 31 191#
                        (forall j_8 : int.
                         ((((<=) (0) j_8) /\
                          (((<) j_8 (Int32.to_int !l)) /\
                          (not ((=) j_8 (Int32.to_int !i_0_0))))) ->
                          ((=)
                          (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                          j_8 (Int.(+) j_8 (1))
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                          (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                          j_8 (Int.(+) j_8 (1))
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34)))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 367 31 159#
                        (((<=) (Int32.to_int !l)
                         (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                         ((=)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14 (at
                         !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                         (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                         !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                         (Int.(+)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         (at !__anonstruct_Edge_3_existent_0_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                         'U__Pre))
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                         (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14 (at
                         !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                         (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                         !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 370 31 159#
                        (((<=) (Int32.to_int !l)
                         (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                         ((=)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)
                         (Int.(+)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                         (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 373 31 124#
                        ((Int32.(<=) !l !i_0_0) ->
                         ((=)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         (at !__anonstruct_Edge_3_existent_0_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                         'U__Pre))
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 376 31 160#
                        (((>) (Int32.to_int !l)
                         (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                         ((=)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14 (at
                         !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                         (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                         !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                         (Int.(+)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         (at !__anonstruct_Edge_3_existent_0_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                         'U__Pre))
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                         (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14 (at
                         !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                         (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                         !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 379 31 164#
                        (((>) (Int32.to_int !l)
                         (Int.(-) (Int32.to_int !i_0_0) (1))) ->
                         ((=)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)
                         (Int.(+)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                         (Int32.to_int !l) (Int.(+) (Int32.to_int !l) (1))
                         __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 382 31 129#
                        ((Int32.(>) !l !i_0_0) ->
                         ((=)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         !__anonstruct_Edge_3_existent_0_edges_34
                         !__anonstruct_Edge_3_to_edges_34
                         !__anonstruct_Edge_3_from_edges_34)
                         (Int.(+)
                         (count g_6 (Int32.to_int f_2) (Int32.to_int t_2) (0)
                         (Int32.to_int !l) __anonstruct_Graph_4_edges_g_14
                         (at !__anonstruct_Edge_3_existent_0_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                         'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                         'U__Pre)) (1)))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 385 31 340#
                        (forall j_9 : int.
                         ((((<=) (0) j_9) /\
                          ((<=) j_9 (Int.(-) (Int32.to_int !l) (1)))) ->
                          (forall f2_18 : int.
                           (forall t2_18 : int.
                            (((not ((=) f2_18 (Int32.to_int f_2))) \/
                             (not ((=) t2_18 (Int32.to_int t_2)))) ->
                             ((=)
                             (count g_6 f2_18 t2_18 (0) (Int.(+) j_9 (1))
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre))
                             (Int.(+)
                             (count g_6 f2_18 t2_18 (0) j_9
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre))
                             (count g_6 f2_18 t2_18 j_9 (Int.(+) j_9 (1))
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre))))))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 392 31 381#
                        (forall j_10 : int.
                         ((((<=) (0) j_10) /\
                          (((>=) j_10 (Int.(-) (Int32.to_int !l) (1))) /\
                          ((<) j_10
                          (Int32.to_int
                          (select __anonstruct_Graph_4_esize_g_14 g_6))))) ->
                          (forall f2_19 : int.
                           (forall t2_19 : int.
                            (((not ((=) f2_19 (Int32.to_int f_2))) \/
                             (not ((=) t2_19 (Int32.to_int t_2)))) ->
                             ((=)
                             (count g_6 f2_19 t2_19 (0) (Int.(+) j_10 (1))
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre))
                             (Int.(+)
                             (count g_6 f2_19 t2_19 (0) j_10
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre))
                             (count g_6 f2_19 t2_19 j_10 (Int.(+) j_10 (1))
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre))))))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 399 31 360#
                        (forall j_11 : int.
                         ((((<=) (0) j_11) /\
                          ((<=) j_11 (Int.(-) (Int32.to_int !l) (1)))) ->
                          (forall f2_20 : int.
                           (forall t2_20 : int.
                            (((not ((=) f2_20 (Int32.to_int f_2))) \/
                             (not ((=) t2_20 (Int32.to_int t_2)))) ->
                             ((=)
                             (count g_6 f2_20 t2_20 (0) (Int.(+) j_11 (1))
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)
                             (Int.(+)
                             (count g_6 f2_20 t2_20 (0) j_11
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)
                             (count g_6 f2_20 t2_20 j_11 (Int.(+) j_11 (1))
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)))))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 406 31 381#
                        (forall j_12 : int.
                         ((((<=) (0) j_12) /\
                          (((>=) j_12 (Int.(-) (Int32.to_int !l) (1))) /\
                          ((<) j_12
                          (Int32.to_int
                          (select __anonstruct_Graph_4_esize_g_14 g_6))))) ->
                          (forall f2_21 : int.
                           (forall t2_21 : int.
                            (((not ((=) f2_21 (Int32.to_int f_2))) \/
                             (not ((=) t2_21 (Int32.to_int t_2)))) ->
                             ((=)
                             (count g_6 f2_21 t2_21 (0) (Int.(+) j_12 (1))
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)
                             (Int.(+)
                             (count g_6 f2_21 t2_21 (0) j_12
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)
                             (count g_6 f2_21 t2_21 j_12 (Int.(+) j_12 (1))
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)))))))))
                       &&
                       ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 413 31 329#
                        (forall j_13 : int.
                         ((((<=) (0) j_13) /\
                          ((<=) j_13 (Int.(-) (Int32.to_int !l) (1)))) ->
                          (forall f2_22 : int.
                           (forall t2_22 : int.
                            (((not ((=) f2_22 (Int32.to_int f_2))) \/
                             (not ((=) t2_22 (Int32.to_int t_2)))) ->
                             ((=)
                             (count g_6 f2_22 t2_22 j_13 (Int.(+) j_13 (1))
                             __anonstruct_Graph_4_edges_g_14
                             !__anonstruct_Edge_3_existent_0_edges_34
                             !__anonstruct_Edge_3_to_edges_34
                             !__anonstruct_Edge_3_from_edges_34)
                             (count g_6 f2_22 t2_22 j_13 (Int.(+) j_13 (1))
                             __anonstruct_Graph_4_edges_g_14 (at
                             !__anonstruct_Edge_3_existent_0_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_to_edges_34
                             'U__Pre) (at !__anonstruct_Edge_3_from_edges_34
                             'U__Pre)))))))))
                       &&
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 420 31 317#
                       (forall j_14 : int.
                        ((((<=) (0) j_14) /\ ((<=) j_14 (Int32.to_int !l)))
                         ->
                         (forall f2_23 : int.
                          (forall t2_23 : int.
                           (((not ((=) f2_23 (Int32.to_int f_2))) \/
                            (not ((=) t2_23 (Int32.to_int t_2)))) ->
                            ((=)
                            (count g_6 f2_23 t2_23 (0) j_14
                            __anonstruct_Graph_4_edges_g_14
                            !__anonstruct_Edge_3_existent_0_edges_34
                            !__anonstruct_Edge_3_to_edges_34
                            !__anonstruct_Edge_3_from_edges_34)
                            (count g_6 f2_23 t2_23 (0) j_14
                            __anonstruct_Graph_4_edges_g_14 (at
                            !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                            (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                            !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))))))))))))))))))))))
                      /\
                      (#"3-2_c.jc" 906 29 34171#
                      ((#"3-2_c.jc" 906 29 34171#
                       ((#"3-2_c.jc" 906 29 34171#
                        ((#"3-2_c.jc" 906 29 34171# "expl:Assigns clause"
                         (not_assigns
                         __anonstruct_Edge_3_edges_34_alloc_table
                         __anonstruct_Edge_3_edges_34_alloc_table (at
                         !__anonstruct_Edge_3_from_edges_34 'Loop_5)
                         !__anonstruct_Edge_3_from_edges_34 pset_empty))
                        /\
                        (#"3-2_c.jc" 906 29 34171# "expl:Assigns clause"
                        (not_assigns __anonstruct_Edge_3_edges_34_alloc_table
                        __anonstruct_Edge_3_edges_34_alloc_table (at
                        !__anonstruct_Edge_3_to_edges_34 'Loop_5)
                        !__anonstruct_Edge_3_to_edges_34 pset_empty))))
                       /\
                       (#"3-2_c.jc" 906 29 34171# "expl:Assigns clause"
                       (not_assigns __anonstruct_Edge_3_edges_34_alloc_table
                       __anonstruct_Edge_3_edges_34_alloc_table (at
                       !__anonstruct_Edge_3_existent_0_edges_34 'Loop_5)
                       !__anonstruct_Edge_3_existent_0_edges_34 pset_empty))))
                      /\
                      (#"3-2_c.jc" 906 29 34171# "expl:Assigns clause"
                      (not_assigns __anonstruct_Graph_4_g_14_alloc_table
                      __anonstruct_Graph_4_g_14_alloc_table (at
                      !__anonstruct_Graph_4_ecnt_g_14 'Loop_5)
                      !__anonstruct_Graph_4_ecnt_g_14 pset_empty))))) } 
                    
                   begin
                   any unit requires { true } ensures { true } ;
                    try
                     begin
                     'LoopCurrent:
                     begin
                     'LoopCurrent:
                     (if
                     (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 429 23 35#
                     (Unsafe_int32.(<)  !l
                      (acc  __anonstruct_Graph_4_esize_g_14 g_6 ) )) 
                     then () else (raise (Goto_while_1_break_exc ())));
                      begin
                      (l :=
                       (Unsafe_int32.(+)  !l
                        (#"3-2_c.jc" 1227 66 78# "expl:Integer cast"
                        (Unsafe_int32.of_int (1))) ));
                       begin
                       (assert {
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 431 31 149#
                       "expl:Assertion in line 431"
                       (forall f2_13 : int.
                        (forall t2_13 : int.
                         (((not ((=) f2_13 (Int32.to_int f_2))) \/
                          (not ((=) t2_13 (Int32.to_int t_2)))) ->
                          ((=)
                          (count g_6 f2_13 t2_13
                          (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34)
                          (count g_6 f2_13 t2_13
                          (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))
                       }); () end;
                       begin
                       (assert {
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 432 31 180#
                       "expl:Assertion in line 432"
                       (forall f2_14 : int.
                        (forall t2_14 : int.
                         (((not ((=) f2_14 (Int32.to_int f_2))) \/
                          (not ((=) t2_14 (Int32.to_int t_2)))) ->
                          ((=)
                          (count g_6 f2_14 t2_14 (0) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34)
                          (Int.(+)
                          (count g_6 f2_14 t2_14 (0)
                          (Int.(-) (Int32.to_int !l) (1))
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34)
                          (count g_6 f2_14 t2_14
                          (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34))))))) }); ()
                       end;
                       begin
                       (assert {
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 433 31 180#
                       "expl:Assertion in line 433"
                       (forall f2_15 : int.
                        (forall t2_15 : int.
                         (((not ((=) f2_15 (Int32.to_int f_2))) \/
                          (not ((=) t2_15 (Int32.to_int t_2)))) ->
                          ((=)
                          (count g_6 f2_15 t2_15 (0) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                          (Int.(+)
                          (count g_6 f2_15 t2_15 (0)
                          (Int.(-) (Int32.to_int !l) (1))
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                          (count g_6 f2_15 t2_15
                          (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))))
                       }); () end;
                       begin
                       (assert {
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 434 31 149#
                       "expl:Assertion in line 434"
                       (forall f2_16 : int.
                        (forall t2_16 : int.
                         (((not ((=) f2_16 (Int32.to_int f_2))) \/
                          (not ((=) t2_16 (Int32.to_int t_2)))) ->
                          ((=)
                          (count g_6 f2_16 t2_16 (0)
                          (Int.(-) (Int32.to_int !l) (1))
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34)
                          (count g_6 f2_16 t2_16 (0)
                          (Int.(-) (Int32.to_int !l) (1))
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre)))))))
                       }); () end;
                       begin
                       (assert {
                       (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 435 31 180#
                       "expl:Assertion in line 435"
                       (forall f2_17 : int.
                        (forall t2_17 : int.
                         (((not ((=) f2_17 (Int32.to_int f_2))) \/
                          (not ((=) t2_17 (Int32.to_int t_2)))) ->
                          ((=)
                          (count g_6 f2_17 t2_17 (0) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14
                          !__anonstruct_Edge_3_existent_0_edges_34
                          !__anonstruct_Edge_3_to_edges_34
                          !__anonstruct_Edge_3_from_edges_34)
                          (Int.(+)
                          (count g_6 f2_17 t2_17 (0)
                          (Int.(-) (Int32.to_int !l) (1))
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre))
                          (count g_6 f2_17 t2_17
                          (Int.(-) (Int32.to_int !l) (1)) (Int32.to_int !l)
                          __anonstruct_Graph_4_edges_g_14 (at
                          !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre)
                          (at !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
                          !__anonstruct_Edge_3_from_edges_34 'U__Pre))))))))
                       }); () end end end; (raise (Loop_continue_exc ())) end
                     with Loop_continue_exc _jessie_11 -> () end end end;
                   (raise (Goto_while_1_break_exc ())) end end end end end
              with Goto_while_1_break_exc _jessie_5 ->
              'While_1_break:
              'While_1_break:
              begin
              ();
               begin
               (assert {
               (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 438 23 75#
               "expl:Assertion in line 438"
               ((=)
               (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
               __anonstruct_Graph_4_esize_g_14
               __anonstruct_Graph_4_edges_g_14
               !__anonstruct_Edge_3_existent_0_edges_34
               !__anonstruct_Edge_3_to_edges_34
               !__anonstruct_Edge_3_from_edges_34)
               (Int.(+)
               (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
               __anonstruct_Graph_4_esize_g_14
               __anonstruct_Graph_4_edges_g_14 (at
               !__anonstruct_Edge_3_existent_0_edges_34 'U__Pre) (at
               !__anonstruct_Edge_3_to_edges_34 'U__Pre) (at
               !__anonstruct_Edge_3_from_edges_34 'U__Pre)) (1)))) }); () end;
               (raise (Return_label_exc ())) end end else ());
            (i_0_0 :=
             (Unsafe_int32.(+)  !i_0_0
              (#"3-2_c.jc" 1387 64 76# "expl:Integer cast"
              (Unsafe_int32.of_int (1))) )) end;
            (raise (Loop_continue_exc ())) end with Loop_continue_exc
           _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_0_0_exc ())) end end with
       Goto_while_0_break_0_0_exc _jessie_6 ->
       'While_0_break_0_0: 'While_0_break_0_0: () end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label: 'Return_label: (raise Return) end))); (raise Return) end
    with Return -> () end
  
end

theory Logic_type_padding

  use why3.Bool.Bool 
  
  type padding 
  
end

theory Struct___anonstruct_Edge_3

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Edge_3_tag  : (tag_id
  __anonstruct_Edge_3)
  
  axiom U___anonstruct_Edge_3_parenttag_bottom  :
  (parenttag __anonstruct_Edge_3_tag bottom_tag)
  
  axiom U___anonstruct_Edge_3_is_final  :
  (forall __anonstruct_Edge_3_tag_table : (tag_table __anonstruct_Edge_3).
   (forall p : (pointer __anonstruct_Edge_3).
    ((instanceof __anonstruct_Edge_3_tag_table p __anonstruct_Edge_3_tag) ->
     ((=) (typeof __anonstruct_Edge_3_tag_table p) __anonstruct_Edge_3_tag))))
  
  predicate frame_tag_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (old___anonstruct_Edge_3_tag_table : (tag_table
  __anonstruct_Edge_3)) (__anonstruct_Edge_3_tag_table : (tag_table
  __anonstruct_Edge_3))
  =
     ((tag_extends old___anonstruct_Edge_3_tag_table
      __anonstruct_Edge_3_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Edge_3_tag_table
     __anonstruct_Edge_3_tag_table p))
  
  predicate frame_free_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (old___anonstruct_Edge_3_alloc_table : (alloc_table
  __anonstruct_Edge_3)) (__anonstruct_Edge_3_alloc_table : (alloc_table
  __anonstruct_Edge_3))
  =
     ((free_extends old___anonstruct_Edge_3_alloc_table
      __anonstruct_Edge_3_alloc_table)
     /\
     (free_block old___anonstruct_Edge_3_alloc_table
     __anonstruct_Edge_3_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (n : int) (old___anonstruct_Edge_3_alloc_table :
  (alloc_table __anonstruct_Edge_3)) (__anonstruct_Edge_3_alloc_table :
  (alloc_table __anonstruct_Edge_3))
  =
     ((alloc_extends old___anonstruct_Edge_3_alloc_table
      __anonstruct_Edge_3_alloc_table)
     /\
     (alloc_block old___anonstruct_Edge_3_alloc_table
     __anonstruct_Edge_3_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (n : int) (__anonstruct_Edge_3_tag_table : (tag_table
  __anonstruct_Edge_3))
  = (tag_fresh __anonstruct_Edge_3_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (n : int) (__anonstruct_Edge_3_alloc_table :
  (alloc_table __anonstruct_Edge_3))
  = (alloc_fresh __anonstruct_Edge_3_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (__anonstruct_Edge_3_tag_table : (tag_table
  __anonstruct_Edge_3)) = true
  
  predicate container_of_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (l : int) (r : int) (__anonstruct_Edge_3_tag_table :
  (tag_table __anonstruct_Edge_3)) = true
  
  predicate typeof_singleton_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (__anonstruct_Edge_3_tag_table : (tag_table
  __anonstruct_Edge_3))
  = ((=) (typeof __anonstruct_Edge_3_tag_table p) __anonstruct_Edge_3_tag)
  
  predicate typeof_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (l : int) (r : int) (__anonstruct_Edge_3_tag_table :
  (tag_table __anonstruct_Edge_3))
  =
     (((=) (typeof __anonstruct_Edge_3_tag_table p) __anonstruct_Edge_3_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Edge_3_tag_table (shift p i))
       __anonstruct_Edge_3_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (__anonstruct_Edge_3_tag_table : (tag_table
  __anonstruct_Edge_3))
  = (instanceof __anonstruct_Edge_3_tag_table p __anonstruct_Edge_3_tag)
  
  predicate instanceof_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (l : int) (r : int) (__anonstruct_Edge_3_tag_table :
  (tag_table __anonstruct_Edge_3))
  =
     ((instanceof __anonstruct_Edge_3_tag_table p __anonstruct_Edge_3_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Edge_3_tag_table (shift p i)
       __anonstruct_Edge_3_tag))))
  
  predicate right_valid_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (b : int) (__anonstruct_Edge_3_alloc_table :
  (alloc_table __anonstruct_Edge_3))
  = ((>=) (offset_max __anonstruct_Edge_3_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (a : int) (__anonstruct_Edge_3_alloc_table :
  (alloc_table __anonstruct_Edge_3))
  = ((<=) (offset_min __anonstruct_Edge_3_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (a : int) (__anonstruct_Edge_3_alloc_table :
  (alloc_table __anonstruct_Edge_3))
  = ((=) (offset_min __anonstruct_Edge_3_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (a : int) (b : int) (__anonstruct_Edge_3_alloc_table
  : (alloc_table __anonstruct_Edge_3))
  =
     (((<=) (offset_min __anonstruct_Edge_3_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Edge_3_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Edge_3 (p : (pointer
  __anonstruct_Edge_3)) (a : int) (b : int) (__anonstruct_Edge_3_alloc_table
  : (alloc_table __anonstruct_Edge_3))
  =
     (((=) (offset_min __anonstruct_Edge_3_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Edge_3_alloc_table p) b))
  
  axiom U___anonstruct_Edge_3_int  :
  ((=) (int_of_tag __anonstruct_Edge_3_tag) (4))
  
end

module Struct___anonstruct_Edge_3_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Edge_3 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Edge_3
  (p : (pointer __anonstruct_Edge_3)) 
   (__anonstruct_Edge_3_alloc_table : ref (alloc_table
    __anonstruct_Edge_3)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Edge_3_alloc_table p)) }
    writes { __anonstruct_Edge_3_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Edge_3_alloc_table (old
       !__anonstruct_Edge_3_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Edge_3 p (old
       !__anonstruct_Edge_3_alloc_table) !__anonstruct_Edge_3_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Edge_3 p
      (offset_max (old !__anonstruct_Edge_3_alloc_table) p)
      !__anonstruct_Edge_3_alloc_table))) }
  
  val allocate_struct___anonstruct_Edge_3_requires
  (n : int) 
   (__anonstruct_Edge_3_alloc_table : ref (alloc_table __anonstruct_Edge_3)) 
    (__anonstruct_Edge_3_tag_table : ref (tag_table __anonstruct_Edge_3)) :
     (pointer __anonstruct_Edge_3)
     requires { ((>=) n (0)) } writes { __anonstruct_Edge_3_alloc_table,
     __anonstruct_Edge_3_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Edge_3 result (0) (Int.(-) n (1))
        !__anonstruct_Edge_3_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Edge_3 result n (old
        !__anonstruct_Edge_3_alloc_table) !__anonstruct_Edge_3_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Edge_3 result (old
        !__anonstruct_Edge_3_tag_table) !__anonstruct_Edge_3_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Edge_3 result (Int.(-) n (1)) (old
        !__anonstruct_Edge_3_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Edge_3 result (Int.(-) n (1)) (old
        !__anonstruct_Edge_3_tag_table))
       /\
       ((typeof_struct___anonstruct_Edge_3 result (0) n
        !__anonstruct_Edge_3_tag_table)
       /\
       (container_of_struct___anonstruct_Edge_3 result (0) n
       !__anonstruct_Edge_3_tag_table))))))) }
  
end

module Struct___anonstruct_Edge_3_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Edge_3 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Edge_3
  (p : (pointer __anonstruct_Edge_3)) 
   (__anonstruct_Edge_3_alloc_table : ref (alloc_table
    __anonstruct_Edge_3)) : unit
    requires { true } writes { __anonstruct_Edge_3_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Edge_3_alloc_table (old
       !__anonstruct_Edge_3_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Edge_3 p (old
       !__anonstruct_Edge_3_alloc_table) !__anonstruct_Edge_3_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Edge_3 p
      (offset_max (old !__anonstruct_Edge_3_alloc_table) p)
      !__anonstruct_Edge_3_alloc_table))) }
  
  val allocate_struct___anonstruct_Edge_3
  (n : int) 
   (__anonstruct_Edge_3_alloc_table : ref (alloc_table __anonstruct_Edge_3)) 
    (__anonstruct_Edge_3_tag_table : ref (tag_table __anonstruct_Edge_3)) :
     (pointer __anonstruct_Edge_3)
     requires { true } writes { __anonstruct_Edge_3_alloc_table,
     __anonstruct_Edge_3_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Edge_3 result (0) (Int.(-) n (1))
        !__anonstruct_Edge_3_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Edge_3 result n (old
        !__anonstruct_Edge_3_alloc_table) !__anonstruct_Edge_3_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Edge_3 result (old
        !__anonstruct_Edge_3_tag_table) !__anonstruct_Edge_3_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Edge_3 result (Int.(-) n (1)) (old
        !__anonstruct_Edge_3_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Edge_3 result (Int.(-) n (1)) (old
        !__anonstruct_Edge_3_tag_table))
       /\
       ((typeof_struct___anonstruct_Edge_3 result (0) n
        !__anonstruct_Edge_3_tag_table)
       /\
       (container_of_struct___anonstruct_Edge_3 result (0) n
       !__anonstruct_Edge_3_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Edge_3
  (__anonstruct_Edge_3_alloc_table : ref (alloc_table __anonstruct_Edge_3)) 
   (__anonstruct_Edge_3_tag_table : ref (tag_table __anonstruct_Edge_3)) :
    (pointer __anonstruct_Edge_3)
    requires { true } writes { __anonstruct_Edge_3_alloc_table,
    __anonstruct_Edge_3_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Edge_3 result (0) (0)
       !__anonstruct_Edge_3_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Edge_3 result (1) (old
       !__anonstruct_Edge_3_alloc_table) !__anonstruct_Edge_3_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Edge_3 result (old
       !__anonstruct_Edge_3_tag_table) !__anonstruct_Edge_3_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Edge_3 result (0) (old
       !__anonstruct_Edge_3_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Edge_3 result (0) (old
       !__anonstruct_Edge_3_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Edge_3 result
       !__anonstruct_Edge_3_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Edge_3 result
      !__anonstruct_Edge_3_tag_table))))))) }
  
end

theory Struct___anonstruct_Graph_4

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Graph_4 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Graph_4_tag  : (tag_id
  __anonstruct_Graph_4)
  
  axiom U___anonstruct_Graph_4_parenttag_bottom  :
  (parenttag __anonstruct_Graph_4_tag bottom_tag)
  
  axiom U___anonstruct_Graph_4_is_final  :
  (forall __anonstruct_Graph_4_tag_table : (tag_table __anonstruct_Graph_4).
   (forall p : (pointer __anonstruct_Graph_4).
    ((instanceof __anonstruct_Graph_4_tag_table p __anonstruct_Graph_4_tag)
     ->
     ((=) (typeof __anonstruct_Graph_4_tag_table p) __anonstruct_Graph_4_tag))))
  
  predicate frame_tag_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (old___anonstruct_Graph_4_tag_table : (tag_table
  __anonstruct_Graph_4)) (__anonstruct_Graph_4_tag_table : (tag_table
  __anonstruct_Graph_4))
  =
     ((tag_extends old___anonstruct_Graph_4_tag_table
      __anonstruct_Graph_4_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Graph_4_tag_table
     __anonstruct_Graph_4_tag_table p))
  
  predicate frame_free_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (old___anonstruct_Graph_4_alloc_table : (alloc_table
  __anonstruct_Graph_4)) (__anonstruct_Graph_4_alloc_table : (alloc_table
  __anonstruct_Graph_4))
  =
     ((free_extends old___anonstruct_Graph_4_alloc_table
      __anonstruct_Graph_4_alloc_table)
     /\
     (free_block old___anonstruct_Graph_4_alloc_table
     __anonstruct_Graph_4_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (n : int) (old___anonstruct_Graph_4_alloc_table :
  (alloc_table __anonstruct_Graph_4)) (__anonstruct_Graph_4_alloc_table :
  (alloc_table __anonstruct_Graph_4))
  =
     ((alloc_extends old___anonstruct_Graph_4_alloc_table
      __anonstruct_Graph_4_alloc_table)
     /\
     (alloc_block old___anonstruct_Graph_4_alloc_table
     __anonstruct_Graph_4_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (n : int) (__anonstruct_Graph_4_tag_table :
  (tag_table __anonstruct_Graph_4))
  = (tag_fresh __anonstruct_Graph_4_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (n : int) (__anonstruct_Graph_4_alloc_table :
  (alloc_table __anonstruct_Graph_4))
  = (alloc_fresh __anonstruct_Graph_4_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (__anonstruct_Graph_4_tag_table : (tag_table
  __anonstruct_Graph_4)) = true
  
  predicate container_of_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (l : int) (r : int) (__anonstruct_Graph_4_tag_table
  : (tag_table __anonstruct_Graph_4)) = true
  
  predicate typeof_singleton_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (__anonstruct_Graph_4_tag_table : (tag_table
  __anonstruct_Graph_4))
  = ((=) (typeof __anonstruct_Graph_4_tag_table p) __anonstruct_Graph_4_tag)
  
  predicate typeof_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (l : int) (r : int) (__anonstruct_Graph_4_tag_table
  : (tag_table __anonstruct_Graph_4))
  =
     (((=) (typeof __anonstruct_Graph_4_tag_table p) __anonstruct_Graph_4_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Graph_4_tag_table (shift p i))
       __anonstruct_Graph_4_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (__anonstruct_Graph_4_tag_table : (tag_table
  __anonstruct_Graph_4))
  = (instanceof __anonstruct_Graph_4_tag_table p __anonstruct_Graph_4_tag)
  
  predicate instanceof_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (l : int) (r : int) (__anonstruct_Graph_4_tag_table
  : (tag_table __anonstruct_Graph_4))
  =
     ((instanceof __anonstruct_Graph_4_tag_table p __anonstruct_Graph_4_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Graph_4_tag_table (shift p i)
       __anonstruct_Graph_4_tag))))
  
  predicate right_valid_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (b : int) (__anonstruct_Graph_4_alloc_table :
  (alloc_table __anonstruct_Graph_4))
  = ((>=) (offset_max __anonstruct_Graph_4_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (a : int) (__anonstruct_Graph_4_alloc_table :
  (alloc_table __anonstruct_Graph_4))
  = ((<=) (offset_min __anonstruct_Graph_4_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (a : int) (__anonstruct_Graph_4_alloc_table :
  (alloc_table __anonstruct_Graph_4))
  = ((=) (offset_min __anonstruct_Graph_4_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (a : int) (b : int)
  (__anonstruct_Graph_4_alloc_table : (alloc_table __anonstruct_Graph_4))
  =
     (((<=) (offset_min __anonstruct_Graph_4_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Graph_4_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Graph_4 (p : (pointer
  __anonstruct_Graph_4)) (a : int) (b : int)
  (__anonstruct_Graph_4_alloc_table : (alloc_table __anonstruct_Graph_4))
  =
     (((=) (offset_min __anonstruct_Graph_4_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Graph_4_alloc_table p) b))
  
  axiom U___anonstruct_Graph_4_int  :
  ((=) (int_of_tag __anonstruct_Graph_4_tag) (5))
  
end

module Struct___anonstruct_Graph_4_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Graph_4 
  
  use import Root___anonstruct_Graph_4 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Graph_4
  (p : (pointer __anonstruct_Graph_4)) 
   (__anonstruct_Graph_4_alloc_table : ref (alloc_table
    __anonstruct_Graph_4)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Graph_4_alloc_table p)) }
    writes { __anonstruct_Graph_4_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Graph_4_alloc_table (old
       !__anonstruct_Graph_4_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Graph_4 p (old
       !__anonstruct_Graph_4_alloc_table) !__anonstruct_Graph_4_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Graph_4 p
      (offset_max (old !__anonstruct_Graph_4_alloc_table) p)
      !__anonstruct_Graph_4_alloc_table))) }
  
  val allocate_struct___anonstruct_Graph_4_requires
  (n : int) 
   (__anonstruct_Graph_4_alloc_table : ref (alloc_table
    __anonstruct_Graph_4)) 
    (__anonstruct_Graph_4_tag_table : ref (tag_table __anonstruct_Graph_4)) :
     (pointer __anonstruct_Graph_4)
     requires { ((>=) n (0)) } writes { __anonstruct_Graph_4_alloc_table,
     __anonstruct_Graph_4_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Graph_4 result (0) (Int.(-) n (1))
        !__anonstruct_Graph_4_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Graph_4 result n (old
        !__anonstruct_Graph_4_alloc_table) !__anonstruct_Graph_4_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Graph_4 result (old
        !__anonstruct_Graph_4_tag_table) !__anonstruct_Graph_4_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Graph_4 result (Int.(-) n (1)) (old
        !__anonstruct_Graph_4_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Graph_4 result (Int.(-) n (1)) (old
        !__anonstruct_Graph_4_tag_table))
       /\
       ((typeof_struct___anonstruct_Graph_4 result (0) n
        !__anonstruct_Graph_4_tag_table)
       /\
       (container_of_struct___anonstruct_Graph_4 result (0) n
       !__anonstruct_Graph_4_tag_table))))))) }
  
end

module Struct___anonstruct_Graph_4_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Graph_4 
  
  use import Root___anonstruct_Graph_4 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Graph_4
  (p : (pointer __anonstruct_Graph_4)) 
   (__anonstruct_Graph_4_alloc_table : ref (alloc_table
    __anonstruct_Graph_4)) : unit
    requires { true } writes { __anonstruct_Graph_4_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Graph_4_alloc_table (old
       !__anonstruct_Graph_4_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Graph_4 p (old
       !__anonstruct_Graph_4_alloc_table) !__anonstruct_Graph_4_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Graph_4 p
      (offset_max (old !__anonstruct_Graph_4_alloc_table) p)
      !__anonstruct_Graph_4_alloc_table))) }
  
  val allocate_struct___anonstruct_Graph_4
  (n : int) 
   (__anonstruct_Graph_4_alloc_table : ref (alloc_table
    __anonstruct_Graph_4)) 
    (__anonstruct_Graph_4_tag_table : ref (tag_table __anonstruct_Graph_4)) :
     (pointer __anonstruct_Graph_4)
     requires { true } writes { __anonstruct_Graph_4_alloc_table,
     __anonstruct_Graph_4_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Graph_4 result (0) (Int.(-) n (1))
        !__anonstruct_Graph_4_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Graph_4 result n (old
        !__anonstruct_Graph_4_alloc_table) !__anonstruct_Graph_4_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Graph_4 result (old
        !__anonstruct_Graph_4_tag_table) !__anonstruct_Graph_4_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Graph_4 result (Int.(-) n (1)) (old
        !__anonstruct_Graph_4_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Graph_4 result (Int.(-) n (1)) (old
        !__anonstruct_Graph_4_tag_table))
       /\
       ((typeof_struct___anonstruct_Graph_4 result (0) n
        !__anonstruct_Graph_4_tag_table)
       /\
       (container_of_struct___anonstruct_Graph_4 result (0) n
       !__anonstruct_Graph_4_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Graph_4
  (__anonstruct_Graph_4_alloc_table : ref (alloc_table
   __anonstruct_Graph_4)) 
   (__anonstruct_Graph_4_tag_table : ref (tag_table __anonstruct_Graph_4)) :
    (pointer __anonstruct_Graph_4)
    requires { true } writes { __anonstruct_Graph_4_alloc_table,
    __anonstruct_Graph_4_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Graph_4 result (0) (0)
       !__anonstruct_Graph_4_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Graph_4 result (1) (old
       !__anonstruct_Graph_4_alloc_table) !__anonstruct_Graph_4_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Graph_4 result (old
       !__anonstruct_Graph_4_tag_table) !__anonstruct_Graph_4_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Graph_4 result (0) (old
       !__anonstruct_Graph_4_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Graph_4 result (0) (old
       !__anonstruct_Graph_4_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Graph_4 result
       !__anonstruct_Graph_4_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Graph_4 result
      !__anonstruct_Graph_4_tag_table))))))) }
  
end

theory Struct___anonstruct_Vertex_2

  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import core.Tag_id 
  
  use import core.Tag 
  
  use import Root___anonstruct_Vertex_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  function __anonstruct_Vertex_2_tag  : (tag_id
  __anonstruct_Vertex_2)
  
  axiom U___anonstruct_Vertex_2_parenttag_bottom  :
  (parenttag __anonstruct_Vertex_2_tag bottom_tag)
  
  axiom U___anonstruct_Vertex_2_is_final  :
  (forall __anonstruct_Vertex_2_tag_table : (tag_table
   __anonstruct_Vertex_2).
   (forall p : (pointer __anonstruct_Vertex_2).
    ((instanceof __anonstruct_Vertex_2_tag_table p __anonstruct_Vertex_2_tag)
     ->
     ((=) (typeof __anonstruct_Vertex_2_tag_table p)
     __anonstruct_Vertex_2_tag))))
  
  predicate frame_tag_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (old___anonstruct_Vertex_2_tag_table : (tag_table
  __anonstruct_Vertex_2)) (__anonstruct_Vertex_2_tag_table : (tag_table
  __anonstruct_Vertex_2))
  =
     ((tag_extends old___anonstruct_Vertex_2_tag_table
      __anonstruct_Vertex_2_tag_table)
     /\
     (alloc_tag_block old___anonstruct_Vertex_2_tag_table
     __anonstruct_Vertex_2_tag_table p))
  
  predicate frame_free_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (old___anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2)) (__anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2))
  =
     ((free_extends old___anonstruct_Vertex_2_alloc_table
      __anonstruct_Vertex_2_alloc_table)
     /\
     (free_block old___anonstruct_Vertex_2_alloc_table
     __anonstruct_Vertex_2_alloc_table p))
  
  predicate frame_alloc_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (n : int) (old___anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2)) (__anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2))
  =
     ((alloc_extends old___anonstruct_Vertex_2_alloc_table
      __anonstruct_Vertex_2_alloc_table)
     /\
     (alloc_block old___anonstruct_Vertex_2_alloc_table
     __anonstruct_Vertex_2_alloc_table p n))
  
  predicate fresh_tag_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (n : int) (__anonstruct_Vertex_2_tag_table :
  (tag_table __anonstruct_Vertex_2))
  = (tag_fresh __anonstruct_Vertex_2_tag_table p)
  
  predicate fresh_alloc_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (n : int) (__anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2))
  = (alloc_fresh __anonstruct_Vertex_2_alloc_table p)
  
  predicate container_of_singleton_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (__anonstruct_Vertex_2_tag_table : (tag_table
  __anonstruct_Vertex_2)) = true
  
  predicate container_of_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (l : int) (r : int)
  (__anonstruct_Vertex_2_tag_table : (tag_table __anonstruct_Vertex_2))
  = true
  
  predicate typeof_singleton_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (__anonstruct_Vertex_2_tag_table : (tag_table
  __anonstruct_Vertex_2))
  =
     ((=) (typeof __anonstruct_Vertex_2_tag_table p)
     __anonstruct_Vertex_2_tag)
  
  predicate typeof_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (l : int) (r : int)
  (__anonstruct_Vertex_2_tag_table : (tag_table __anonstruct_Vertex_2))
  =
     (((=) (typeof __anonstruct_Vertex_2_tag_table p)
      __anonstruct_Vertex_2_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof __anonstruct_Vertex_2_tag_table (shift p i))
       __anonstruct_Vertex_2_tag))))
  
  predicate instanceof_singleton_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (__anonstruct_Vertex_2_tag_table : (tag_table
  __anonstruct_Vertex_2))
  = (instanceof __anonstruct_Vertex_2_tag_table p __anonstruct_Vertex_2_tag)
  
  predicate instanceof_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (l : int) (r : int)
  (__anonstruct_Vertex_2_tag_table : (tag_table __anonstruct_Vertex_2))
  =
     ((instanceof __anonstruct_Vertex_2_tag_table p __anonstruct_Vertex_2_tag)
     /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof __anonstruct_Vertex_2_tag_table (shift p i)
       __anonstruct_Vertex_2_tag))))
  
  predicate right_valid_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (b : int) (__anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2))
  = ((>=) (offset_max __anonstruct_Vertex_2_alloc_table p) b)
  
  predicate left_valid_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (a : int) (__anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2))
  = ((<=) (offset_min __anonstruct_Vertex_2_alloc_table p) a)
  
  predicate strict_left_valid_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (a : int) (__anonstruct_Vertex_2_alloc_table :
  (alloc_table __anonstruct_Vertex_2))
  = ((=) (offset_min __anonstruct_Vertex_2_alloc_table p) a)
  
  predicate valid_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (a : int) (b : int)
  (__anonstruct_Vertex_2_alloc_table : (alloc_table __anonstruct_Vertex_2))
  =
     (((<=) (offset_min __anonstruct_Vertex_2_alloc_table p) a) /\
     ((>=) (offset_max __anonstruct_Vertex_2_alloc_table p) b))
  
  predicate strict_valid_struct___anonstruct_Vertex_2 (p : (pointer
  __anonstruct_Vertex_2)) (a : int) (b : int)
  (__anonstruct_Vertex_2_alloc_table : (alloc_table __anonstruct_Vertex_2))
  =
     (((=) (offset_min __anonstruct_Vertex_2_alloc_table p) a) /\
     ((=) (offset_max __anonstruct_Vertex_2_alloc_table p) b))
  
  axiom U___anonstruct_Vertex_2_int  :
  ((=) (int_of_tag __anonstruct_Vertex_2_tag) (6))
  
end

module Struct___anonstruct_Vertex_2_unsafe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Vertex_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct___anonstruct_Vertex_2
  (p : (pointer __anonstruct_Vertex_2)) 
   (__anonstruct_Vertex_2_alloc_table : ref (alloc_table
    __anonstruct_Vertex_2)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !__anonstruct_Vertex_2_alloc_table p)) }
    writes { __anonstruct_Vertex_2_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Vertex_2_alloc_table (old
       !__anonstruct_Vertex_2_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Vertex_2 p (old
       !__anonstruct_Vertex_2_alloc_table)
       !__anonstruct_Vertex_2_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Vertex_2 p
      (offset_max (old !__anonstruct_Vertex_2_alloc_table) p)
      !__anonstruct_Vertex_2_alloc_table))) }
  
  val allocate_struct___anonstruct_Vertex_2_requires
  (n : int) 
   (__anonstruct_Vertex_2_alloc_table : ref (alloc_table
    __anonstruct_Vertex_2)) 
    (__anonstruct_Vertex_2_tag_table : ref (tag_table
     __anonstruct_Vertex_2)) : (pointer __anonstruct_Vertex_2)
     requires { ((>=) n (0)) } writes { __anonstruct_Vertex_2_alloc_table,
     __anonstruct_Vertex_2_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Vertex_2 result (0) (Int.(-) n (1))
        !__anonstruct_Vertex_2_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Vertex_2 result n (old
        !__anonstruct_Vertex_2_alloc_table)
        !__anonstruct_Vertex_2_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Vertex_2 result (old
        !__anonstruct_Vertex_2_tag_table) !__anonstruct_Vertex_2_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Vertex_2 result (Int.(-) n (1)) (old
        !__anonstruct_Vertex_2_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Vertex_2 result (Int.(-) n (1)) (old
        !__anonstruct_Vertex_2_tag_table))
       /\
       ((typeof_struct___anonstruct_Vertex_2 result (0) n
        !__anonstruct_Vertex_2_tag_table)
       /\
       (container_of_struct___anonstruct_Vertex_2 result (0) n
       !__anonstruct_Vertex_2_tag_table))))))) }
  
end

module Struct___anonstruct_Vertex_2_safe

  use import core.Tag_table_type 
  
  use import Struct___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Vertex_2 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct___anonstruct_Vertex_2
  (p : (pointer __anonstruct_Vertex_2)) 
   (__anonstruct_Vertex_2_alloc_table : ref (alloc_table
    __anonstruct_Vertex_2)) : unit
    requires { true } writes { __anonstruct_Vertex_2_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !__anonstruct_Vertex_2_alloc_table (old
       !__anonstruct_Vertex_2_alloc_table)))
      \/
      ((frame_free_struct___anonstruct_Vertex_2 p (old
       !__anonstruct_Vertex_2_alloc_table)
       !__anonstruct_Vertex_2_alloc_table)
      /\
      (fresh_alloc_struct___anonstruct_Vertex_2 p
      (offset_max (old !__anonstruct_Vertex_2_alloc_table) p)
      !__anonstruct_Vertex_2_alloc_table))) }
  
  val allocate_struct___anonstruct_Vertex_2
  (n : int) 
   (__anonstruct_Vertex_2_alloc_table : ref (alloc_table
    __anonstruct_Vertex_2)) 
    (__anonstruct_Vertex_2_tag_table : ref (tag_table
     __anonstruct_Vertex_2)) : (pointer __anonstruct_Vertex_2)
     requires { true } writes { __anonstruct_Vertex_2_alloc_table,
     __anonstruct_Vertex_2_tag_table }
     ensures {
       ((strict_valid_struct___anonstruct_Vertex_2 result (0) (Int.(-) n (1))
        !__anonstruct_Vertex_2_alloc_table)
       /\
       ((frame_alloc_struct___anonstruct_Vertex_2 result n (old
        !__anonstruct_Vertex_2_alloc_table)
        !__anonstruct_Vertex_2_alloc_table)
       /\
       ((frame_tag_struct___anonstruct_Vertex_2 result (old
        !__anonstruct_Vertex_2_tag_table) !__anonstruct_Vertex_2_tag_table)
       /\
       ((fresh_alloc_struct___anonstruct_Vertex_2 result (Int.(-) n (1)) (old
        !__anonstruct_Vertex_2_alloc_table))
       /\
       ((fresh_tag_struct___anonstruct_Vertex_2 result (Int.(-) n (1)) (old
        !__anonstruct_Vertex_2_tag_table))
       /\
       ((typeof_struct___anonstruct_Vertex_2 result (0) n
        !__anonstruct_Vertex_2_tag_table)
       /\
       (container_of_struct___anonstruct_Vertex_2 result (0) n
       !__anonstruct_Vertex_2_tag_table))))))) }
  
  val allocate_singleton_struct___anonstruct_Vertex_2
  (__anonstruct_Vertex_2_alloc_table : ref (alloc_table
   __anonstruct_Vertex_2)) 
   (__anonstruct_Vertex_2_tag_table : ref (tag_table
    __anonstruct_Vertex_2)) : (pointer __anonstruct_Vertex_2)
    requires { true } writes { __anonstruct_Vertex_2_alloc_table,
    __anonstruct_Vertex_2_tag_table }
    ensures {
      ((strict_valid_struct___anonstruct_Vertex_2 result (0) (0)
       !__anonstruct_Vertex_2_alloc_table)
      /\
      ((frame_alloc_struct___anonstruct_Vertex_2 result (1) (old
       !__anonstruct_Vertex_2_alloc_table)
       !__anonstruct_Vertex_2_alloc_table)
      /\
      ((frame_tag_struct___anonstruct_Vertex_2 result (old
       !__anonstruct_Vertex_2_tag_table) !__anonstruct_Vertex_2_tag_table)
      /\
      ((fresh_alloc_struct___anonstruct_Vertex_2 result (0) (old
       !__anonstruct_Vertex_2_alloc_table))
      /\
      ((fresh_tag_struct___anonstruct_Vertex_2 result (0) (old
       !__anonstruct_Vertex_2_tag_table))
      /\
      ((typeof_singleton_struct___anonstruct_Vertex_2 result
       !__anonstruct_Vertex_2_tag_table)
      /\
      (container_of_singleton_struct___anonstruct_Vertex_2 result
      !__anonstruct_Vertex_2_tag_table))))))) }
  
end

theory Struct_voidP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Voidp_tag_id 
  
  predicate frame_tag_struct_voidP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_voidP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (tag_fresh voidP_tag_table p)
  
  predicate fresh_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (alloc_fresh voidP_alloc_table p)
  
  predicate container_of_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_voidP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) voidP_tag)
  
  predicate typeof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) voidP_tag))))
  
  predicate instanceof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p voidP_tag)
  
  predicate instanceof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) voidP_tag))))
  
  predicate right_valid_struct_voidP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((>=) (offset_max voidP_alloc_table p) b)
  
  predicate left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((<=) (offset_min voidP_alloc_table p) a)
  
  predicate strict_left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((=) (offset_min voidP_alloc_table p) a)
  
  predicate valid_struct_voidP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  =
     (((<=) (offset_min voidP_alloc_table p) a) /\
     ((>=) (offset_max voidP_alloc_table p) b))
  
  predicate strict_valid_struct_voidP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  =
     (((=) (offset_min voidP_alloc_table p) a) /\
     ((=) (offset_max voidP_alloc_table p) b))
  
end

theory Struct_charP

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import core.Tag_table 
  
  use import Struct_voidP 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use import core.Alloc 
  
  use why3.Bool.Bool 
  
  use import core.Charp_tag_id 
  
  predicate frame_tag_struct_charP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_charP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_tag_table : (tag_table voidP))
  = (fresh_tag_struct_voidP p n voidP_tag_table)
  
  predicate fresh_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (fresh_alloc_struct_voidP p n voidP_alloc_table)
  
  predicate container_of_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_charP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) charP_tag)
  
  predicate typeof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) charP_tag))))
  
  predicate instanceof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p charP_tag)
  
  predicate instanceof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) charP_tag))))
  
  predicate right_valid_struct_charP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (right_valid_struct_voidP p b voidP_alloc_table)
  
  predicate left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate strict_left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (strict_left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate valid_struct_charP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (valid_struct_voidP p a b voidP_alloc_table)
  
  predicate strict_valid_struct_charP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  = (strict_valid_struct_voidP p a b voidP_alloc_table)
  
end

module Struct_charP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_charP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_charP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_charP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_charP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_charP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_charP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_charP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_charP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_charP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_charP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_charP result !voidP_tag_table) /\
      (container_of_singleton_struct_charP result !voidP_tag_table))))))) }
  
end

module Struct_voidP_unsafe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import int.Int 
  
  use import core.Allocable 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_voidP_safe

  use import core.Voidp 
  
  use import core.Tag_table_type 
  
  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      (fresh_alloc_struct_voidP p (offset_max (old !voidP_alloc_table) p)
      !voidP_alloc_table))) }
  
  val allocate_struct_voidP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (Int.(-) n (1)) (old
        !voidP_alloc_table))
       /\
       ((fresh_tag_struct_voidP result (Int.(-) n (1)) (old
        !voidP_tag_table))
       /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_voidP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_voidP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_voidP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_voidP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_voidP result (0) (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_voidP result (0) (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_voidP result !voidP_tag_table) /\
      (container_of_singleton_struct_voidP result !voidP_tag_table))))))) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint8.to_int n)) \/
     (Bit_int8_of_Bit_uint8.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { (Int8.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Uint64.to_int n)) \/
     (Bit_uint32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { (Uint32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint64.to_int n)) \/
     (Bit_uint16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint64.to_int n)) \/
     (Bit_int8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { (Int8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires {
     ((Bit_int64.in_bounds (Uint64.to_int n)) \/
     (Bit_int64_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { (Int64.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint64.to_int n)) \/
     (Bit_int32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { (Int32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint64.to_int n)) \/
     (Bit_int16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { (Int16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint32.to_int n)) \/
     (Bit_uint16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint32.to_int n)) \/
     (Bit_int8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { (Int8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint32.to_int n)) \/
     (Bit_int32_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { (Int32.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint32.to_int n)) \/
     (Bit_int16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { (Int16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint16.to_int n)) \/
     (Bit_int8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { (Int8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint16.to_int n)) \/
     (Bit_int16_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { (Int16.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Int64.to_int n)) \/
     (Bit_int32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { (Int32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int64.to_int n)) \/
     (Bit_int16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { (Int16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int32.to_int n)) \/
     (Bit_int16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { (Int16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint64.to_int n)) \/
     (Bit_uint8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint32.to_int n)) \/
     (Bit_uint8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint16.to_int n)) \/
     (Bit_uint8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int8.to_int n)) \/
     (Bit_uint8_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { (Uint8.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int64.to_int n)) \/
     (Bit_uint8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { (Uint8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int32.to_int n)) \/
     (Bit_uint8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { (Uint8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int16.to_int n)) \/
     (Bit_uint8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { (Uint8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int8.to_int n)) \/
     (Bit_uint64_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { (Uint64.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true } ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int64.to_int n)) \/
     (Bit_uint64_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { (Uint64.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int32.to_int n)) \/
     (Bit_uint64_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { (Uint64.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int16.to_int n)) \/
     (Bit_uint64_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { (Uint64.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int8.to_int n)) \/
     (Bit_uint32_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { (Uint32.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true } ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int64.to_int n)) \/
     (Bit_uint32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { (Uint32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int32.to_int n)) \/
     (Bit_uint32_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { (Uint32.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int16.to_int n)) \/
     (Bit_uint32_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { (Uint32.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int8.to_int n)) \/
     (Bit_uint16_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { (Uint16.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true } ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int64.to_int n)) \/
     (Bit_uint16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { (Uint16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int32.to_int n)) \/
     (Bit_uint16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { (Uint16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int16.to_int n)) \/
     (Bit_uint16_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { (Uint16.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int64.to_int n)) \/
     (Bit_int8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { (Int8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int32.to_int n)) \/
     (Bit_int8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { (Int8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int16.to_int n)) \/
     (Bit_int8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { (Int8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Function_count_0

  use import core.Tag_table_type 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  val count_0
  (g_0_0 : (pointer __anonstruct_Graph_4)) 
   (f_0 : Int32.t) 
    (t_0 : Int32.t) 
     (__anonstruct_Vertex_2_vertices_31_alloc_table : (alloc_table
      __anonstruct_Vertex_2)) 
      (__anonstruct_Graph_4_g_0_13_alloc_table : (alloc_table
       __anonstruct_Graph_4)) 
       (__anonstruct_Edge_3_edges_32_alloc_table : (alloc_table
        __anonstruct_Edge_3)) 
        (__anonstruct_Edge_3_edges_32_tag_table : (tag_table
         __anonstruct_Edge_3)) 
         (__anonstruct_Graph_4_esize_g_0_13 : (memory __anonstruct_Graph_4
          Int32.t)) 
          (__anonstruct_Graph_4_ecnt_g_0_13 : (memory __anonstruct_Graph_4
           Int32.t)) 
           (__anonstruct_Graph_4_edges_g_0_13 : (memory __anonstruct_Graph_4
            (pointer __anonstruct_Edge_3))) 
            (__anonstruct_Graph_4_vsize_g_0_13 : (memory __anonstruct_Graph_4
             Int32.t)) 
             (__anonstruct_Graph_4_vertices_g_0_13 : (memory
              __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2))) 
              (__anonstruct_Edge_3_existent_0_edges_32 : (memory
               __anonstruct_Edge_3 Int32.t)) 
               (__anonstruct_Edge_3_to_edges_32 : (memory __anonstruct_Edge_3
                Int32.t)) 
                (__anonstruct_Edge_3_from_edges_32 : (memory
                 __anonstruct_Edge_3 Int32.t)) 
                 (__anonstruct_Vertex_2_existent_vertices_31 : (memory
                  __anonstruct_Vertex_2 Int32.t)) : Int32.t
                  requires { true }
                  ensures {
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 163 12 41#
                    "expl:Ensures clause"
                    ((=) (Int32.to_int result)
                    (all_count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
                    __anonstruct_Graph_4_esize_g_0_13
                    __anonstruct_Graph_4_edges_g_0_13
                    __anonstruct_Edge_3_existent_0_edges_32
                    __anonstruct_Edge_3_to_edges_32
                    __anonstruct_Edge_3_from_edges_32))) }
  
end

module Function_count_0_safe

  use import core.Tag_table_type 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use import Logic_graph_valid 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_LF__Axiomatic__ecnt_empty_g 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  val count_0
  (g_0_0 : (pointer __anonstruct_Graph_4)) 
   (f_0 : Int32.t) 
    (t_0 : Int32.t) 
     (__anonstruct_Vertex_2_vertices_31_alloc_table : (alloc_table
      __anonstruct_Vertex_2)) 
      (__anonstruct_Graph_4_g_0_13_alloc_table : (alloc_table
       __anonstruct_Graph_4)) 
       (__anonstruct_Edge_3_edges_32_alloc_table : (alloc_table
        __anonstruct_Edge_3)) 
        (__anonstruct_Edge_3_edges_32_tag_table : (tag_table
         __anonstruct_Edge_3)) 
         (__anonstruct_Graph_4_esize_g_0_13 : (memory __anonstruct_Graph_4
          Int32.t)) 
          (__anonstruct_Graph_4_ecnt_g_0_13 : (memory __anonstruct_Graph_4
           Int32.t)) 
           (__anonstruct_Graph_4_edges_g_0_13 : (memory __anonstruct_Graph_4
            (pointer __anonstruct_Edge_3))) 
            (__anonstruct_Graph_4_vsize_g_0_13 : (memory __anonstruct_Graph_4
             Int32.t)) 
             (__anonstruct_Graph_4_vertices_g_0_13 : (memory
              __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2))) 
              (__anonstruct_Edge_3_existent_0_edges_32 : (memory
               __anonstruct_Edge_3 Int32.t)) 
               (__anonstruct_Edge_3_to_edges_32 : (memory __anonstruct_Edge_3
                Int32.t)) 
                (__anonstruct_Edge_3_from_edges_32 : (memory
                 __anonstruct_Edge_3 Int32.t)) 
                 (__anonstruct_Vertex_2_existent_vertices_31 : (memory
                  __anonstruct_Vertex_2 Int32.t)) : Int32.t
                  requires {
                    ("expl:Internal"
                    (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                    ((#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                     _LF__Predicate__ecnt_empty_g)
                    /\
                    (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 158 13 22#
                     "expl:Requires clause"
                     (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                     ((#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                      ((<=)
                      (offset_min __anonstruct_Graph_4_g_0_13_alloc_table
                      g_0_0) (0)))
                     /\
                     (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                     ((#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                      ((>=)
                      (offset_max __anonstruct_Graph_4_g_0_13_alloc_table
                      g_0_0) (0)))
                     /\
                     (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                     ((=) true true)))))))
                    /\
                    (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 158 26 40#
                     "expl:Requires clause"
                     (graph_valid g_0_0
                     __anonstruct_Vertex_2_vertices_31_alloc_table
                     __anonstruct_Edge_3_edges_32_alloc_table
                     __anonstruct_Graph_4_esize_g_0_13
                     __anonstruct_Graph_4_ecnt_g_0_13
                     __anonstruct_Graph_4_edges_g_0_13
                     __anonstruct_Graph_4_vsize_g_0_13
                     __anonstruct_Graph_4_vertices_g_0_13
                     __anonstruct_Edge_3_existent_0_edges_32
                     __anonstruct_Edge_3_to_edges_32
                     __anonstruct_Edge_3_from_edges_32
                     __anonstruct_Vertex_2_existent_vertices_31))
                    /\
                    (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 159 13 28#
                     "expl:Requires clause"
                     (is_vertex g_0_0 (Int32.to_int f_0)
                     __anonstruct_Graph_4_vsize_g_0_13))
                    /\
                    (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 160 13 28#
                     "expl:Requires clause"
                     (is_vertex g_0_0 (Int32.to_int t_0)
                     __anonstruct_Graph_4_vsize_g_0_13))
                    /\
                    (#"3-2_c.jc" 284 12 803# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 161 13 36#
                     "expl:Requires clause"
                     (not
                     ((=)
                     (Int32.to_int
                     (select __anonstruct_Vertex_2_existent_vertices_31
                     (shift
                     (select __anonstruct_Graph_4_vertices_g_0_13 g_0_0)
                     (Int32.to_int f_0)))) (0))))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 162 13 36#
                    "expl:Requires clause"
                    (not
                    ((=)
                    (Int32.to_int
                    (select __anonstruct_Vertex_2_existent_vertices_31
                    (shift
                    (select __anonstruct_Graph_4_vertices_g_0_13 g_0_0)
                    (Int32.to_int t_0)))) (0))))))))))))))))) }
                  ensures {
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 163 12 41#
                    "expl:Ensures clause"
                    ((=) (Int32.to_int result)
                    (all_count g_0_0 (Int32.to_int f_0) (Int32.to_int t_0)
                    __anonstruct_Graph_4_esize_g_0_13
                    __anonstruct_Graph_4_edges_g_0_13
                    __anonstruct_Edge_3_existent_0_edges_32
                    __anonstruct_Edge_3_to_edges_32
                    __anonstruct_Edge_3_from_edges_32))) }
  
end

module Function_add_edge

  use import core.Tag_table_type 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_graph_valid 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  val add_edge
  (g_6 : (pointer __anonstruct_Graph_4)) 
   (f_2 : Int32.t) 
    (t_2 : Int32.t) 
     (__anonstruct_Graph_4_ecnt_g_14 : ref (memory __anonstruct_Graph_4
      Int32.t)) 
      (__anonstruct_Edge_3_existent_0_edges_34 : ref (memory
       __anonstruct_Edge_3 Int32.t)) 
       (__anonstruct_Edge_3_to_edges_34 : ref (memory __anonstruct_Edge_3
        Int32.t)) 
        (__anonstruct_Edge_3_from_edges_34 : ref (memory __anonstruct_Edge_3
         Int32.t)) 
         (__anonstruct_Vertex_2_vertices_33_alloc_table : (alloc_table
          __anonstruct_Vertex_2)) 
          (__anonstruct_Graph_4_g_14_alloc_table : (alloc_table
           __anonstruct_Graph_4)) 
           (__anonstruct_Edge_3_edges_34_alloc_table : (alloc_table
            __anonstruct_Edge_3)) 
            (__anonstruct_Edge_3_edges_34_tag_table : (tag_table
             __anonstruct_Edge_3)) 
             (__anonstruct_Graph_4_esize_g_14 : (memory __anonstruct_Graph_4
              Int32.t)) 
              (__anonstruct_Graph_4_edges_g_14 : (memory __anonstruct_Graph_4
               (pointer __anonstruct_Edge_3))) 
               (__anonstruct_Graph_4_vsize_g_14 : (memory
                __anonstruct_Graph_4 Int32.t)) 
                (__anonstruct_Graph_4_vertices_g_14 : (memory
                 __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2))) 
                 (__anonstruct_Vertex_2_existent_vertices_33 : (memory
                  __anonstruct_Vertex_2 Int32.t)) : unit
                  requires { true } reads {
                  __anonstruct_Edge_3_existent_0_edges_34,
                  __anonstruct_Edge_3_from_edges_34,
                  __anonstruct_Edge_3_to_edges_34,
                  __anonstruct_Graph_4_ecnt_g_14 } writes {
                  __anonstruct_Edge_3_existent_0_edges_34,
                  __anonstruct_Edge_3_from_edges_34,
                  __anonstruct_Edge_3_to_edges_34,
                  __anonstruct_Graph_4_ecnt_g_14 }
                  ensures {
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                    "expl:Ensures clause"
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                    "expl:Ensures clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                     "expl:Ensures clause"
                     (graph_valid g_6
                     __anonstruct_Vertex_2_vertices_33_alloc_table
                     __anonstruct_Edge_3_edges_34_alloc_table
                     __anonstruct_Graph_4_esize_g_14
                     !__anonstruct_Graph_4_ecnt_g_14
                     __anonstruct_Graph_4_edges_g_14
                     __anonstruct_Graph_4_vsize_g_14
                     __anonstruct_Graph_4_vertices_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34
                     __anonstruct_Vertex_2_existent_vertices_33))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                    "expl:Ensures clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 200 10 59#
                     "expl:Ensures clause"
                     ((=)
                     (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                     __anonstruct_Graph_4_esize_g_14
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (Int.(+)
                     (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                     __anonstruct_Graph_4_esize_g_14
                     __anonstruct_Graph_4_edges_g_14 (old
                     !__anonstruct_Edge_3_existent_0_edges_34) (old
                     !__anonstruct_Edge_3_to_edges_34) (old
                     !__anonstruct_Edge_3_from_edges_34)) (1))))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 201 10 108#
                    "expl:Ensures clause"
                    (forall f2_26 : int.
                     (forall t2_26 : int.
                      (((not ((=) f2_26 (Int32.to_int f_2))) \/
                       (not ((=) t2_26 (Int32.to_int t_2)))) ->
                       ((=)
                       (all_count g_6 f2_26 t2_26
                       __anonstruct_Graph_4_esize_g_14
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (all_count g_6 f2_26 t2_26
                       __anonstruct_Graph_4_esize_g_14
                       __anonstruct_Graph_4_edges_g_14 (old
                       !__anonstruct_Edge_3_existent_0_edges_34) (old
                       !__anonstruct_Edge_3_to_edges_34) (old
                       !__anonstruct_Edge_3_from_edges_34)))))))))))) }
  
end

module Function_add_edge_safe

  use import core.Tag_table_type 
  
  use import Root___anonstruct_Vertex_2 
  
  use import Root___anonstruct_Graph_4 
  
  use import Root___anonstruct_Edge_3 
  
  use import ref.Ref 
  
  use import core.Pointer 
  
  use import core.Memory 
  
  use import Logic_is_vertex 
  
  use import Logic_graph_valid 
  
  use import Logic_full 
  
  use import Logic_all_count 
  
  use enum.Int32 
  
  use import int.Int 
  
  use import Axiomatic_LF__Axiomatic__ecnt_empty_g 
  
  use import core.Alloc_table 
  
  use why3.Bool.Bool 
  
  use import Lemma_count_zero_l 
  
  use import Lemma_count_split_lemma 
  
  use import Lemma_count_one_l 
  
  use import Lemma_all_count_l2 
  
  use import Lemma_all_count_l 
  
  val add_edge
  (g_6 : (pointer __anonstruct_Graph_4)) 
   (f_2 : Int32.t) 
    (t_2 : Int32.t) 
     (__anonstruct_Graph_4_ecnt_g_14 : ref (memory __anonstruct_Graph_4
      Int32.t)) 
      (__anonstruct_Edge_3_existent_0_edges_34 : ref (memory
       __anonstruct_Edge_3 Int32.t)) 
       (__anonstruct_Edge_3_to_edges_34 : ref (memory __anonstruct_Edge_3
        Int32.t)) 
        (__anonstruct_Edge_3_from_edges_34 : ref (memory __anonstruct_Edge_3
         Int32.t)) 
         (__anonstruct_Vertex_2_vertices_33_alloc_table : (alloc_table
          __anonstruct_Vertex_2)) 
          (__anonstruct_Graph_4_g_14_alloc_table : (alloc_table
           __anonstruct_Graph_4)) 
           (__anonstruct_Edge_3_edges_34_alloc_table : (alloc_table
            __anonstruct_Edge_3)) 
            (__anonstruct_Edge_3_edges_34_tag_table : (tag_table
             __anonstruct_Edge_3)) 
             (__anonstruct_Graph_4_esize_g_14 : (memory __anonstruct_Graph_4
              Int32.t)) 
              (__anonstruct_Graph_4_edges_g_14 : (memory __anonstruct_Graph_4
               (pointer __anonstruct_Edge_3))) 
               (__anonstruct_Graph_4_vsize_g_14 : (memory
                __anonstruct_Graph_4 Int32.t)) 
                (__anonstruct_Graph_4_vertices_g_14 : (memory
                 __anonstruct_Graph_4 (pointer __anonstruct_Vertex_2))) 
                 (__anonstruct_Vertex_2_existent_vertices_33 : (memory
                  __anonstruct_Vertex_2 Int32.t)) : unit
                  requires {
                    ("expl:Internal"
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                     _LF__Predicate__ecnt_empty_g)
                    /\
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 193 11 20#
                     "expl:Requires clause"
                     (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                     ((#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                      ((<=)
                      (offset_min __anonstruct_Graph_4_g_14_alloc_table g_6)
                      (0)))
                     /\
                     (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                     ((#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                      ((>=)
                      (offset_max __anonstruct_Graph_4_g_14_alloc_table g_6)
                      (0)))
                     /\
                     (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                     ((=) true true)))))))
                    /\
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 193 24 38#
                     "expl:Requires clause"
                     (graph_valid g_6
                     __anonstruct_Vertex_2_vertices_33_alloc_table
                     __anonstruct_Edge_3_edges_34_alloc_table
                     __anonstruct_Graph_4_esize_g_14
                     !__anonstruct_Graph_4_ecnt_g_14
                     __anonstruct_Graph_4_edges_g_14
                     __anonstruct_Graph_4_vsize_g_14
                     __anonstruct_Graph_4_vertices_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34
                     __anonstruct_Vertex_2_existent_vertices_33))
                    /\
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 194 11 26#
                     "expl:Requires clause"
                     (is_vertex g_6 (Int32.to_int f_2)
                     __anonstruct_Graph_4_vsize_g_14))
                    /\
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 195 11 26#
                     "expl:Requires clause"
                     (is_vertex g_6 (Int32.to_int t_2)
                     __anonstruct_Graph_4_vsize_g_14))
                    /\
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 196 11 34#
                     "expl:Requires clause"
                     (not
                     ((=)
                     (Int32.to_int
                     (select __anonstruct_Vertex_2_existent_vertices_33
                     (shift (select __anonstruct_Graph_4_vertices_g_14 g_6)
                     (Int32.to_int f_2)))) (0))))
                    /\
                    (#"3-2_c.jc" 404 12 857# "expl:Requires clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 197 11 34#
                     "expl:Requires clause"
                     (not
                     ((=)
                     (Int32.to_int
                     (select __anonstruct_Vertex_2_existent_vertices_33
                     (shift (select __anonstruct_Graph_4_vertices_g_14 g_6)
                     (Int32.to_int t_2)))) (0))))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 198 11 19#
                    "expl:Requires clause"
                    (not
                    (full g_6 __anonstruct_Graph_4_esize_g_14
                    __anonstruct_Graph_4_edges_g_14
                    !__anonstruct_Edge_3_existent_0_edges_34))))))))))))))))))
                    }
                  reads { __anonstruct_Edge_3_existent_0_edges_34,
                  __anonstruct_Edge_3_from_edges_34,
                  __anonstruct_Edge_3_to_edges_34,
                  __anonstruct_Graph_4_ecnt_g_14 } writes {
                  __anonstruct_Edge_3_existent_0_edges_34,
                  __anonstruct_Edge_3_from_edges_34,
                  __anonstruct_Edge_3_to_edges_34,
                  __anonstruct_Graph_4_ecnt_g_14 }
                  ensures {
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                    "expl:Ensures clause"
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                    "expl:Ensures clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                     "expl:Ensures clause"
                     (graph_valid g_6
                     __anonstruct_Vertex_2_vertices_33_alloc_table
                     __anonstruct_Edge_3_edges_34_alloc_table
                     __anonstruct_Graph_4_esize_g_14
                     !__anonstruct_Graph_4_ecnt_g_14
                     __anonstruct_Graph_4_edges_g_14
                     __anonstruct_Graph_4_vsize_g_14
                     __anonstruct_Graph_4_vertices_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34
                     __anonstruct_Vertex_2_existent_vertices_33))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 199 10 24#
                    "expl:Ensures clause"
                    ((#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 200 10 59#
                     "expl:Ensures clause"
                     ((=)
                     (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                     __anonstruct_Graph_4_esize_g_14
                     __anonstruct_Graph_4_edges_g_14
                     !__anonstruct_Edge_3_existent_0_edges_34
                     !__anonstruct_Edge_3_to_edges_34
                     !__anonstruct_Edge_3_from_edges_34)
                     (Int.(+)
                     (all_count g_6 (Int32.to_int f_2) (Int32.to_int t_2)
                     __anonstruct_Graph_4_esize_g_14
                     __anonstruct_Graph_4_edges_g_14 (old
                     !__anonstruct_Edge_3_existent_0_edges_34) (old
                     !__anonstruct_Edge_3_to_edges_34) (old
                     !__anonstruct_Edge_3_from_edges_34)) (1))))
                    /\
                    (#"/home/ubse/why3/why-verify/task3/3_2/3-2.c" 201 10 108#
                    "expl:Ensures clause"
                    (forall f2_26 : int.
                     (forall t2_26 : int.
                      (((not ((=) f2_26 (Int32.to_int f_2))) \/
                       (not ((=) t2_26 (Int32.to_int t_2)))) ->
                       ((=)
                       (all_count g_6 f2_26 t2_26
                       __anonstruct_Graph_4_esize_g_14
                       __anonstruct_Graph_4_edges_g_14
                       !__anonstruct_Edge_3_existent_0_edges_34
                       !__anonstruct_Edge_3_to_edges_34
                       !__anonstruct_Edge_3_from_edges_34)
                       (all_count g_6 f2_26 t2_26
                       __anonstruct_Graph_4_esize_g_14
                       __anonstruct_Graph_4_edges_g_14 (old
                       !__anonstruct_Edge_3_existent_0_edges_34) (old
                       !__anonstruct_Edge_3_to_edges_34) (old
                       !__anonstruct_Edge_3_from_edges_34)))))))))))) }
  
end
